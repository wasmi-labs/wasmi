[package]
name = "wasmi"
version = "0.9.0"
edition = "2018"
authors = ["Nikolay Volf <nikvolf@gmail.com>", "Svyatoslav Nikolsky <svyatonik@yandex.ru>", "Sergey Pepyakin <s.pepyakin@gmail.com>"]
license = "MIT/Apache-2.0"
readme = "README.md"
repository = "https://github.com/paritytech/wasmi"
documentation = "https://paritytech.github.io/wasmi/"
description = "WebAssembly interpreter"
keywords = ["wasm", "webassembly", "bytecode", "interpreter"]
exclude = [ "/res/*", "/tests/*", "/fuzz/*", "/benches/*" ]

[dependencies]
validation = { package = "wasmi-validation", version = "0.4", path = "validation", default-features = false }
parity-wasm = { version = "0.42.0", default-features = false }
memory_units = "0.3.0"
libm = { version = "0.2.1", optional = true }
num-rational = { version = "0.2.2", default-features = false }
num-traits = { version = "0.2.8", default-features = false }
libc = { version = "0.2.58", optional = true}
errno = { version = "0.2.4", optional = true }
downcast-rs = { version = "1.2.0", default-features = false }

[dev-dependencies]
assert_matches = "1.1"
rand = "0.4.2"
wabt = "0.9"

[features]
default = ["std"]
# Disable for no_std support
std = [
    "parity-wasm/std",
    "validation/std",
    "num-rational/std",
    "num-rational/bigint-std",
    "num-traits/std",
    "libc",
    "downcast-rs/std"
]
# Enable for no_std support
core = [
    # `core` doesn't support mmaped memory
    "vec_memory",
    "validation/core",
    "libm"
]
# Enforce using the linear memory implementation based on `Vec` instead of
# mmap on unix systems.
#
# Useful for tests and if you need to minimize unsafe usage at the cost of performance on some
# workloads.
vec_memory = []

reduced-stack-buffer = [ "parity-wasm/reduced-stack-buffer" ]

[workspace]
members = ["validation"]
exclude = ["benches"]
