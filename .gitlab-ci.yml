# paritytech/wasmi

stages:
  - benchmarks
  - report

default:
  retry:
    max: 2

.docker-env:                       &docker-env
  image:                           "paritytech/ci-linux:staging"
  interruptible:                   true
  tags:
    - benchmark

.kubernetes-env:                   &kubernetes-env
  image:                           "paritytech/tools:latest"
  tags:
    - kubernetes-parity-build

# benchmarks
criterion-benchmark:
  stage:                           benchmarks
  rules:
    - if: $CI_COMMIT_REF_NAME =~ /^[0-9]+$/                   # PRs
  <<:                              *docker-env
  artifacts:
    name:                          "${CI_JOB_NAME}_${CI_COMMIT_REF_NAME}"
    when:                          on_success
    expire_in:                     1 days
    paths:
      - target/ci/
  script:
    # Show Versions
    - cargo --version
    - rustc --version

    - git fetch
    # Benchmark Branch: `master`
    - git checkout master
    - git pull
    - git submodule update --init --recursive
    - mkdir -p ./target/ci
    - pushd ./crates/wasmi/
    - cargo bench --bench benches -- --noplot --save-baseline master | tee ../../target/ci/bench-master
    - popd
    - git submodule deinit --all -f

    # Benchmark Branch: PR
    - git checkout $CI_COMMIT_SHA
    - git submodule update --init --recursive
    - pushd ./crates/wasmi/
    - cargo bench --bench benches -- --noplot --baseline master | tee ../../target/ci/bench-pr
    - popd

    # Save benchmark report
    - mv ./target/criterion ./target/ci/criterion

wasmtime-benchmark:
  stage:                           benchmarks
  rules:
    - if: $CI_COMMIT_REF_NAME =~ /^[0-9]+$/                   # PRs
  <<:                              *docker-env
  artifacts:
    name:                          "${CI_JOB_NAME}_${CI_COMMIT_REF_NAME}"
    when:                          on_success
    expire_in:                     1 days
    paths:
      - target/ci/
  script:
    # Show Versions
    - cargo --version
    - rustc --version

    # Install dependencies
    - cargo install cargo-wasi
    - curl https://wasmtime.dev/install.sh -sSf | bash
    - source ~/.profile

    # `wasmtime` Branch: `master`
    - git fetch
    - git checkout master
    - git pull
    - git submodule update --init --recursive
    - mkdir -p ./target/ci
    - cargo wasi build --profile bench --bench benches --verbose
    - cp `ls -t target/wasm32-wasi/release/deps/*wasi.wasm` target/ci/benches-master.wasm
    - pushd ./crates/wasmi/
    - wasmtime run --dir=. ../../target/ci/benches-master.wasm -- --bench --save-baseline master-wasm | tee ../../target/ci/wasmtime-master
    - popd
    - git submodule deinit --all -f
    - rm -rf target/wasm32-wasi

    # `wasmtime` Branch: `pr`
    - git checkout $CI_COMMIT_SHA
    - git submodule update --init --recursive
    - mkdir -p ./target/ci
    - cargo wasi build --profile bench --bench benches --verbose
    - cp `ls -t target/wasm32-wasi/release/deps/*wasi.wasm` target/ci/benches-pr.wasm
    - pushd ./crates/wasmi/
    - wasmtime run --dir=. ../../target/ci/benches-pr.wasm -- --bench --baseline master-wasm | tee ../../target/ci/wasmtime-pr
    - popd
    - mv ./crates/wasmi/target/criterion ./target/ci/wasmtime-criterion

# report
publish-report:
  stage:                           report
  needs:
    - criterion-benchmark
    - wasmtime-benchmark
  rules:
  - if: $CI_COMMIT_REF_NAME =~ /^[0-9]+$/                   # PRs
  <<:                              *kubernetes-env
  script:
    - bash ./scripts/ci/benchmarks-report.sh