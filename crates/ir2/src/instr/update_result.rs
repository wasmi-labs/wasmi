// This file is automatically generated by the `build.rs` script.
//
// Do _not_ edit this file directly but change `build.rs` script logic instead.

impl crate::UpdateOperatorResult for crate::Op {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        match *self {
            Self::Copy1_S { result, value } => 
                <crate::op::Copy1_S as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::Copy1_S { result, value },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::Copy1_S as crate::UpdateOperatorResult>::Output>>::from),
            Self::Copy { result, len_values } => 
                <crate::op::Copy as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::Copy { result, len_values },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::Copy as crate::UpdateOperatorResult>::Output>>::from),
            Self::Copy1I32_I { result, value } => 
                <crate::op::Copy1I32_I as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::Copy1I32_I { result, value },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::Copy1I32_I as crate::UpdateOperatorResult>::Output>>::from),
            Self::Copy1I64_R { result, value } => 
                <crate::op::Copy1I64_R as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::Copy1I64_R { result, value },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::Copy1I64_R as crate::UpdateOperatorResult>::Output>>::from),
            Self::Copy1I64_I { result, value } => 
                <crate::op::Copy1I64_I as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::Copy1I64_I { result, value },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::Copy1I64_I as crate::UpdateOperatorResult>::Output>>::from),
            Self::Copy1F32_R { result, value } => 
                <crate::op::Copy1F32_R as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::Copy1F32_R { result, value },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::Copy1F32_R as crate::UpdateOperatorResult>::Output>>::from),
            Self::Copy1F32_I { result, value } => 
                <crate::op::Copy1F32_I as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::Copy1F32_I { result, value },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::Copy1F32_I as crate::UpdateOperatorResult>::Output>>::from),
            Self::Copy1F64_R { result, value } => 
                <crate::op::Copy1F64_R as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::Copy1F64_R { result, value },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::Copy1F64_R as crate::UpdateOperatorResult>::Output>>::from),
            Self::Copy1F64_I { result, value } => 
                <crate::op::Copy1F64_I as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::Copy1F64_I { result, value },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::Copy1F64_I as crate::UpdateOperatorResult>::Output>>::from),
            Self::GlobalGet_S { result, index } => 
                <crate::op::GlobalGet_S as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::GlobalGet_S { result, index },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::GlobalGet_S as crate::UpdateOperatorResult>::Output>>::from),
            Self::GlobalGetI32_R { result, index } => 
                <crate::op::GlobalGetI32_R as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::GlobalGetI32_R { result, index },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::GlobalGetI32_R as crate::UpdateOperatorResult>::Output>>::from),
            Self::GlobalGetI64_R { result, index } => 
                <crate::op::GlobalGetI64_R as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::GlobalGetI64_R { result, index },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::GlobalGetI64_R as crate::UpdateOperatorResult>::Output>>::from),
            Self::GlobalGetF32_R { result, index } => 
                <crate::op::GlobalGetF32_R as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::GlobalGetF32_R { result, index },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::GlobalGetF32_R as crate::UpdateOperatorResult>::Output>>::from),
            Self::GlobalGetF64_R { result, index } => 
                <crate::op::GlobalGetF64_R as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::GlobalGetF64_R { result, index },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::GlobalGetF64_R as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Popcnt_RR { result, input } => 
                <crate::op::I32Popcnt_RR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Popcnt_RR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Popcnt_RR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Popcnt_RS { result, input } => 
                <crate::op::I32Popcnt_RS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Popcnt_RS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Popcnt_RS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Popcnt_SR { result, input } => 
                <crate::op::I32Popcnt_SR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Popcnt_SR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Popcnt_SR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Popcnt_SS { result, input } => 
                <crate::op::I32Popcnt_SS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Popcnt_SS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Popcnt_SS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Popcnt_RR { result, input } => 
                <crate::op::I64Popcnt_RR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Popcnt_RR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Popcnt_RR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Popcnt_RS { result, input } => 
                <crate::op::I64Popcnt_RS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Popcnt_RS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Popcnt_RS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Popcnt_SR { result, input } => 
                <crate::op::I64Popcnt_SR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Popcnt_SR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Popcnt_SR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Popcnt_SS { result, input } => 
                <crate::op::I64Popcnt_SS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Popcnt_SS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Popcnt_SS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Clz_RR { result, input } => 
                <crate::op::I32Clz_RR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Clz_RR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Clz_RR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Clz_RS { result, input } => 
                <crate::op::I32Clz_RS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Clz_RS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Clz_RS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Clz_SR { result, input } => 
                <crate::op::I32Clz_SR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Clz_SR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Clz_SR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Clz_SS { result, input } => 
                <crate::op::I32Clz_SS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Clz_SS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Clz_SS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Clz_RR { result, input } => 
                <crate::op::I64Clz_RR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Clz_RR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Clz_RR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Clz_RS { result, input } => 
                <crate::op::I64Clz_RS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Clz_RS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Clz_RS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Clz_SR { result, input } => 
                <crate::op::I64Clz_SR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Clz_SR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Clz_SR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Clz_SS { result, input } => 
                <crate::op::I64Clz_SS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Clz_SS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Clz_SS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Ctz_RR { result, input } => 
                <crate::op::I32Ctz_RR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Ctz_RR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Ctz_RR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Ctz_RS { result, input } => 
                <crate::op::I32Ctz_RS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Ctz_RS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Ctz_RS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Ctz_SR { result, input } => 
                <crate::op::I32Ctz_SR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Ctz_SR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Ctz_SR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Ctz_SS { result, input } => 
                <crate::op::I32Ctz_SS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Ctz_SS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Ctz_SS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Ctz_RR { result, input } => 
                <crate::op::I64Ctz_RR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Ctz_RR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Ctz_RR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Ctz_RS { result, input } => 
                <crate::op::I64Ctz_RS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Ctz_RS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Ctz_RS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Ctz_SR { result, input } => 
                <crate::op::I64Ctz_SR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Ctz_SR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Ctz_SR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Ctz_SS { result, input } => 
                <crate::op::I64Ctz_SS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Ctz_SS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Ctz_SS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Abs_RR { result, input } => 
                <crate::op::F32Abs_RR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Abs_RR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Abs_RR as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Abs_RS { result, input } => 
                <crate::op::F32Abs_RS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Abs_RS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Abs_RS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Abs_SR { result, input } => 
                <crate::op::F32Abs_SR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Abs_SR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Abs_SR as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Abs_SS { result, input } => 
                <crate::op::F32Abs_SS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Abs_SS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Abs_SS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Abs_RR { result, input } => 
                <crate::op::F64Abs_RR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Abs_RR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Abs_RR as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Abs_RS { result, input } => 
                <crate::op::F64Abs_RS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Abs_RS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Abs_RS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Abs_SR { result, input } => 
                <crate::op::F64Abs_SR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Abs_SR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Abs_SR as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Abs_SS { result, input } => 
                <crate::op::F64Abs_SS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Abs_SS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Abs_SS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Neg_RR { result, input } => 
                <crate::op::F32Neg_RR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Neg_RR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Neg_RR as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Neg_RS { result, input } => 
                <crate::op::F32Neg_RS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Neg_RS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Neg_RS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Neg_SR { result, input } => 
                <crate::op::F32Neg_SR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Neg_SR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Neg_SR as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Neg_SS { result, input } => 
                <crate::op::F32Neg_SS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Neg_SS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Neg_SS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Neg_RR { result, input } => 
                <crate::op::F64Neg_RR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Neg_RR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Neg_RR as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Neg_RS { result, input } => 
                <crate::op::F64Neg_RS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Neg_RS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Neg_RS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Neg_SR { result, input } => 
                <crate::op::F64Neg_SR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Neg_SR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Neg_SR as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Neg_SS { result, input } => 
                <crate::op::F64Neg_SS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Neg_SS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Neg_SS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Ceil_RR { result, input } => 
                <crate::op::F32Ceil_RR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Ceil_RR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Ceil_RR as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Ceil_RS { result, input } => 
                <crate::op::F32Ceil_RS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Ceil_RS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Ceil_RS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Ceil_SR { result, input } => 
                <crate::op::F32Ceil_SR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Ceil_SR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Ceil_SR as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Ceil_SS { result, input } => 
                <crate::op::F32Ceil_SS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Ceil_SS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Ceil_SS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Ceil_RR { result, input } => 
                <crate::op::F64Ceil_RR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Ceil_RR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Ceil_RR as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Ceil_RS { result, input } => 
                <crate::op::F64Ceil_RS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Ceil_RS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Ceil_RS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Ceil_SR { result, input } => 
                <crate::op::F64Ceil_SR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Ceil_SR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Ceil_SR as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Ceil_SS { result, input } => 
                <crate::op::F64Ceil_SS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Ceil_SS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Ceil_SS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Floor_RR { result, input } => 
                <crate::op::F32Floor_RR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Floor_RR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Floor_RR as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Floor_RS { result, input } => 
                <crate::op::F32Floor_RS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Floor_RS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Floor_RS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Floor_SR { result, input } => 
                <crate::op::F32Floor_SR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Floor_SR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Floor_SR as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Floor_SS { result, input } => 
                <crate::op::F32Floor_SS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Floor_SS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Floor_SS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Floor_RR { result, input } => 
                <crate::op::F64Floor_RR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Floor_RR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Floor_RR as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Floor_RS { result, input } => 
                <crate::op::F64Floor_RS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Floor_RS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Floor_RS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Floor_SR { result, input } => 
                <crate::op::F64Floor_SR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Floor_SR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Floor_SR as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Floor_SS { result, input } => 
                <crate::op::F64Floor_SS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Floor_SS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Floor_SS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Trunc_RR { result, input } => 
                <crate::op::F32Trunc_RR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Trunc_RR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Trunc_RR as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Trunc_RS { result, input } => 
                <crate::op::F32Trunc_RS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Trunc_RS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Trunc_RS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Trunc_SR { result, input } => 
                <crate::op::F32Trunc_SR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Trunc_SR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Trunc_SR as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Trunc_SS { result, input } => 
                <crate::op::F32Trunc_SS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Trunc_SS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Trunc_SS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Trunc_RR { result, input } => 
                <crate::op::F64Trunc_RR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Trunc_RR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Trunc_RR as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Trunc_RS { result, input } => 
                <crate::op::F64Trunc_RS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Trunc_RS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Trunc_RS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Trunc_SR { result, input } => 
                <crate::op::F64Trunc_SR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Trunc_SR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Trunc_SR as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Trunc_SS { result, input } => 
                <crate::op::F64Trunc_SS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Trunc_SS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Trunc_SS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Nearest_RR { result, input } => 
                <crate::op::F32Nearest_RR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Nearest_RR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Nearest_RR as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Nearest_RS { result, input } => 
                <crate::op::F32Nearest_RS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Nearest_RS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Nearest_RS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Nearest_SR { result, input } => 
                <crate::op::F32Nearest_SR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Nearest_SR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Nearest_SR as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Nearest_SS { result, input } => 
                <crate::op::F32Nearest_SS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Nearest_SS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Nearest_SS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Nearest_RR { result, input } => 
                <crate::op::F64Nearest_RR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Nearest_RR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Nearest_RR as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Nearest_RS { result, input } => 
                <crate::op::F64Nearest_RS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Nearest_RS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Nearest_RS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Nearest_SR { result, input } => 
                <crate::op::F64Nearest_SR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Nearest_SR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Nearest_SR as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Nearest_SS { result, input } => 
                <crate::op::F64Nearest_SS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Nearest_SS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Nearest_SS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Sqrt_RR { result, input } => 
                <crate::op::F32Sqrt_RR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Sqrt_RR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Sqrt_RR as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Sqrt_RS { result, input } => 
                <crate::op::F32Sqrt_RS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Sqrt_RS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Sqrt_RS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Sqrt_SR { result, input } => 
                <crate::op::F32Sqrt_SR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Sqrt_SR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Sqrt_SR as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Sqrt_SS { result, input } => 
                <crate::op::F32Sqrt_SS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Sqrt_SS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Sqrt_SS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Sqrt_RR { result, input } => 
                <crate::op::F64Sqrt_RR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Sqrt_RR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Sqrt_RR as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Sqrt_RS { result, input } => 
                <crate::op::F64Sqrt_RS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Sqrt_RS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Sqrt_RS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Sqrt_SR { result, input } => 
                <crate::op::F64Sqrt_SR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Sqrt_SR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Sqrt_SR as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Sqrt_SS { result, input } => 
                <crate::op::F64Sqrt_SS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Sqrt_SS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Sqrt_SS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Demote_RR { result, input } => 
                <crate::op::F32Demote_RR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Demote_RR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Demote_RR as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Demote_RS { result, input } => 
                <crate::op::F32Demote_RS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Demote_RS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Demote_RS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Demote_SR { result, input } => 
                <crate::op::F32Demote_SR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Demote_SR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Demote_SR as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Demote_SS { result, input } => 
                <crate::op::F32Demote_SS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Demote_SS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Demote_SS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Promote_RR { result, input } => 
                <crate::op::F64Promote_RR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Promote_RR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Promote_RR as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Promote_RS { result, input } => 
                <crate::op::F64Promote_RS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Promote_RS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Promote_RS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Promote_SR { result, input } => 
                <crate::op::F64Promote_SR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Promote_SR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Promote_SR as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Promote_SS { result, input } => 
                <crate::op::F64Promote_SS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Promote_SS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Promote_SS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32ConvertI32S_RR { result, input } => 
                <crate::op::F32ConvertI32S_RR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32ConvertI32S_RR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32ConvertI32S_RR as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32ConvertI32S_RS { result, input } => 
                <crate::op::F32ConvertI32S_RS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32ConvertI32S_RS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32ConvertI32S_RS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32ConvertI32S_SR { result, input } => 
                <crate::op::F32ConvertI32S_SR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32ConvertI32S_SR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32ConvertI32S_SR as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32ConvertI32S_SS { result, input } => 
                <crate::op::F32ConvertI32S_SS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32ConvertI32S_SS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32ConvertI32S_SS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32ConvertI32U_RR { result, input } => 
                <crate::op::F32ConvertI32U_RR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32ConvertI32U_RR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32ConvertI32U_RR as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32ConvertI32U_RS { result, input } => 
                <crate::op::F32ConvertI32U_RS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32ConvertI32U_RS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32ConvertI32U_RS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32ConvertI32U_SR { result, input } => 
                <crate::op::F32ConvertI32U_SR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32ConvertI32U_SR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32ConvertI32U_SR as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32ConvertI32U_SS { result, input } => 
                <crate::op::F32ConvertI32U_SS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32ConvertI32U_SS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32ConvertI32U_SS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32ConvertI64S_RR { result, input } => 
                <crate::op::F32ConvertI64S_RR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32ConvertI64S_RR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32ConvertI64S_RR as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32ConvertI64S_RS { result, input } => 
                <crate::op::F32ConvertI64S_RS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32ConvertI64S_RS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32ConvertI64S_RS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32ConvertI64S_SR { result, input } => 
                <crate::op::F32ConvertI64S_SR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32ConvertI64S_SR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32ConvertI64S_SR as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32ConvertI64S_SS { result, input } => 
                <crate::op::F32ConvertI64S_SS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32ConvertI64S_SS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32ConvertI64S_SS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32ConvertI64U_RR { result, input } => 
                <crate::op::F32ConvertI64U_RR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32ConvertI64U_RR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32ConvertI64U_RR as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32ConvertI64U_RS { result, input } => 
                <crate::op::F32ConvertI64U_RS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32ConvertI64U_RS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32ConvertI64U_RS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32ConvertI64U_SR { result, input } => 
                <crate::op::F32ConvertI64U_SR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32ConvertI64U_SR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32ConvertI64U_SR as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32ConvertI64U_SS { result, input } => 
                <crate::op::F32ConvertI64U_SS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32ConvertI64U_SS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32ConvertI64U_SS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64ConvertI32S_RR { result, input } => 
                <crate::op::F64ConvertI32S_RR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64ConvertI32S_RR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64ConvertI32S_RR as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64ConvertI32S_RS { result, input } => 
                <crate::op::F64ConvertI32S_RS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64ConvertI32S_RS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64ConvertI32S_RS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64ConvertI32S_SR { result, input } => 
                <crate::op::F64ConvertI32S_SR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64ConvertI32S_SR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64ConvertI32S_SR as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64ConvertI32S_SS { result, input } => 
                <crate::op::F64ConvertI32S_SS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64ConvertI32S_SS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64ConvertI32S_SS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64ConvertI32U_RR { result, input } => 
                <crate::op::F64ConvertI32U_RR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64ConvertI32U_RR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64ConvertI32U_RR as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64ConvertI32U_RS { result, input } => 
                <crate::op::F64ConvertI32U_RS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64ConvertI32U_RS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64ConvertI32U_RS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64ConvertI32U_SR { result, input } => 
                <crate::op::F64ConvertI32U_SR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64ConvertI32U_SR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64ConvertI32U_SR as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64ConvertI32U_SS { result, input } => 
                <crate::op::F64ConvertI32U_SS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64ConvertI32U_SS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64ConvertI32U_SS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64ConvertI64S_RR { result, input } => 
                <crate::op::F64ConvertI64S_RR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64ConvertI64S_RR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64ConvertI64S_RR as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64ConvertI64S_RS { result, input } => 
                <crate::op::F64ConvertI64S_RS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64ConvertI64S_RS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64ConvertI64S_RS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64ConvertI64S_SR { result, input } => 
                <crate::op::F64ConvertI64S_SR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64ConvertI64S_SR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64ConvertI64S_SR as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64ConvertI64S_SS { result, input } => 
                <crate::op::F64ConvertI64S_SS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64ConvertI64S_SS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64ConvertI64S_SS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64ConvertI64U_RR { result, input } => 
                <crate::op::F64ConvertI64U_RR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64ConvertI64U_RR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64ConvertI64U_RR as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64ConvertI64U_RS { result, input } => 
                <crate::op::F64ConvertI64U_RS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64ConvertI64U_RS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64ConvertI64U_RS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64ConvertI64U_SR { result, input } => 
                <crate::op::F64ConvertI64U_SR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64ConvertI64U_SR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64ConvertI64U_SR as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64ConvertI64U_SS { result, input } => 
                <crate::op::F64ConvertI64U_SS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64ConvertI64U_SS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64ConvertI64U_SS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32TruncF32S_RR { result, input } => 
                <crate::op::I32TruncF32S_RR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32TruncF32S_RR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32TruncF32S_RR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32TruncF32S_RS { result, input } => 
                <crate::op::I32TruncF32S_RS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32TruncF32S_RS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32TruncF32S_RS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32TruncF32S_SR { result, input } => 
                <crate::op::I32TruncF32S_SR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32TruncF32S_SR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32TruncF32S_SR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32TruncF32S_SS { result, input } => 
                <crate::op::I32TruncF32S_SS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32TruncF32S_SS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32TruncF32S_SS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32TruncF32U_RR { result, input } => 
                <crate::op::I32TruncF32U_RR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32TruncF32U_RR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32TruncF32U_RR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32TruncF32U_RS { result, input } => 
                <crate::op::I32TruncF32U_RS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32TruncF32U_RS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32TruncF32U_RS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32TruncF32U_SR { result, input } => 
                <crate::op::I32TruncF32U_SR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32TruncF32U_SR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32TruncF32U_SR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32TruncF32U_SS { result, input } => 
                <crate::op::I32TruncF32U_SS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32TruncF32U_SS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32TruncF32U_SS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32TruncF64S_RR { result, input } => 
                <crate::op::I32TruncF64S_RR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32TruncF64S_RR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32TruncF64S_RR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32TruncF64S_RS { result, input } => 
                <crate::op::I32TruncF64S_RS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32TruncF64S_RS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32TruncF64S_RS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32TruncF64S_SR { result, input } => 
                <crate::op::I32TruncF64S_SR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32TruncF64S_SR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32TruncF64S_SR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32TruncF64S_SS { result, input } => 
                <crate::op::I32TruncF64S_SS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32TruncF64S_SS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32TruncF64S_SS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32TruncF64U_RR { result, input } => 
                <crate::op::I32TruncF64U_RR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32TruncF64U_RR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32TruncF64U_RR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32TruncF64U_RS { result, input } => 
                <crate::op::I32TruncF64U_RS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32TruncF64U_RS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32TruncF64U_RS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32TruncF64U_SR { result, input } => 
                <crate::op::I32TruncF64U_SR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32TruncF64U_SR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32TruncF64U_SR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32TruncF64U_SS { result, input } => 
                <crate::op::I32TruncF64U_SS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32TruncF64U_SS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32TruncF64U_SS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64TruncF32S_RR { result, input } => 
                <crate::op::I64TruncF32S_RR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64TruncF32S_RR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64TruncF32S_RR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64TruncF32S_RS { result, input } => 
                <crate::op::I64TruncF32S_RS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64TruncF32S_RS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64TruncF32S_RS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64TruncF32S_SR { result, input } => 
                <crate::op::I64TruncF32S_SR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64TruncF32S_SR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64TruncF32S_SR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64TruncF32S_SS { result, input } => 
                <crate::op::I64TruncF32S_SS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64TruncF32S_SS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64TruncF32S_SS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64TruncF32U_RR { result, input } => 
                <crate::op::I64TruncF32U_RR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64TruncF32U_RR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64TruncF32U_RR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64TruncF32U_RS { result, input } => 
                <crate::op::I64TruncF32U_RS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64TruncF32U_RS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64TruncF32U_RS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64TruncF32U_SR { result, input } => 
                <crate::op::I64TruncF32U_SR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64TruncF32U_SR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64TruncF32U_SR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64TruncF32U_SS { result, input } => 
                <crate::op::I64TruncF32U_SS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64TruncF32U_SS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64TruncF32U_SS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64TruncF64S_RR { result, input } => 
                <crate::op::I64TruncF64S_RR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64TruncF64S_RR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64TruncF64S_RR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64TruncF64S_RS { result, input } => 
                <crate::op::I64TruncF64S_RS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64TruncF64S_RS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64TruncF64S_RS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64TruncF64S_SR { result, input } => 
                <crate::op::I64TruncF64S_SR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64TruncF64S_SR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64TruncF64S_SR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64TruncF64S_SS { result, input } => 
                <crate::op::I64TruncF64S_SS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64TruncF64S_SS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64TruncF64S_SS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64TruncF64U_RR { result, input } => 
                <crate::op::I64TruncF64U_RR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64TruncF64U_RR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64TruncF64U_RR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64TruncF64U_RS { result, input } => 
                <crate::op::I64TruncF64U_RS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64TruncF64U_RS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64TruncF64U_RS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64TruncF64U_SR { result, input } => 
                <crate::op::I64TruncF64U_SR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64TruncF64U_SR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64TruncF64U_SR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64TruncF64U_SS { result, input } => 
                <crate::op::I64TruncF64U_SS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64TruncF64U_SS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64TruncF64U_SS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32TruncSatF32S_RR { result, input } => 
                <crate::op::I32TruncSatF32S_RR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32TruncSatF32S_RR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32TruncSatF32S_RR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32TruncSatF32S_RS { result, input } => 
                <crate::op::I32TruncSatF32S_RS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32TruncSatF32S_RS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32TruncSatF32S_RS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32TruncSatF32S_SR { result, input } => 
                <crate::op::I32TruncSatF32S_SR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32TruncSatF32S_SR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32TruncSatF32S_SR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32TruncSatF32S_SS { result, input } => 
                <crate::op::I32TruncSatF32S_SS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32TruncSatF32S_SS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32TruncSatF32S_SS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32TruncSatF32U_RR { result, input } => 
                <crate::op::I32TruncSatF32U_RR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32TruncSatF32U_RR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32TruncSatF32U_RR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32TruncSatF32U_RS { result, input } => 
                <crate::op::I32TruncSatF32U_RS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32TruncSatF32U_RS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32TruncSatF32U_RS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32TruncSatF32U_SR { result, input } => 
                <crate::op::I32TruncSatF32U_SR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32TruncSatF32U_SR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32TruncSatF32U_SR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32TruncSatF32U_SS { result, input } => 
                <crate::op::I32TruncSatF32U_SS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32TruncSatF32U_SS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32TruncSatF32U_SS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32TruncSatF64S_RR { result, input } => 
                <crate::op::I32TruncSatF64S_RR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32TruncSatF64S_RR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32TruncSatF64S_RR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32TruncSatF64S_RS { result, input } => 
                <crate::op::I32TruncSatF64S_RS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32TruncSatF64S_RS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32TruncSatF64S_RS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32TruncSatF64S_SR { result, input } => 
                <crate::op::I32TruncSatF64S_SR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32TruncSatF64S_SR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32TruncSatF64S_SR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32TruncSatF64S_SS { result, input } => 
                <crate::op::I32TruncSatF64S_SS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32TruncSatF64S_SS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32TruncSatF64S_SS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32TruncSatF64U_RR { result, input } => 
                <crate::op::I32TruncSatF64U_RR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32TruncSatF64U_RR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32TruncSatF64U_RR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32TruncSatF64U_RS { result, input } => 
                <crate::op::I32TruncSatF64U_RS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32TruncSatF64U_RS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32TruncSatF64U_RS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32TruncSatF64U_SR { result, input } => 
                <crate::op::I32TruncSatF64U_SR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32TruncSatF64U_SR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32TruncSatF64U_SR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32TruncSatF64U_SS { result, input } => 
                <crate::op::I32TruncSatF64U_SS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32TruncSatF64U_SS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32TruncSatF64U_SS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64TruncSatF32S_RR { result, input } => 
                <crate::op::I64TruncSatF32S_RR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64TruncSatF32S_RR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64TruncSatF32S_RR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64TruncSatF32S_RS { result, input } => 
                <crate::op::I64TruncSatF32S_RS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64TruncSatF32S_RS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64TruncSatF32S_RS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64TruncSatF32S_SR { result, input } => 
                <crate::op::I64TruncSatF32S_SR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64TruncSatF32S_SR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64TruncSatF32S_SR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64TruncSatF32S_SS { result, input } => 
                <crate::op::I64TruncSatF32S_SS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64TruncSatF32S_SS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64TruncSatF32S_SS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64TruncSatF32U_RR { result, input } => 
                <crate::op::I64TruncSatF32U_RR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64TruncSatF32U_RR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64TruncSatF32U_RR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64TruncSatF32U_RS { result, input } => 
                <crate::op::I64TruncSatF32U_RS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64TruncSatF32U_RS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64TruncSatF32U_RS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64TruncSatF32U_SR { result, input } => 
                <crate::op::I64TruncSatF32U_SR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64TruncSatF32U_SR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64TruncSatF32U_SR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64TruncSatF32U_SS { result, input } => 
                <crate::op::I64TruncSatF32U_SS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64TruncSatF32U_SS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64TruncSatF32U_SS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64TruncSatF64S_RR { result, input } => 
                <crate::op::I64TruncSatF64S_RR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64TruncSatF64S_RR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64TruncSatF64S_RR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64TruncSatF64S_RS { result, input } => 
                <crate::op::I64TruncSatF64S_RS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64TruncSatF64S_RS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64TruncSatF64S_RS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64TruncSatF64S_SR { result, input } => 
                <crate::op::I64TruncSatF64S_SR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64TruncSatF64S_SR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64TruncSatF64S_SR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64TruncSatF64S_SS { result, input } => 
                <crate::op::I64TruncSatF64S_SS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64TruncSatF64S_SS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64TruncSatF64S_SS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64TruncSatF64U_RR { result, input } => 
                <crate::op::I64TruncSatF64U_RR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64TruncSatF64U_RR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64TruncSatF64U_RR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64TruncSatF64U_RS { result, input } => 
                <crate::op::I64TruncSatF64U_RS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64TruncSatF64U_RS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64TruncSatF64U_RS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64TruncSatF64U_SR { result, input } => 
                <crate::op::I64TruncSatF64U_SR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64TruncSatF64U_SR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64TruncSatF64U_SR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64TruncSatF64U_SS { result, input } => 
                <crate::op::I64TruncSatF64U_SS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64TruncSatF64U_SS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64TruncSatF64U_SS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Extend8S_RR { result, input } => 
                <crate::op::I32Extend8S_RR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Extend8S_RR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Extend8S_RR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Extend8S_RS { result, input } => 
                <crate::op::I32Extend8S_RS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Extend8S_RS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Extend8S_RS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Extend8S_SR { result, input } => 
                <crate::op::I32Extend8S_SR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Extend8S_SR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Extend8S_SR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Extend8S_SS { result, input } => 
                <crate::op::I32Extend8S_SS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Extend8S_SS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Extend8S_SS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Extend16S_RR { result, input } => 
                <crate::op::I32Extend16S_RR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Extend16S_RR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Extend16S_RR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Extend16S_RS { result, input } => 
                <crate::op::I32Extend16S_RS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Extend16S_RS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Extend16S_RS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Extend16S_SR { result, input } => 
                <crate::op::I32Extend16S_SR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Extend16S_SR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Extend16S_SR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Extend16S_SS { result, input } => 
                <crate::op::I32Extend16S_SS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Extend16S_SS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Extend16S_SS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Extend8S_RR { result, input } => 
                <crate::op::I64Extend8S_RR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Extend8S_RR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Extend8S_RR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Extend8S_RS { result, input } => 
                <crate::op::I64Extend8S_RS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Extend8S_RS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Extend8S_RS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Extend8S_SR { result, input } => 
                <crate::op::I64Extend8S_SR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Extend8S_SR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Extend8S_SR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Extend8S_SS { result, input } => 
                <crate::op::I64Extend8S_SS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Extend8S_SS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Extend8S_SS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Extend16S_RR { result, input } => 
                <crate::op::I64Extend16S_RR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Extend16S_RR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Extend16S_RR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Extend16S_RS { result, input } => 
                <crate::op::I64Extend16S_RS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Extend16S_RS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Extend16S_RS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Extend16S_SR { result, input } => 
                <crate::op::I64Extend16S_SR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Extend16S_SR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Extend16S_SR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Extend16S_SS { result, input } => 
                <crate::op::I64Extend16S_SS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Extend16S_SS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Extend16S_SS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Extend32S_RR { result, input } => 
                <crate::op::I64Extend32S_RR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Extend32S_RR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Extend32S_RR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Extend32S_RS { result, input } => 
                <crate::op::I64Extend32S_RS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Extend32S_RS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Extend32S_RS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Extend32S_SR { result, input } => 
                <crate::op::I64Extend32S_SR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Extend32S_SR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Extend32S_SR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Extend32S_SS { result, input } => 
                <crate::op::I64Extend32S_SS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Extend32S_SS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Extend32S_SS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32WrapI64_RR { result, input } => 
                <crate::op::I32WrapI64_RR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32WrapI64_RR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32WrapI64_RR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32WrapI64_RS { result, input } => 
                <crate::op::I32WrapI64_RS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32WrapI64_RS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32WrapI64_RS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32WrapI64_SR { result, input } => 
                <crate::op::I32WrapI64_SR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32WrapI64_SR { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32WrapI64_SR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32WrapI64_SS { result, input } => 
                <crate::op::I32WrapI64_SS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32WrapI64_SS { result, input },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32WrapI64_SS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Add_RRS { result, lhs, rhs } => 
                <crate::op::I32Add_RRS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Add_RRS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Add_RRS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Add_RRI { result, lhs, rhs } => 
                <crate::op::I32Add_RRI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Add_RRI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Add_RRI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Add_RSS { result, lhs, rhs } => 
                <crate::op::I32Add_RSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Add_RSS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Add_RSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Add_RSI { result, lhs, rhs } => 
                <crate::op::I32Add_RSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Add_RSI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Add_RSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Add_SRS { result, lhs, rhs } => 
                <crate::op::I32Add_SRS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Add_SRS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Add_SRS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Add_SRI { result, lhs, rhs } => 
                <crate::op::I32Add_SRI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Add_SRI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Add_SRI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Add_SSS { result, lhs, rhs } => 
                <crate::op::I32Add_SSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Add_SSS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Add_SSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Add_SSI { result, lhs, rhs } => 
                <crate::op::I32Add_SSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Add_SSI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Add_SSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Add_RRS { result, lhs, rhs } => 
                <crate::op::I64Add_RRS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Add_RRS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Add_RRS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Add_RRI { result, lhs, rhs } => 
                <crate::op::I64Add_RRI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Add_RRI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Add_RRI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Add_RSS { result, lhs, rhs } => 
                <crate::op::I64Add_RSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Add_RSS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Add_RSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Add_RSI { result, lhs, rhs } => 
                <crate::op::I64Add_RSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Add_RSI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Add_RSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Add_SRS { result, lhs, rhs } => 
                <crate::op::I64Add_SRS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Add_SRS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Add_SRS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Add_SRI { result, lhs, rhs } => 
                <crate::op::I64Add_SRI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Add_SRI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Add_SRI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Add_SSS { result, lhs, rhs } => 
                <crate::op::I64Add_SSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Add_SSS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Add_SSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Add_SSI { result, lhs, rhs } => 
                <crate::op::I64Add_SSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Add_SSI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Add_SSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Mul_RRS { result, lhs, rhs } => 
                <crate::op::I32Mul_RRS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Mul_RRS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Mul_RRS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Mul_RRI { result, lhs, rhs } => 
                <crate::op::I32Mul_RRI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Mul_RRI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Mul_RRI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Mul_RSS { result, lhs, rhs } => 
                <crate::op::I32Mul_RSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Mul_RSS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Mul_RSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Mul_RSI { result, lhs, rhs } => 
                <crate::op::I32Mul_RSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Mul_RSI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Mul_RSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Mul_SRS { result, lhs, rhs } => 
                <crate::op::I32Mul_SRS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Mul_SRS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Mul_SRS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Mul_SRI { result, lhs, rhs } => 
                <crate::op::I32Mul_SRI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Mul_SRI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Mul_SRI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Mul_SSS { result, lhs, rhs } => 
                <crate::op::I32Mul_SSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Mul_SSS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Mul_SSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Mul_SSI { result, lhs, rhs } => 
                <crate::op::I32Mul_SSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Mul_SSI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Mul_SSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Mul_RRS { result, lhs, rhs } => 
                <crate::op::I64Mul_RRS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Mul_RRS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Mul_RRS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Mul_RRI { result, lhs, rhs } => 
                <crate::op::I64Mul_RRI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Mul_RRI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Mul_RRI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Mul_RSS { result, lhs, rhs } => 
                <crate::op::I64Mul_RSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Mul_RSS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Mul_RSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Mul_RSI { result, lhs, rhs } => 
                <crate::op::I64Mul_RSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Mul_RSI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Mul_RSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Mul_SRS { result, lhs, rhs } => 
                <crate::op::I64Mul_SRS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Mul_SRS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Mul_SRS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Mul_SRI { result, lhs, rhs } => 
                <crate::op::I64Mul_SRI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Mul_SRI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Mul_SRI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Mul_SSS { result, lhs, rhs } => 
                <crate::op::I64Mul_SSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Mul_SSS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Mul_SSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Mul_SSI { result, lhs, rhs } => 
                <crate::op::I64Mul_SSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Mul_SSI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Mul_SSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32BitAnd_RRS { result, lhs, rhs } => 
                <crate::op::I32BitAnd_RRS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32BitAnd_RRS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32BitAnd_RRS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32BitAnd_RRI { result, lhs, rhs } => 
                <crate::op::I32BitAnd_RRI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32BitAnd_RRI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32BitAnd_RRI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32BitAnd_RSS { result, lhs, rhs } => 
                <crate::op::I32BitAnd_RSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32BitAnd_RSS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32BitAnd_RSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32BitAnd_RSI { result, lhs, rhs } => 
                <crate::op::I32BitAnd_RSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32BitAnd_RSI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32BitAnd_RSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32BitAnd_SRS { result, lhs, rhs } => 
                <crate::op::I32BitAnd_SRS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32BitAnd_SRS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32BitAnd_SRS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32BitAnd_SRI { result, lhs, rhs } => 
                <crate::op::I32BitAnd_SRI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32BitAnd_SRI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32BitAnd_SRI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32BitAnd_SSS { result, lhs, rhs } => 
                <crate::op::I32BitAnd_SSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32BitAnd_SSS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32BitAnd_SSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32BitAnd_SSI { result, lhs, rhs } => 
                <crate::op::I32BitAnd_SSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32BitAnd_SSI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32BitAnd_SSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64BitAnd_RRS { result, lhs, rhs } => 
                <crate::op::I64BitAnd_RRS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64BitAnd_RRS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64BitAnd_RRS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64BitAnd_RRI { result, lhs, rhs } => 
                <crate::op::I64BitAnd_RRI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64BitAnd_RRI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64BitAnd_RRI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64BitAnd_RSS { result, lhs, rhs } => 
                <crate::op::I64BitAnd_RSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64BitAnd_RSS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64BitAnd_RSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64BitAnd_RSI { result, lhs, rhs } => 
                <crate::op::I64BitAnd_RSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64BitAnd_RSI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64BitAnd_RSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64BitAnd_SRS { result, lhs, rhs } => 
                <crate::op::I64BitAnd_SRS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64BitAnd_SRS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64BitAnd_SRS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64BitAnd_SRI { result, lhs, rhs } => 
                <crate::op::I64BitAnd_SRI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64BitAnd_SRI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64BitAnd_SRI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64BitAnd_SSS { result, lhs, rhs } => 
                <crate::op::I64BitAnd_SSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64BitAnd_SSS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64BitAnd_SSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64BitAnd_SSI { result, lhs, rhs } => 
                <crate::op::I64BitAnd_SSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64BitAnd_SSI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64BitAnd_SSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32BitOr_RRS { result, lhs, rhs } => 
                <crate::op::I32BitOr_RRS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32BitOr_RRS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32BitOr_RRS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32BitOr_RRI { result, lhs, rhs } => 
                <crate::op::I32BitOr_RRI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32BitOr_RRI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32BitOr_RRI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32BitOr_RSS { result, lhs, rhs } => 
                <crate::op::I32BitOr_RSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32BitOr_RSS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32BitOr_RSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32BitOr_RSI { result, lhs, rhs } => 
                <crate::op::I32BitOr_RSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32BitOr_RSI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32BitOr_RSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32BitOr_SRS { result, lhs, rhs } => 
                <crate::op::I32BitOr_SRS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32BitOr_SRS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32BitOr_SRS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32BitOr_SRI { result, lhs, rhs } => 
                <crate::op::I32BitOr_SRI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32BitOr_SRI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32BitOr_SRI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32BitOr_SSS { result, lhs, rhs } => 
                <crate::op::I32BitOr_SSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32BitOr_SSS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32BitOr_SSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32BitOr_SSI { result, lhs, rhs } => 
                <crate::op::I32BitOr_SSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32BitOr_SSI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32BitOr_SSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64BitOr_RRS { result, lhs, rhs } => 
                <crate::op::I64BitOr_RRS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64BitOr_RRS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64BitOr_RRS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64BitOr_RRI { result, lhs, rhs } => 
                <crate::op::I64BitOr_RRI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64BitOr_RRI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64BitOr_RRI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64BitOr_RSS { result, lhs, rhs } => 
                <crate::op::I64BitOr_RSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64BitOr_RSS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64BitOr_RSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64BitOr_RSI { result, lhs, rhs } => 
                <crate::op::I64BitOr_RSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64BitOr_RSI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64BitOr_RSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64BitOr_SRS { result, lhs, rhs } => 
                <crate::op::I64BitOr_SRS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64BitOr_SRS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64BitOr_SRS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64BitOr_SRI { result, lhs, rhs } => 
                <crate::op::I64BitOr_SRI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64BitOr_SRI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64BitOr_SRI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64BitOr_SSS { result, lhs, rhs } => 
                <crate::op::I64BitOr_SSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64BitOr_SSS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64BitOr_SSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64BitOr_SSI { result, lhs, rhs } => 
                <crate::op::I64BitOr_SSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64BitOr_SSI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64BitOr_SSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32BitXor_RRS { result, lhs, rhs } => 
                <crate::op::I32BitXor_RRS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32BitXor_RRS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32BitXor_RRS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32BitXor_RRI { result, lhs, rhs } => 
                <crate::op::I32BitXor_RRI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32BitXor_RRI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32BitXor_RRI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32BitXor_RSS { result, lhs, rhs } => 
                <crate::op::I32BitXor_RSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32BitXor_RSS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32BitXor_RSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32BitXor_RSI { result, lhs, rhs } => 
                <crate::op::I32BitXor_RSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32BitXor_RSI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32BitXor_RSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32BitXor_SRS { result, lhs, rhs } => 
                <crate::op::I32BitXor_SRS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32BitXor_SRS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32BitXor_SRS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32BitXor_SRI { result, lhs, rhs } => 
                <crate::op::I32BitXor_SRI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32BitXor_SRI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32BitXor_SRI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32BitXor_SSS { result, lhs, rhs } => 
                <crate::op::I32BitXor_SSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32BitXor_SSS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32BitXor_SSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32BitXor_SSI { result, lhs, rhs } => 
                <crate::op::I32BitXor_SSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32BitXor_SSI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32BitXor_SSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64BitXor_RRS { result, lhs, rhs } => 
                <crate::op::I64BitXor_RRS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64BitXor_RRS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64BitXor_RRS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64BitXor_RRI { result, lhs, rhs } => 
                <crate::op::I64BitXor_RRI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64BitXor_RRI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64BitXor_RRI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64BitXor_RSS { result, lhs, rhs } => 
                <crate::op::I64BitXor_RSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64BitXor_RSS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64BitXor_RSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64BitXor_RSI { result, lhs, rhs } => 
                <crate::op::I64BitXor_RSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64BitXor_RSI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64BitXor_RSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64BitXor_SRS { result, lhs, rhs } => 
                <crate::op::I64BitXor_SRS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64BitXor_SRS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64BitXor_SRS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64BitXor_SRI { result, lhs, rhs } => 
                <crate::op::I64BitXor_SRI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64BitXor_SRI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64BitXor_SRI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64BitXor_SSS { result, lhs, rhs } => 
                <crate::op::I64BitXor_SSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64BitXor_SSS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64BitXor_SSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64BitXor_SSI { result, lhs, rhs } => 
                <crate::op::I64BitXor_SSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64BitXor_SSI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64BitXor_SSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32And_RRS { result, lhs, rhs } => 
                <crate::op::I32And_RRS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32And_RRS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32And_RRS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32And_RRI { result, lhs, rhs } => 
                <crate::op::I32And_RRI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32And_RRI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32And_RRI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32And_RSS { result, lhs, rhs } => 
                <crate::op::I32And_RSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32And_RSS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32And_RSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32And_RSI { result, lhs, rhs } => 
                <crate::op::I32And_RSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32And_RSI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32And_RSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32And_SRS { result, lhs, rhs } => 
                <crate::op::I32And_SRS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32And_SRS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32And_SRS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32And_SRI { result, lhs, rhs } => 
                <crate::op::I32And_SRI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32And_SRI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32And_SRI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32And_SSS { result, lhs, rhs } => 
                <crate::op::I32And_SSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32And_SSS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32And_SSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32And_SSI { result, lhs, rhs } => 
                <crate::op::I32And_SSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32And_SSI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32And_SSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64And_RRS { result, lhs, rhs } => 
                <crate::op::I64And_RRS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64And_RRS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64And_RRS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64And_RRI { result, lhs, rhs } => 
                <crate::op::I64And_RRI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64And_RRI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64And_RRI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64And_RSS { result, lhs, rhs } => 
                <crate::op::I64And_RSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64And_RSS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64And_RSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64And_RSI { result, lhs, rhs } => 
                <crate::op::I64And_RSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64And_RSI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64And_RSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64And_SRS { result, lhs, rhs } => 
                <crate::op::I64And_SRS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64And_SRS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64And_SRS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64And_SRI { result, lhs, rhs } => 
                <crate::op::I64And_SRI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64And_SRI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64And_SRI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64And_SSS { result, lhs, rhs } => 
                <crate::op::I64And_SSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64And_SSS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64And_SSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64And_SSI { result, lhs, rhs } => 
                <crate::op::I64And_SSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64And_SSI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64And_SSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Or_RRS { result, lhs, rhs } => 
                <crate::op::I32Or_RRS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Or_RRS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Or_RRS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Or_RRI { result, lhs, rhs } => 
                <crate::op::I32Or_RRI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Or_RRI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Or_RRI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Or_RSS { result, lhs, rhs } => 
                <crate::op::I32Or_RSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Or_RSS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Or_RSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Or_RSI { result, lhs, rhs } => 
                <crate::op::I32Or_RSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Or_RSI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Or_RSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Or_SRS { result, lhs, rhs } => 
                <crate::op::I32Or_SRS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Or_SRS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Or_SRS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Or_SRI { result, lhs, rhs } => 
                <crate::op::I32Or_SRI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Or_SRI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Or_SRI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Or_SSS { result, lhs, rhs } => 
                <crate::op::I32Or_SSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Or_SSS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Or_SSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Or_SSI { result, lhs, rhs } => 
                <crate::op::I32Or_SSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Or_SSI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Or_SSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Or_RRS { result, lhs, rhs } => 
                <crate::op::I64Or_RRS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Or_RRS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Or_RRS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Or_RRI { result, lhs, rhs } => 
                <crate::op::I64Or_RRI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Or_RRI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Or_RRI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Or_RSS { result, lhs, rhs } => 
                <crate::op::I64Or_RSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Or_RSS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Or_RSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Or_RSI { result, lhs, rhs } => 
                <crate::op::I64Or_RSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Or_RSI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Or_RSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Or_SRS { result, lhs, rhs } => 
                <crate::op::I64Or_SRS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Or_SRS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Or_SRS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Or_SRI { result, lhs, rhs } => 
                <crate::op::I64Or_SRI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Or_SRI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Or_SRI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Or_SSS { result, lhs, rhs } => 
                <crate::op::I64Or_SSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Or_SSS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Or_SSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Or_SSI { result, lhs, rhs } => 
                <crate::op::I64Or_SSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Or_SSI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Or_SSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Xor_RRS { result, lhs, rhs } => 
                <crate::op::I32Xor_RRS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Xor_RRS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Xor_RRS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Xor_RRI { result, lhs, rhs } => 
                <crate::op::I32Xor_RRI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Xor_RRI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Xor_RRI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Xor_RSS { result, lhs, rhs } => 
                <crate::op::I32Xor_RSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Xor_RSS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Xor_RSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Xor_RSI { result, lhs, rhs } => 
                <crate::op::I32Xor_RSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Xor_RSI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Xor_RSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Xor_SRS { result, lhs, rhs } => 
                <crate::op::I32Xor_SRS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Xor_SRS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Xor_SRS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Xor_SRI { result, lhs, rhs } => 
                <crate::op::I32Xor_SRI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Xor_SRI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Xor_SRI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Xor_SSS { result, lhs, rhs } => 
                <crate::op::I32Xor_SSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Xor_SSS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Xor_SSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Xor_SSI { result, lhs, rhs } => 
                <crate::op::I32Xor_SSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Xor_SSI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Xor_SSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Xor_RRS { result, lhs, rhs } => 
                <crate::op::I64Xor_RRS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Xor_RRS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Xor_RRS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Xor_RRI { result, lhs, rhs } => 
                <crate::op::I64Xor_RRI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Xor_RRI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Xor_RRI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Xor_RSS { result, lhs, rhs } => 
                <crate::op::I64Xor_RSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Xor_RSS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Xor_RSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Xor_RSI { result, lhs, rhs } => 
                <crate::op::I64Xor_RSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Xor_RSI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Xor_RSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Xor_SRS { result, lhs, rhs } => 
                <crate::op::I64Xor_SRS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Xor_SRS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Xor_SRS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Xor_SRI { result, lhs, rhs } => 
                <crate::op::I64Xor_SRI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Xor_SRI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Xor_SRI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Xor_SSS { result, lhs, rhs } => 
                <crate::op::I64Xor_SSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Xor_SSS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Xor_SSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Xor_SSI { result, lhs, rhs } => 
                <crate::op::I64Xor_SSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Xor_SSI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Xor_SSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Eq_RRS { result, lhs, rhs } => 
                <crate::op::I32Eq_RRS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Eq_RRS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Eq_RRS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Eq_RRI { result, lhs, rhs } => 
                <crate::op::I32Eq_RRI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Eq_RRI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Eq_RRI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Eq_RSS { result, lhs, rhs } => 
                <crate::op::I32Eq_RSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Eq_RSS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Eq_RSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Eq_RSI { result, lhs, rhs } => 
                <crate::op::I32Eq_RSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Eq_RSI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Eq_RSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Eq_SRS { result, lhs, rhs } => 
                <crate::op::I32Eq_SRS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Eq_SRS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Eq_SRS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Eq_SRI { result, lhs, rhs } => 
                <crate::op::I32Eq_SRI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Eq_SRI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Eq_SRI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Eq_SSS { result, lhs, rhs } => 
                <crate::op::I32Eq_SSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Eq_SSS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Eq_SSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Eq_SSI { result, lhs, rhs } => 
                <crate::op::I32Eq_SSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Eq_SSI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Eq_SSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Eq_RRS { result, lhs, rhs } => 
                <crate::op::I64Eq_RRS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Eq_RRS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Eq_RRS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Eq_RRI { result, lhs, rhs } => 
                <crate::op::I64Eq_RRI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Eq_RRI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Eq_RRI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Eq_RSS { result, lhs, rhs } => 
                <crate::op::I64Eq_RSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Eq_RSS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Eq_RSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Eq_RSI { result, lhs, rhs } => 
                <crate::op::I64Eq_RSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Eq_RSI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Eq_RSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Eq_SRS { result, lhs, rhs } => 
                <crate::op::I64Eq_SRS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Eq_SRS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Eq_SRS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Eq_SRI { result, lhs, rhs } => 
                <crate::op::I64Eq_SRI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Eq_SRI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Eq_SRI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Eq_SSS { result, lhs, rhs } => 
                <crate::op::I64Eq_SSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Eq_SSS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Eq_SSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Eq_SSI { result, lhs, rhs } => 
                <crate::op::I64Eq_SSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Eq_SSI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Eq_SSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Ne_RRS { result, lhs, rhs } => 
                <crate::op::I32Ne_RRS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Ne_RRS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Ne_RRS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Ne_RRI { result, lhs, rhs } => 
                <crate::op::I32Ne_RRI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Ne_RRI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Ne_RRI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Ne_RSS { result, lhs, rhs } => 
                <crate::op::I32Ne_RSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Ne_RSS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Ne_RSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Ne_RSI { result, lhs, rhs } => 
                <crate::op::I32Ne_RSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Ne_RSI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Ne_RSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Ne_SRS { result, lhs, rhs } => 
                <crate::op::I32Ne_SRS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Ne_SRS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Ne_SRS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Ne_SRI { result, lhs, rhs } => 
                <crate::op::I32Ne_SRI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Ne_SRI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Ne_SRI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Ne_SSS { result, lhs, rhs } => 
                <crate::op::I32Ne_SSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Ne_SSS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Ne_SSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Ne_SSI { result, lhs, rhs } => 
                <crate::op::I32Ne_SSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Ne_SSI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Ne_SSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Ne_RRS { result, lhs, rhs } => 
                <crate::op::I64Ne_RRS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Ne_RRS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Ne_RRS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Ne_RRI { result, lhs, rhs } => 
                <crate::op::I64Ne_RRI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Ne_RRI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Ne_RRI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Ne_RSS { result, lhs, rhs } => 
                <crate::op::I64Ne_RSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Ne_RSS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Ne_RSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Ne_RSI { result, lhs, rhs } => 
                <crate::op::I64Ne_RSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Ne_RSI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Ne_RSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Ne_SRS { result, lhs, rhs } => 
                <crate::op::I64Ne_SRS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Ne_SRS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Ne_SRS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Ne_SRI { result, lhs, rhs } => 
                <crate::op::I64Ne_SRI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Ne_SRI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Ne_SRI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Ne_SSS { result, lhs, rhs } => 
                <crate::op::I64Ne_SSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Ne_SSS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Ne_SSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Ne_SSI { result, lhs, rhs } => 
                <crate::op::I64Ne_SSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Ne_SSI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Ne_SSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Add_RRS { result, lhs, rhs } => 
                <crate::op::F32Add_RRS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Add_RRS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Add_RRS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Add_RRI { result, lhs, rhs } => 
                <crate::op::F32Add_RRI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Add_RRI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Add_RRI as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Add_RSS { result, lhs, rhs } => 
                <crate::op::F32Add_RSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Add_RSS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Add_RSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Add_RSI { result, lhs, rhs } => 
                <crate::op::F32Add_RSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Add_RSI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Add_RSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Add_SRS { result, lhs, rhs } => 
                <crate::op::F32Add_SRS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Add_SRS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Add_SRS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Add_SRI { result, lhs, rhs } => 
                <crate::op::F32Add_SRI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Add_SRI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Add_SRI as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Add_SSS { result, lhs, rhs } => 
                <crate::op::F32Add_SSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Add_SSS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Add_SSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Add_SSI { result, lhs, rhs } => 
                <crate::op::F32Add_SSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Add_SSI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Add_SSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Add_RRS { result, lhs, rhs } => 
                <crate::op::F64Add_RRS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Add_RRS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Add_RRS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Add_RRI { result, lhs, rhs } => 
                <crate::op::F64Add_RRI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Add_RRI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Add_RRI as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Add_RSS { result, lhs, rhs } => 
                <crate::op::F64Add_RSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Add_RSS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Add_RSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Add_RSI { result, lhs, rhs } => 
                <crate::op::F64Add_RSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Add_RSI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Add_RSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Add_SRS { result, lhs, rhs } => 
                <crate::op::F64Add_SRS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Add_SRS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Add_SRS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Add_SRI { result, lhs, rhs } => 
                <crate::op::F64Add_SRI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Add_SRI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Add_SRI as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Add_SSS { result, lhs, rhs } => 
                <crate::op::F64Add_SSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Add_SSS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Add_SSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Add_SSI { result, lhs, rhs } => 
                <crate::op::F64Add_SSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Add_SSI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Add_SSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Mul_RRS { result, lhs, rhs } => 
                <crate::op::F32Mul_RRS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Mul_RRS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Mul_RRS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Mul_RRI { result, lhs, rhs } => 
                <crate::op::F32Mul_RRI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Mul_RRI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Mul_RRI as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Mul_RSS { result, lhs, rhs } => 
                <crate::op::F32Mul_RSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Mul_RSS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Mul_RSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Mul_RSI { result, lhs, rhs } => 
                <crate::op::F32Mul_RSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Mul_RSI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Mul_RSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Mul_SRS { result, lhs, rhs } => 
                <crate::op::F32Mul_SRS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Mul_SRS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Mul_SRS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Mul_SRI { result, lhs, rhs } => 
                <crate::op::F32Mul_SRI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Mul_SRI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Mul_SRI as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Mul_SSS { result, lhs, rhs } => 
                <crate::op::F32Mul_SSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Mul_SSS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Mul_SSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Mul_SSI { result, lhs, rhs } => 
                <crate::op::F32Mul_SSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Mul_SSI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Mul_SSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Mul_RRS { result, lhs, rhs } => 
                <crate::op::F64Mul_RRS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Mul_RRS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Mul_RRS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Mul_RRI { result, lhs, rhs } => 
                <crate::op::F64Mul_RRI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Mul_RRI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Mul_RRI as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Mul_RSS { result, lhs, rhs } => 
                <crate::op::F64Mul_RSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Mul_RSS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Mul_RSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Mul_RSI { result, lhs, rhs } => 
                <crate::op::F64Mul_RSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Mul_RSI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Mul_RSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Mul_SRS { result, lhs, rhs } => 
                <crate::op::F64Mul_SRS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Mul_SRS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Mul_SRS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Mul_SRI { result, lhs, rhs } => 
                <crate::op::F64Mul_SRI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Mul_SRI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Mul_SRI as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Mul_SSS { result, lhs, rhs } => 
                <crate::op::F64Mul_SSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Mul_SSS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Mul_SSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Mul_SSI { result, lhs, rhs } => 
                <crate::op::F64Mul_SSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Mul_SSI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Mul_SSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Eq_RRS { result, lhs, rhs } => 
                <crate::op::F32Eq_RRS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Eq_RRS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Eq_RRS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Eq_RRI { result, lhs, rhs } => 
                <crate::op::F32Eq_RRI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Eq_RRI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Eq_RRI as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Eq_RSS { result, lhs, rhs } => 
                <crate::op::F32Eq_RSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Eq_RSS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Eq_RSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Eq_RSI { result, lhs, rhs } => 
                <crate::op::F32Eq_RSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Eq_RSI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Eq_RSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Eq_SRS { result, lhs, rhs } => 
                <crate::op::F32Eq_SRS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Eq_SRS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Eq_SRS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Eq_SRI { result, lhs, rhs } => 
                <crate::op::F32Eq_SRI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Eq_SRI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Eq_SRI as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Eq_SSS { result, lhs, rhs } => 
                <crate::op::F32Eq_SSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Eq_SSS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Eq_SSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Eq_SSI { result, lhs, rhs } => 
                <crate::op::F32Eq_SSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Eq_SSI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Eq_SSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Eq_RRS { result, lhs, rhs } => 
                <crate::op::F64Eq_RRS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Eq_RRS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Eq_RRS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Eq_RRI { result, lhs, rhs } => 
                <crate::op::F64Eq_RRI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Eq_RRI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Eq_RRI as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Eq_RSS { result, lhs, rhs } => 
                <crate::op::F64Eq_RSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Eq_RSS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Eq_RSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Eq_RSI { result, lhs, rhs } => 
                <crate::op::F64Eq_RSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Eq_RSI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Eq_RSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Eq_SRS { result, lhs, rhs } => 
                <crate::op::F64Eq_SRS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Eq_SRS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Eq_SRS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Eq_SRI { result, lhs, rhs } => 
                <crate::op::F64Eq_SRI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Eq_SRI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Eq_SRI as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Eq_SSS { result, lhs, rhs } => 
                <crate::op::F64Eq_SSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Eq_SSS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Eq_SSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Eq_SSI { result, lhs, rhs } => 
                <crate::op::F64Eq_SSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Eq_SSI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Eq_SSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Ne_RRS { result, lhs, rhs } => 
                <crate::op::F32Ne_RRS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Ne_RRS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Ne_RRS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Ne_RRI { result, lhs, rhs } => 
                <crate::op::F32Ne_RRI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Ne_RRI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Ne_RRI as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Ne_RSS { result, lhs, rhs } => 
                <crate::op::F32Ne_RSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Ne_RSS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Ne_RSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Ne_RSI { result, lhs, rhs } => 
                <crate::op::F32Ne_RSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Ne_RSI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Ne_RSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Ne_SRS { result, lhs, rhs } => 
                <crate::op::F32Ne_SRS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Ne_SRS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Ne_SRS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Ne_SRI { result, lhs, rhs } => 
                <crate::op::F32Ne_SRI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Ne_SRI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Ne_SRI as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Ne_SSS { result, lhs, rhs } => 
                <crate::op::F32Ne_SSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Ne_SSS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Ne_SSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Ne_SSI { result, lhs, rhs } => 
                <crate::op::F32Ne_SSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Ne_SSI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Ne_SSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Ne_RRS { result, lhs, rhs } => 
                <crate::op::F64Ne_RRS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Ne_RRS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Ne_RRS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Ne_RRI { result, lhs, rhs } => 
                <crate::op::F64Ne_RRI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Ne_RRI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Ne_RRI as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Ne_RSS { result, lhs, rhs } => 
                <crate::op::F64Ne_RSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Ne_RSS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Ne_RSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Ne_RSI { result, lhs, rhs } => 
                <crate::op::F64Ne_RSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Ne_RSI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Ne_RSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Ne_SRS { result, lhs, rhs } => 
                <crate::op::F64Ne_SRS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Ne_SRS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Ne_SRS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Ne_SRI { result, lhs, rhs } => 
                <crate::op::F64Ne_SRI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Ne_SRI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Ne_SRI as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Ne_SSS { result, lhs, rhs } => 
                <crate::op::F64Ne_SSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Ne_SSS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Ne_SSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Ne_SSI { result, lhs, rhs } => 
                <crate::op::F64Ne_SSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Ne_SSI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Ne_SSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Min_RRS { result, lhs, rhs } => 
                <crate::op::F32Min_RRS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Min_RRS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Min_RRS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Min_RRI { result, lhs, rhs } => 
                <crate::op::F32Min_RRI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Min_RRI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Min_RRI as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Min_RSS { result, lhs, rhs } => 
                <crate::op::F32Min_RSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Min_RSS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Min_RSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Min_RSI { result, lhs, rhs } => 
                <crate::op::F32Min_RSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Min_RSI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Min_RSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Min_SRS { result, lhs, rhs } => 
                <crate::op::F32Min_SRS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Min_SRS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Min_SRS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Min_SRI { result, lhs, rhs } => 
                <crate::op::F32Min_SRI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Min_SRI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Min_SRI as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Min_SSS { result, lhs, rhs } => 
                <crate::op::F32Min_SSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Min_SSS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Min_SSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Min_SSI { result, lhs, rhs } => 
                <crate::op::F32Min_SSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Min_SSI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Min_SSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Min_RRS { result, lhs, rhs } => 
                <crate::op::F64Min_RRS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Min_RRS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Min_RRS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Min_RRI { result, lhs, rhs } => 
                <crate::op::F64Min_RRI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Min_RRI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Min_RRI as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Min_RSS { result, lhs, rhs } => 
                <crate::op::F64Min_RSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Min_RSS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Min_RSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Min_RSI { result, lhs, rhs } => 
                <crate::op::F64Min_RSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Min_RSI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Min_RSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Min_SRS { result, lhs, rhs } => 
                <crate::op::F64Min_SRS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Min_SRS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Min_SRS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Min_SRI { result, lhs, rhs } => 
                <crate::op::F64Min_SRI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Min_SRI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Min_SRI as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Min_SSS { result, lhs, rhs } => 
                <crate::op::F64Min_SSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Min_SSS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Min_SSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Min_SSI { result, lhs, rhs } => 
                <crate::op::F64Min_SSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Min_SSI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Min_SSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Max_RRS { result, lhs, rhs } => 
                <crate::op::F32Max_RRS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Max_RRS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Max_RRS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Max_RRI { result, lhs, rhs } => 
                <crate::op::F32Max_RRI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Max_RRI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Max_RRI as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Max_RSS { result, lhs, rhs } => 
                <crate::op::F32Max_RSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Max_RSS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Max_RSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Max_RSI { result, lhs, rhs } => 
                <crate::op::F32Max_RSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Max_RSI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Max_RSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Max_SRS { result, lhs, rhs } => 
                <crate::op::F32Max_SRS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Max_SRS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Max_SRS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Max_SRI { result, lhs, rhs } => 
                <crate::op::F32Max_SRI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Max_SRI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Max_SRI as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Max_SSS { result, lhs, rhs } => 
                <crate::op::F32Max_SSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Max_SSS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Max_SSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Max_SSI { result, lhs, rhs } => 
                <crate::op::F32Max_SSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Max_SSI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Max_SSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Max_RRS { result, lhs, rhs } => 
                <crate::op::F64Max_RRS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Max_RRS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Max_RRS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Max_RRI { result, lhs, rhs } => 
                <crate::op::F64Max_RRI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Max_RRI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Max_RRI as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Max_RSS { result, lhs, rhs } => 
                <crate::op::F64Max_RSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Max_RSS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Max_RSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Max_RSI { result, lhs, rhs } => 
                <crate::op::F64Max_RSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Max_RSI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Max_RSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Max_SRS { result, lhs, rhs } => 
                <crate::op::F64Max_SRS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Max_SRS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Max_SRS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Max_SRI { result, lhs, rhs } => 
                <crate::op::F64Max_SRI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Max_SRI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Max_SRI as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Max_SSS { result, lhs, rhs } => 
                <crate::op::F64Max_SSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Max_SSS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Max_SSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Max_SSI { result, lhs, rhs } => 
                <crate::op::F64Max_SSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Max_SSI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Max_SSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Sub_RRS { result, lhs, rhs } => 
                <crate::op::I32Sub_RRS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Sub_RRS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Sub_RRS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Sub_RRI { result, lhs, rhs } => 
                <crate::op::I32Sub_RRI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Sub_RRI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Sub_RRI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Sub_RSR { result, lhs, rhs } => 
                <crate::op::I32Sub_RSR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Sub_RSR { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Sub_RSR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Sub_RSS { result, lhs, rhs } => 
                <crate::op::I32Sub_RSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Sub_RSS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Sub_RSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Sub_RSI { result, lhs, rhs } => 
                <crate::op::I32Sub_RSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Sub_RSI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Sub_RSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Sub_RIR { result, lhs, rhs } => 
                <crate::op::I32Sub_RIR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Sub_RIR { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Sub_RIR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Sub_RIS { result, lhs, rhs } => 
                <crate::op::I32Sub_RIS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Sub_RIS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Sub_RIS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Sub_RRS { result, lhs, rhs } => 
                <crate::op::I64Sub_RRS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Sub_RRS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Sub_RRS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Sub_RRI { result, lhs, rhs } => 
                <crate::op::I64Sub_RRI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Sub_RRI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Sub_RRI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Sub_RSR { result, lhs, rhs } => 
                <crate::op::I64Sub_RSR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Sub_RSR { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Sub_RSR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Sub_RSS { result, lhs, rhs } => 
                <crate::op::I64Sub_RSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Sub_RSS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Sub_RSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Sub_RSI { result, lhs, rhs } => 
                <crate::op::I64Sub_RSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Sub_RSI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Sub_RSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Sub_RIR { result, lhs, rhs } => 
                <crate::op::I64Sub_RIR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Sub_RIR { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Sub_RIR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Sub_RIS { result, lhs, rhs } => 
                <crate::op::I64Sub_RIS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Sub_RIS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Sub_RIS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32LtS_RRS { result, lhs, rhs } => 
                <crate::op::I32LtS_RRS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32LtS_RRS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32LtS_RRS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32LtS_RRI { result, lhs, rhs } => 
                <crate::op::I32LtS_RRI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32LtS_RRI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32LtS_RRI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32LtS_RSR { result, lhs, rhs } => 
                <crate::op::I32LtS_RSR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32LtS_RSR { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32LtS_RSR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32LtS_RSS { result, lhs, rhs } => 
                <crate::op::I32LtS_RSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32LtS_RSS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32LtS_RSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32LtS_RSI { result, lhs, rhs } => 
                <crate::op::I32LtS_RSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32LtS_RSI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32LtS_RSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32LtS_RIR { result, lhs, rhs } => 
                <crate::op::I32LtS_RIR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32LtS_RIR { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32LtS_RIR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32LtS_RIS { result, lhs, rhs } => 
                <crate::op::I32LtS_RIS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32LtS_RIS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32LtS_RIS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64LtS_RRS { result, lhs, rhs } => 
                <crate::op::I64LtS_RRS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64LtS_RRS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64LtS_RRS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64LtS_RRI { result, lhs, rhs } => 
                <crate::op::I64LtS_RRI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64LtS_RRI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64LtS_RRI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64LtS_RSR { result, lhs, rhs } => 
                <crate::op::I64LtS_RSR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64LtS_RSR { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64LtS_RSR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64LtS_RSS { result, lhs, rhs } => 
                <crate::op::I64LtS_RSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64LtS_RSS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64LtS_RSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64LtS_RSI { result, lhs, rhs } => 
                <crate::op::I64LtS_RSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64LtS_RSI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64LtS_RSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64LtS_RIR { result, lhs, rhs } => 
                <crate::op::I64LtS_RIR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64LtS_RIR { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64LtS_RIR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64LtS_RIS { result, lhs, rhs } => 
                <crate::op::I64LtS_RIS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64LtS_RIS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64LtS_RIS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32LtU_RRS { result, lhs, rhs } => 
                <crate::op::I32LtU_RRS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32LtU_RRS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32LtU_RRS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32LtU_RRI { result, lhs, rhs } => 
                <crate::op::I32LtU_RRI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32LtU_RRI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32LtU_RRI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32LtU_RSR { result, lhs, rhs } => 
                <crate::op::I32LtU_RSR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32LtU_RSR { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32LtU_RSR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32LtU_RSS { result, lhs, rhs } => 
                <crate::op::I32LtU_RSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32LtU_RSS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32LtU_RSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32LtU_RSI { result, lhs, rhs } => 
                <crate::op::I32LtU_RSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32LtU_RSI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32LtU_RSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32LtU_RIR { result, lhs, rhs } => 
                <crate::op::I32LtU_RIR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32LtU_RIR { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32LtU_RIR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32LtU_RIS { result, lhs, rhs } => 
                <crate::op::I32LtU_RIS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32LtU_RIS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32LtU_RIS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64LtU_RRS { result, lhs, rhs } => 
                <crate::op::I64LtU_RRS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64LtU_RRS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64LtU_RRS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64LtU_RRI { result, lhs, rhs } => 
                <crate::op::I64LtU_RRI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64LtU_RRI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64LtU_RRI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64LtU_RSR { result, lhs, rhs } => 
                <crate::op::I64LtU_RSR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64LtU_RSR { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64LtU_RSR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64LtU_RSS { result, lhs, rhs } => 
                <crate::op::I64LtU_RSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64LtU_RSS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64LtU_RSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64LtU_RSI { result, lhs, rhs } => 
                <crate::op::I64LtU_RSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64LtU_RSI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64LtU_RSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64LtU_RIR { result, lhs, rhs } => 
                <crate::op::I64LtU_RIR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64LtU_RIR { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64LtU_RIR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64LtU_RIS { result, lhs, rhs } => 
                <crate::op::I64LtU_RIS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64LtU_RIS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64LtU_RIS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32LeS_RRS { result, lhs, rhs } => 
                <crate::op::I32LeS_RRS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32LeS_RRS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32LeS_RRS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32LeS_RRI { result, lhs, rhs } => 
                <crate::op::I32LeS_RRI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32LeS_RRI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32LeS_RRI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32LeS_RSR { result, lhs, rhs } => 
                <crate::op::I32LeS_RSR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32LeS_RSR { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32LeS_RSR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32LeS_RSS { result, lhs, rhs } => 
                <crate::op::I32LeS_RSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32LeS_RSS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32LeS_RSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32LeS_RSI { result, lhs, rhs } => 
                <crate::op::I32LeS_RSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32LeS_RSI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32LeS_RSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32LeS_RIR { result, lhs, rhs } => 
                <crate::op::I32LeS_RIR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32LeS_RIR { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32LeS_RIR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32LeS_RIS { result, lhs, rhs } => 
                <crate::op::I32LeS_RIS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32LeS_RIS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32LeS_RIS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64LeS_RRS { result, lhs, rhs } => 
                <crate::op::I64LeS_RRS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64LeS_RRS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64LeS_RRS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64LeS_RRI { result, lhs, rhs } => 
                <crate::op::I64LeS_RRI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64LeS_RRI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64LeS_RRI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64LeS_RSR { result, lhs, rhs } => 
                <crate::op::I64LeS_RSR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64LeS_RSR { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64LeS_RSR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64LeS_RSS { result, lhs, rhs } => 
                <crate::op::I64LeS_RSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64LeS_RSS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64LeS_RSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64LeS_RSI { result, lhs, rhs } => 
                <crate::op::I64LeS_RSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64LeS_RSI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64LeS_RSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64LeS_RIR { result, lhs, rhs } => 
                <crate::op::I64LeS_RIR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64LeS_RIR { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64LeS_RIR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64LeS_RIS { result, lhs, rhs } => 
                <crate::op::I64LeS_RIS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64LeS_RIS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64LeS_RIS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32LeU_RRS { result, lhs, rhs } => 
                <crate::op::I32LeU_RRS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32LeU_RRS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32LeU_RRS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32LeU_RRI { result, lhs, rhs } => 
                <crate::op::I32LeU_RRI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32LeU_RRI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32LeU_RRI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32LeU_RSR { result, lhs, rhs } => 
                <crate::op::I32LeU_RSR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32LeU_RSR { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32LeU_RSR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32LeU_RSS { result, lhs, rhs } => 
                <crate::op::I32LeU_RSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32LeU_RSS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32LeU_RSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32LeU_RSI { result, lhs, rhs } => 
                <crate::op::I32LeU_RSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32LeU_RSI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32LeU_RSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32LeU_RIR { result, lhs, rhs } => 
                <crate::op::I32LeU_RIR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32LeU_RIR { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32LeU_RIR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32LeU_RIS { result, lhs, rhs } => 
                <crate::op::I32LeU_RIS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32LeU_RIS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32LeU_RIS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64LeU_RRS { result, lhs, rhs } => 
                <crate::op::I64LeU_RRS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64LeU_RRS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64LeU_RRS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64LeU_RRI { result, lhs, rhs } => 
                <crate::op::I64LeU_RRI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64LeU_RRI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64LeU_RRI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64LeU_RSR { result, lhs, rhs } => 
                <crate::op::I64LeU_RSR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64LeU_RSR { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64LeU_RSR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64LeU_RSS { result, lhs, rhs } => 
                <crate::op::I64LeU_RSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64LeU_RSS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64LeU_RSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64LeU_RSI { result, lhs, rhs } => 
                <crate::op::I64LeU_RSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64LeU_RSI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64LeU_RSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64LeU_RIR { result, lhs, rhs } => 
                <crate::op::I64LeU_RIR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64LeU_RIR { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64LeU_RIR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64LeU_RIS { result, lhs, rhs } => 
                <crate::op::I64LeU_RIS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64LeU_RIS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64LeU_RIS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32DivS_RRS { result, lhs, rhs } => 
                <crate::op::I32DivS_RRS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32DivS_RRS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32DivS_RRS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32DivS_RRI { result, lhs, rhs } => 
                <crate::op::I32DivS_RRI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32DivS_RRI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32DivS_RRI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32DivS_RSR { result, lhs, rhs } => 
                <crate::op::I32DivS_RSR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32DivS_RSR { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32DivS_RSR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32DivS_RSS { result, lhs, rhs } => 
                <crate::op::I32DivS_RSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32DivS_RSS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32DivS_RSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32DivS_RSI { result, lhs, rhs } => 
                <crate::op::I32DivS_RSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32DivS_RSI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32DivS_RSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32DivS_RIR { result, lhs, rhs } => 
                <crate::op::I32DivS_RIR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32DivS_RIR { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32DivS_RIR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32DivS_RIS { result, lhs, rhs } => 
                <crate::op::I32DivS_RIS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32DivS_RIS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32DivS_RIS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64DivS_RRS { result, lhs, rhs } => 
                <crate::op::I64DivS_RRS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64DivS_RRS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64DivS_RRS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64DivS_RRI { result, lhs, rhs } => 
                <crate::op::I64DivS_RRI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64DivS_RRI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64DivS_RRI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64DivS_RSR { result, lhs, rhs } => 
                <crate::op::I64DivS_RSR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64DivS_RSR { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64DivS_RSR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64DivS_RSS { result, lhs, rhs } => 
                <crate::op::I64DivS_RSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64DivS_RSS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64DivS_RSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64DivS_RSI { result, lhs, rhs } => 
                <crate::op::I64DivS_RSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64DivS_RSI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64DivS_RSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64DivS_RIR { result, lhs, rhs } => 
                <crate::op::I64DivS_RIR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64DivS_RIR { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64DivS_RIR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64DivS_RIS { result, lhs, rhs } => 
                <crate::op::I64DivS_RIS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64DivS_RIS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64DivS_RIS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32DivU_RRS { result, lhs, rhs } => 
                <crate::op::I32DivU_RRS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32DivU_RRS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32DivU_RRS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32DivU_RRI { result, lhs, rhs } => 
                <crate::op::I32DivU_RRI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32DivU_RRI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32DivU_RRI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32DivU_RSR { result, lhs, rhs } => 
                <crate::op::I32DivU_RSR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32DivU_RSR { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32DivU_RSR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32DivU_RSS { result, lhs, rhs } => 
                <crate::op::I32DivU_RSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32DivU_RSS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32DivU_RSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32DivU_RSI { result, lhs, rhs } => 
                <crate::op::I32DivU_RSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32DivU_RSI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32DivU_RSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32DivU_RIR { result, lhs, rhs } => 
                <crate::op::I32DivU_RIR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32DivU_RIR { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32DivU_RIR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32DivU_RIS { result, lhs, rhs } => 
                <crate::op::I32DivU_RIS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32DivU_RIS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32DivU_RIS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64DivU_RRS { result, lhs, rhs } => 
                <crate::op::I64DivU_RRS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64DivU_RRS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64DivU_RRS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64DivU_RRI { result, lhs, rhs } => 
                <crate::op::I64DivU_RRI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64DivU_RRI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64DivU_RRI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64DivU_RSR { result, lhs, rhs } => 
                <crate::op::I64DivU_RSR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64DivU_RSR { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64DivU_RSR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64DivU_RSS { result, lhs, rhs } => 
                <crate::op::I64DivU_RSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64DivU_RSS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64DivU_RSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64DivU_RSI { result, lhs, rhs } => 
                <crate::op::I64DivU_RSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64DivU_RSI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64DivU_RSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64DivU_RIR { result, lhs, rhs } => 
                <crate::op::I64DivU_RIR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64DivU_RIR { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64DivU_RIR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64DivU_RIS { result, lhs, rhs } => 
                <crate::op::I64DivU_RIS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64DivU_RIS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64DivU_RIS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32RemS_RRS { result, lhs, rhs } => 
                <crate::op::I32RemS_RRS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32RemS_RRS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32RemS_RRS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32RemS_RRI { result, lhs, rhs } => 
                <crate::op::I32RemS_RRI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32RemS_RRI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32RemS_RRI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32RemS_RSR { result, lhs, rhs } => 
                <crate::op::I32RemS_RSR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32RemS_RSR { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32RemS_RSR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32RemS_RSS { result, lhs, rhs } => 
                <crate::op::I32RemS_RSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32RemS_RSS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32RemS_RSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32RemS_RSI { result, lhs, rhs } => 
                <crate::op::I32RemS_RSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32RemS_RSI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32RemS_RSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32RemS_RIR { result, lhs, rhs } => 
                <crate::op::I32RemS_RIR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32RemS_RIR { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32RemS_RIR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32RemS_RIS { result, lhs, rhs } => 
                <crate::op::I32RemS_RIS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32RemS_RIS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32RemS_RIS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64RemS_RRS { result, lhs, rhs } => 
                <crate::op::I64RemS_RRS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64RemS_RRS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64RemS_RRS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64RemS_RRI { result, lhs, rhs } => 
                <crate::op::I64RemS_RRI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64RemS_RRI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64RemS_RRI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64RemS_RSR { result, lhs, rhs } => 
                <crate::op::I64RemS_RSR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64RemS_RSR { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64RemS_RSR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64RemS_RSS { result, lhs, rhs } => 
                <crate::op::I64RemS_RSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64RemS_RSS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64RemS_RSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64RemS_RSI { result, lhs, rhs } => 
                <crate::op::I64RemS_RSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64RemS_RSI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64RemS_RSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64RemS_RIR { result, lhs, rhs } => 
                <crate::op::I64RemS_RIR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64RemS_RIR { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64RemS_RIR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64RemS_RIS { result, lhs, rhs } => 
                <crate::op::I64RemS_RIS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64RemS_RIS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64RemS_RIS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32RemU_RRS { result, lhs, rhs } => 
                <crate::op::I32RemU_RRS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32RemU_RRS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32RemU_RRS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32RemU_RRI { result, lhs, rhs } => 
                <crate::op::I32RemU_RRI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32RemU_RRI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32RemU_RRI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32RemU_RSR { result, lhs, rhs } => 
                <crate::op::I32RemU_RSR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32RemU_RSR { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32RemU_RSR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32RemU_RSS { result, lhs, rhs } => 
                <crate::op::I32RemU_RSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32RemU_RSS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32RemU_RSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32RemU_RSI { result, lhs, rhs } => 
                <crate::op::I32RemU_RSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32RemU_RSI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32RemU_RSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32RemU_RIR { result, lhs, rhs } => 
                <crate::op::I32RemU_RIR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32RemU_RIR { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32RemU_RIR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32RemU_RIS { result, lhs, rhs } => 
                <crate::op::I32RemU_RIS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32RemU_RIS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32RemU_RIS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64RemU_RRS { result, lhs, rhs } => 
                <crate::op::I64RemU_RRS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64RemU_RRS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64RemU_RRS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64RemU_RRI { result, lhs, rhs } => 
                <crate::op::I64RemU_RRI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64RemU_RRI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64RemU_RRI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64RemU_RSR { result, lhs, rhs } => 
                <crate::op::I64RemU_RSR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64RemU_RSR { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64RemU_RSR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64RemU_RSS { result, lhs, rhs } => 
                <crate::op::I64RemU_RSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64RemU_RSS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64RemU_RSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64RemU_RSI { result, lhs, rhs } => 
                <crate::op::I64RemU_RSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64RemU_RSI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64RemU_RSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64RemU_RIR { result, lhs, rhs } => 
                <crate::op::I64RemU_RIR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64RemU_RIR { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64RemU_RIR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64RemU_RIS { result, lhs, rhs } => 
                <crate::op::I64RemU_RIS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64RemU_RIS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64RemU_RIS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Shl_RRS { result, lhs, rhs } => 
                <crate::op::I32Shl_RRS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Shl_RRS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Shl_RRS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Shl_RRI { result, lhs, rhs } => 
                <crate::op::I32Shl_RRI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Shl_RRI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Shl_RRI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Shl_RSR { result, lhs, rhs } => 
                <crate::op::I32Shl_RSR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Shl_RSR { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Shl_RSR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Shl_RSS { result, lhs, rhs } => 
                <crate::op::I32Shl_RSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Shl_RSS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Shl_RSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Shl_RSI { result, lhs, rhs } => 
                <crate::op::I32Shl_RSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Shl_RSI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Shl_RSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Shl_RIR { result, lhs, rhs } => 
                <crate::op::I32Shl_RIR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Shl_RIR { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Shl_RIR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Shl_RIS { result, lhs, rhs } => 
                <crate::op::I32Shl_RIS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Shl_RIS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Shl_RIS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Shl_RRS { result, lhs, rhs } => 
                <crate::op::I64Shl_RRS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Shl_RRS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Shl_RRS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Shl_RRI { result, lhs, rhs } => 
                <crate::op::I64Shl_RRI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Shl_RRI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Shl_RRI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Shl_RSR { result, lhs, rhs } => 
                <crate::op::I64Shl_RSR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Shl_RSR { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Shl_RSR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Shl_RSS { result, lhs, rhs } => 
                <crate::op::I64Shl_RSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Shl_RSS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Shl_RSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Shl_RSI { result, lhs, rhs } => 
                <crate::op::I64Shl_RSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Shl_RSI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Shl_RSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Shl_RIR { result, lhs, rhs } => 
                <crate::op::I64Shl_RIR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Shl_RIR { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Shl_RIR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Shl_RIS { result, lhs, rhs } => 
                <crate::op::I64Shl_RIS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Shl_RIS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Shl_RIS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32ShrS_RRS { result, lhs, rhs } => 
                <crate::op::I32ShrS_RRS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32ShrS_RRS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32ShrS_RRS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32ShrS_RRI { result, lhs, rhs } => 
                <crate::op::I32ShrS_RRI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32ShrS_RRI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32ShrS_RRI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32ShrS_RSR { result, lhs, rhs } => 
                <crate::op::I32ShrS_RSR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32ShrS_RSR { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32ShrS_RSR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32ShrS_RSS { result, lhs, rhs } => 
                <crate::op::I32ShrS_RSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32ShrS_RSS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32ShrS_RSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32ShrS_RSI { result, lhs, rhs } => 
                <crate::op::I32ShrS_RSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32ShrS_RSI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32ShrS_RSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32ShrS_RIR { result, lhs, rhs } => 
                <crate::op::I32ShrS_RIR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32ShrS_RIR { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32ShrS_RIR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32ShrS_RIS { result, lhs, rhs } => 
                <crate::op::I32ShrS_RIS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32ShrS_RIS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32ShrS_RIS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64ShrS_RRS { result, lhs, rhs } => 
                <crate::op::I64ShrS_RRS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64ShrS_RRS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64ShrS_RRS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64ShrS_RRI { result, lhs, rhs } => 
                <crate::op::I64ShrS_RRI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64ShrS_RRI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64ShrS_RRI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64ShrS_RSR { result, lhs, rhs } => 
                <crate::op::I64ShrS_RSR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64ShrS_RSR { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64ShrS_RSR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64ShrS_RSS { result, lhs, rhs } => 
                <crate::op::I64ShrS_RSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64ShrS_RSS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64ShrS_RSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64ShrS_RSI { result, lhs, rhs } => 
                <crate::op::I64ShrS_RSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64ShrS_RSI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64ShrS_RSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64ShrS_RIR { result, lhs, rhs } => 
                <crate::op::I64ShrS_RIR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64ShrS_RIR { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64ShrS_RIR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64ShrS_RIS { result, lhs, rhs } => 
                <crate::op::I64ShrS_RIS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64ShrS_RIS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64ShrS_RIS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32ShrU_RRS { result, lhs, rhs } => 
                <crate::op::I32ShrU_RRS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32ShrU_RRS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32ShrU_RRS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32ShrU_RRI { result, lhs, rhs } => 
                <crate::op::I32ShrU_RRI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32ShrU_RRI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32ShrU_RRI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32ShrU_RSR { result, lhs, rhs } => 
                <crate::op::I32ShrU_RSR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32ShrU_RSR { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32ShrU_RSR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32ShrU_RSS { result, lhs, rhs } => 
                <crate::op::I32ShrU_RSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32ShrU_RSS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32ShrU_RSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32ShrU_RSI { result, lhs, rhs } => 
                <crate::op::I32ShrU_RSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32ShrU_RSI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32ShrU_RSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32ShrU_RIR { result, lhs, rhs } => 
                <crate::op::I32ShrU_RIR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32ShrU_RIR { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32ShrU_RIR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32ShrU_RIS { result, lhs, rhs } => 
                <crate::op::I32ShrU_RIS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32ShrU_RIS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32ShrU_RIS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64ShrU_RRS { result, lhs, rhs } => 
                <crate::op::I64ShrU_RRS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64ShrU_RRS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64ShrU_RRS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64ShrU_RRI { result, lhs, rhs } => 
                <crate::op::I64ShrU_RRI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64ShrU_RRI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64ShrU_RRI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64ShrU_RSR { result, lhs, rhs } => 
                <crate::op::I64ShrU_RSR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64ShrU_RSR { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64ShrU_RSR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64ShrU_RSS { result, lhs, rhs } => 
                <crate::op::I64ShrU_RSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64ShrU_RSS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64ShrU_RSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64ShrU_RSI { result, lhs, rhs } => 
                <crate::op::I64ShrU_RSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64ShrU_RSI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64ShrU_RSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64ShrU_RIR { result, lhs, rhs } => 
                <crate::op::I64ShrU_RIR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64ShrU_RIR { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64ShrU_RIR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64ShrU_RIS { result, lhs, rhs } => 
                <crate::op::I64ShrU_RIS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64ShrU_RIS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64ShrU_RIS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Rotl_RRS { result, lhs, rhs } => 
                <crate::op::I32Rotl_RRS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Rotl_RRS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Rotl_RRS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Rotl_RRI { result, lhs, rhs } => 
                <crate::op::I32Rotl_RRI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Rotl_RRI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Rotl_RRI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Rotl_RSR { result, lhs, rhs } => 
                <crate::op::I32Rotl_RSR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Rotl_RSR { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Rotl_RSR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Rotl_RSS { result, lhs, rhs } => 
                <crate::op::I32Rotl_RSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Rotl_RSS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Rotl_RSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Rotl_RSI { result, lhs, rhs } => 
                <crate::op::I32Rotl_RSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Rotl_RSI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Rotl_RSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Rotl_RIR { result, lhs, rhs } => 
                <crate::op::I32Rotl_RIR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Rotl_RIR { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Rotl_RIR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Rotl_RIS { result, lhs, rhs } => 
                <crate::op::I32Rotl_RIS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Rotl_RIS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Rotl_RIS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Rotl_RRS { result, lhs, rhs } => 
                <crate::op::I64Rotl_RRS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Rotl_RRS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Rotl_RRS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Rotl_RRI { result, lhs, rhs } => 
                <crate::op::I64Rotl_RRI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Rotl_RRI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Rotl_RRI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Rotl_RSR { result, lhs, rhs } => 
                <crate::op::I64Rotl_RSR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Rotl_RSR { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Rotl_RSR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Rotl_RSS { result, lhs, rhs } => 
                <crate::op::I64Rotl_RSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Rotl_RSS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Rotl_RSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Rotl_RSI { result, lhs, rhs } => 
                <crate::op::I64Rotl_RSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Rotl_RSI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Rotl_RSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Rotl_RIR { result, lhs, rhs } => 
                <crate::op::I64Rotl_RIR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Rotl_RIR { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Rotl_RIR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Rotl_RIS { result, lhs, rhs } => 
                <crate::op::I64Rotl_RIS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Rotl_RIS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Rotl_RIS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Rotr_RRS { result, lhs, rhs } => 
                <crate::op::I32Rotr_RRS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Rotr_RRS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Rotr_RRS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Rotr_RRI { result, lhs, rhs } => 
                <crate::op::I32Rotr_RRI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Rotr_RRI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Rotr_RRI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Rotr_RSR { result, lhs, rhs } => 
                <crate::op::I32Rotr_RSR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Rotr_RSR { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Rotr_RSR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Rotr_RSS { result, lhs, rhs } => 
                <crate::op::I32Rotr_RSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Rotr_RSS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Rotr_RSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Rotr_RSI { result, lhs, rhs } => 
                <crate::op::I32Rotr_RSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Rotr_RSI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Rotr_RSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Rotr_RIR { result, lhs, rhs } => 
                <crate::op::I32Rotr_RIR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Rotr_RIR { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Rotr_RIR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Rotr_RIS { result, lhs, rhs } => 
                <crate::op::I32Rotr_RIS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Rotr_RIS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Rotr_RIS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Rotr_RRS { result, lhs, rhs } => 
                <crate::op::I64Rotr_RRS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Rotr_RRS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Rotr_RRS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Rotr_RRI { result, lhs, rhs } => 
                <crate::op::I64Rotr_RRI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Rotr_RRI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Rotr_RRI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Rotr_RSR { result, lhs, rhs } => 
                <crate::op::I64Rotr_RSR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Rotr_RSR { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Rotr_RSR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Rotr_RSS { result, lhs, rhs } => 
                <crate::op::I64Rotr_RSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Rotr_RSS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Rotr_RSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Rotr_RSI { result, lhs, rhs } => 
                <crate::op::I64Rotr_RSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Rotr_RSI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Rotr_RSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Rotr_RIR { result, lhs, rhs } => 
                <crate::op::I64Rotr_RIR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Rotr_RIR { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Rotr_RIR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Rotr_RIS { result, lhs, rhs } => 
                <crate::op::I64Rotr_RIS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Rotr_RIS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Rotr_RIS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Sub_RRS { result, lhs, rhs } => 
                <crate::op::F32Sub_RRS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Sub_RRS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Sub_RRS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Sub_RRI { result, lhs, rhs } => 
                <crate::op::F32Sub_RRI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Sub_RRI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Sub_RRI as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Sub_RSR { result, lhs, rhs } => 
                <crate::op::F32Sub_RSR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Sub_RSR { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Sub_RSR as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Sub_RSS { result, lhs, rhs } => 
                <crate::op::F32Sub_RSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Sub_RSS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Sub_RSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Sub_RSI { result, lhs, rhs } => 
                <crate::op::F32Sub_RSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Sub_RSI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Sub_RSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Sub_RIR { result, lhs, rhs } => 
                <crate::op::F32Sub_RIR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Sub_RIR { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Sub_RIR as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Sub_RIS { result, lhs, rhs } => 
                <crate::op::F32Sub_RIS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Sub_RIS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Sub_RIS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Sub_RRS { result, lhs, rhs } => 
                <crate::op::F64Sub_RRS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Sub_RRS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Sub_RRS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Sub_RRI { result, lhs, rhs } => 
                <crate::op::F64Sub_RRI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Sub_RRI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Sub_RRI as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Sub_RSR { result, lhs, rhs } => 
                <crate::op::F64Sub_RSR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Sub_RSR { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Sub_RSR as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Sub_RSS { result, lhs, rhs } => 
                <crate::op::F64Sub_RSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Sub_RSS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Sub_RSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Sub_RSI { result, lhs, rhs } => 
                <crate::op::F64Sub_RSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Sub_RSI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Sub_RSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Sub_RIR { result, lhs, rhs } => 
                <crate::op::F64Sub_RIR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Sub_RIR { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Sub_RIR as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Sub_RIS { result, lhs, rhs } => 
                <crate::op::F64Sub_RIS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Sub_RIS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Sub_RIS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Div_RRS { result, lhs, rhs } => 
                <crate::op::F32Div_RRS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Div_RRS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Div_RRS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Div_RRI { result, lhs, rhs } => 
                <crate::op::F32Div_RRI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Div_RRI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Div_RRI as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Div_RSR { result, lhs, rhs } => 
                <crate::op::F32Div_RSR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Div_RSR { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Div_RSR as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Div_RSS { result, lhs, rhs } => 
                <crate::op::F32Div_RSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Div_RSS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Div_RSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Div_RSI { result, lhs, rhs } => 
                <crate::op::F32Div_RSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Div_RSI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Div_RSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Div_RIR { result, lhs, rhs } => 
                <crate::op::F32Div_RIR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Div_RIR { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Div_RIR as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Div_RIS { result, lhs, rhs } => 
                <crate::op::F32Div_RIS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Div_RIS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Div_RIS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Div_RRS { result, lhs, rhs } => 
                <crate::op::F64Div_RRS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Div_RRS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Div_RRS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Div_RRI { result, lhs, rhs } => 
                <crate::op::F64Div_RRI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Div_RRI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Div_RRI as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Div_RSR { result, lhs, rhs } => 
                <crate::op::F64Div_RSR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Div_RSR { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Div_RSR as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Div_RSS { result, lhs, rhs } => 
                <crate::op::F64Div_RSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Div_RSS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Div_RSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Div_RSI { result, lhs, rhs } => 
                <crate::op::F64Div_RSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Div_RSI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Div_RSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Div_RIR { result, lhs, rhs } => 
                <crate::op::F64Div_RIR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Div_RIR { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Div_RIR as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Div_RIS { result, lhs, rhs } => 
                <crate::op::F64Div_RIS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Div_RIS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Div_RIS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Copysign_RRS { result, lhs, rhs } => 
                <crate::op::F32Copysign_RRS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Copysign_RRS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Copysign_RRS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Copysign_RRI { result, lhs, rhs } => 
                <crate::op::F32Copysign_RRI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Copysign_RRI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Copysign_RRI as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Copysign_RSR { result, lhs, rhs } => 
                <crate::op::F32Copysign_RSR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Copysign_RSR { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Copysign_RSR as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Copysign_RSS { result, lhs, rhs } => 
                <crate::op::F32Copysign_RSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Copysign_RSS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Copysign_RSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Copysign_RSI { result, lhs, rhs } => 
                <crate::op::F32Copysign_RSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Copysign_RSI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Copysign_RSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Copysign_RIR { result, lhs, rhs } => 
                <crate::op::F32Copysign_RIR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Copysign_RIR { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Copysign_RIR as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Copysign_RIS { result, lhs, rhs } => 
                <crate::op::F32Copysign_RIS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Copysign_RIS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Copysign_RIS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Copysign_RRS { result, lhs, rhs } => 
                <crate::op::F64Copysign_RRS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Copysign_RRS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Copysign_RRS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Copysign_RRI { result, lhs, rhs } => 
                <crate::op::F64Copysign_RRI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Copysign_RRI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Copysign_RRI as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Copysign_RSR { result, lhs, rhs } => 
                <crate::op::F64Copysign_RSR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Copysign_RSR { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Copysign_RSR as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Copysign_RSS { result, lhs, rhs } => 
                <crate::op::F64Copysign_RSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Copysign_RSS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Copysign_RSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Copysign_RSI { result, lhs, rhs } => 
                <crate::op::F64Copysign_RSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Copysign_RSI { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Copysign_RSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Copysign_RIR { result, lhs, rhs } => 
                <crate::op::F64Copysign_RIR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Copysign_RIR { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Copysign_RIR as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Copysign_RIS { result, lhs, rhs } => 
                <crate::op::F64Copysign_RIS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Copysign_RIS { result, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Copysign_RIS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Load_RR { result, ptr, offset, memory } => 
                <crate::op::I32Load_RR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Load_RR { result, ptr, offset, memory },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Load_RR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Load_RS { result, ptr, offset, memory } => 
                <crate::op::I32Load_RS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Load_RS { result, ptr, offset, memory },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Load_RS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Load_RI { result, address, memory } => 
                <crate::op::I32Load_RI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Load_RI { result, address, memory },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Load_RI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32LoadMem0_RR { result, ptr, offset } => 
                <crate::op::I32LoadMem0_RR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32LoadMem0_RR { result, ptr, offset },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32LoadMem0_RR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32LoadMem0_RS { result, ptr, offset } => 
                <crate::op::I32LoadMem0_RS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32LoadMem0_RS { result, ptr, offset },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32LoadMem0_RS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32LoadMem0_RI { result, address } => 
                <crate::op::I32LoadMem0_RI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32LoadMem0_RI { result, address },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32LoadMem0_RI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32LoadMem0_SR { result, ptr, offset } => 
                <crate::op::I32LoadMem0_SR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32LoadMem0_SR { result, ptr, offset },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32LoadMem0_SR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32LoadMem0_SS { result, ptr, offset } => 
                <crate::op::I32LoadMem0_SS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32LoadMem0_SS { result, ptr, offset },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32LoadMem0_SS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32LoadMem0_SI { result, address } => 
                <crate::op::I32LoadMem0_SI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32LoadMem0_SI { result, address },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32LoadMem0_SI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Load_RR { result, ptr, offset, memory } => 
                <crate::op::I64Load_RR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Load_RR { result, ptr, offset, memory },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Load_RR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Load_RS { result, ptr, offset, memory } => 
                <crate::op::I64Load_RS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Load_RS { result, ptr, offset, memory },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Load_RS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Load_RI { result, address, memory } => 
                <crate::op::I64Load_RI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Load_RI { result, address, memory },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Load_RI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64LoadMem0_RR { result, ptr, offset } => 
                <crate::op::I64LoadMem0_RR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64LoadMem0_RR { result, ptr, offset },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64LoadMem0_RR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64LoadMem0_RS { result, ptr, offset } => 
                <crate::op::I64LoadMem0_RS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64LoadMem0_RS { result, ptr, offset },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64LoadMem0_RS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64LoadMem0_RI { result, address } => 
                <crate::op::I64LoadMem0_RI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64LoadMem0_RI { result, address },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64LoadMem0_RI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64LoadMem0_SR { result, ptr, offset } => 
                <crate::op::I64LoadMem0_SR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64LoadMem0_SR { result, ptr, offset },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64LoadMem0_SR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64LoadMem0_SS { result, ptr, offset } => 
                <crate::op::I64LoadMem0_SS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64LoadMem0_SS { result, ptr, offset },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64LoadMem0_SS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64LoadMem0_SI { result, address } => 
                <crate::op::I64LoadMem0_SI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64LoadMem0_SI { result, address },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64LoadMem0_SI as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Load_RR { result, ptr, offset, memory } => 
                <crate::op::F32Load_RR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Load_RR { result, ptr, offset, memory },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Load_RR as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Load_RS { result, ptr, offset, memory } => 
                <crate::op::F32Load_RS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Load_RS { result, ptr, offset, memory },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Load_RS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32Load_RI { result, address, memory } => 
                <crate::op::F32Load_RI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32Load_RI { result, address, memory },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32Load_RI as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32LoadMem0_RR { result, ptr, offset } => 
                <crate::op::F32LoadMem0_RR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32LoadMem0_RR { result, ptr, offset },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32LoadMem0_RR as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32LoadMem0_RS { result, ptr, offset } => 
                <crate::op::F32LoadMem0_RS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32LoadMem0_RS { result, ptr, offset },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32LoadMem0_RS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32LoadMem0_RI { result, address } => 
                <crate::op::F32LoadMem0_RI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32LoadMem0_RI { result, address },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32LoadMem0_RI as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32LoadMem0_SR { result, ptr, offset } => 
                <crate::op::F32LoadMem0_SR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32LoadMem0_SR { result, ptr, offset },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32LoadMem0_SR as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32LoadMem0_SS { result, ptr, offset } => 
                <crate::op::F32LoadMem0_SS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32LoadMem0_SS { result, ptr, offset },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32LoadMem0_SS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F32LoadMem0_SI { result, address } => 
                <crate::op::F32LoadMem0_SI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F32LoadMem0_SI { result, address },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F32LoadMem0_SI as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Load_RR { result, ptr, offset, memory } => 
                <crate::op::F64Load_RR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Load_RR { result, ptr, offset, memory },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Load_RR as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Load_RS { result, ptr, offset, memory } => 
                <crate::op::F64Load_RS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Load_RS { result, ptr, offset, memory },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Load_RS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64Load_RI { result, address, memory } => 
                <crate::op::F64Load_RI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64Load_RI { result, address, memory },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64Load_RI as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64LoadMem0_RR { result, ptr, offset } => 
                <crate::op::F64LoadMem0_RR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64LoadMem0_RR { result, ptr, offset },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64LoadMem0_RR as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64LoadMem0_RS { result, ptr, offset } => 
                <crate::op::F64LoadMem0_RS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64LoadMem0_RS { result, ptr, offset },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64LoadMem0_RS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64LoadMem0_RI { result, address } => 
                <crate::op::F64LoadMem0_RI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64LoadMem0_RI { result, address },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64LoadMem0_RI as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64LoadMem0_SR { result, ptr, offset } => 
                <crate::op::F64LoadMem0_SR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64LoadMem0_SR { result, ptr, offset },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64LoadMem0_SR as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64LoadMem0_SS { result, ptr, offset } => 
                <crate::op::F64LoadMem0_SS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64LoadMem0_SS { result, ptr, offset },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64LoadMem0_SS as crate::UpdateOperatorResult>::Output>>::from),
            Self::F64LoadMem0_SI { result, address } => 
                <crate::op::F64LoadMem0_SI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::F64LoadMem0_SI { result, address },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::F64LoadMem0_SI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Load8S_RR { result, ptr, offset, memory } => 
                <crate::op::I32Load8S_RR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Load8S_RR { result, ptr, offset, memory },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Load8S_RR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Load8S_RS { result, ptr, offset, memory } => 
                <crate::op::I32Load8S_RS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Load8S_RS { result, ptr, offset, memory },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Load8S_RS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Load8S_RI { result, address, memory } => 
                <crate::op::I32Load8S_RI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Load8S_RI { result, address, memory },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Load8S_RI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Load8SMem0_RR { result, ptr, offset } => 
                <crate::op::I32Load8SMem0_RR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Load8SMem0_RR { result, ptr, offset },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Load8SMem0_RR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Load8SMem0_RS { result, ptr, offset } => 
                <crate::op::I32Load8SMem0_RS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Load8SMem0_RS { result, ptr, offset },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Load8SMem0_RS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Load8SMem0_RI { result, address } => 
                <crate::op::I32Load8SMem0_RI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Load8SMem0_RI { result, address },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Load8SMem0_RI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Load8SMem0_SR { result, ptr, offset } => 
                <crate::op::I32Load8SMem0_SR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Load8SMem0_SR { result, ptr, offset },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Load8SMem0_SR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Load8SMem0_SS { result, ptr, offset } => 
                <crate::op::I32Load8SMem0_SS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Load8SMem0_SS { result, ptr, offset },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Load8SMem0_SS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Load8SMem0_SI { result, address } => 
                <crate::op::I32Load8SMem0_SI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Load8SMem0_SI { result, address },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Load8SMem0_SI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Load8S_RR { result, ptr, offset, memory } => 
                <crate::op::I64Load8S_RR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Load8S_RR { result, ptr, offset, memory },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Load8S_RR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Load8S_RS { result, ptr, offset, memory } => 
                <crate::op::I64Load8S_RS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Load8S_RS { result, ptr, offset, memory },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Load8S_RS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Load8S_RI { result, address, memory } => 
                <crate::op::I64Load8S_RI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Load8S_RI { result, address, memory },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Load8S_RI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Load8SMem0_RR { result, ptr, offset } => 
                <crate::op::I64Load8SMem0_RR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Load8SMem0_RR { result, ptr, offset },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Load8SMem0_RR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Load8SMem0_RS { result, ptr, offset } => 
                <crate::op::I64Load8SMem0_RS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Load8SMem0_RS { result, ptr, offset },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Load8SMem0_RS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Load8SMem0_RI { result, address } => 
                <crate::op::I64Load8SMem0_RI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Load8SMem0_RI { result, address },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Load8SMem0_RI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Load8SMem0_SR { result, ptr, offset } => 
                <crate::op::I64Load8SMem0_SR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Load8SMem0_SR { result, ptr, offset },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Load8SMem0_SR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Load8SMem0_SS { result, ptr, offset } => 
                <crate::op::I64Load8SMem0_SS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Load8SMem0_SS { result, ptr, offset },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Load8SMem0_SS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Load8SMem0_SI { result, address } => 
                <crate::op::I64Load8SMem0_SI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Load8SMem0_SI { result, address },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Load8SMem0_SI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Load8U_RR { result, ptr, offset, memory } => 
                <crate::op::I32Load8U_RR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Load8U_RR { result, ptr, offset, memory },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Load8U_RR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Load8U_RS { result, ptr, offset, memory } => 
                <crate::op::I32Load8U_RS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Load8U_RS { result, ptr, offset, memory },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Load8U_RS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Load8U_RI { result, address, memory } => 
                <crate::op::I32Load8U_RI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Load8U_RI { result, address, memory },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Load8U_RI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Load8UMem0_RR { result, ptr, offset } => 
                <crate::op::I32Load8UMem0_RR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Load8UMem0_RR { result, ptr, offset },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Load8UMem0_RR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Load8UMem0_RS { result, ptr, offset } => 
                <crate::op::I32Load8UMem0_RS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Load8UMem0_RS { result, ptr, offset },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Load8UMem0_RS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Load8UMem0_RI { result, address } => 
                <crate::op::I32Load8UMem0_RI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Load8UMem0_RI { result, address },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Load8UMem0_RI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Load8UMem0_SR { result, ptr, offset } => 
                <crate::op::I32Load8UMem0_SR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Load8UMem0_SR { result, ptr, offset },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Load8UMem0_SR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Load8UMem0_SS { result, ptr, offset } => 
                <crate::op::I32Load8UMem0_SS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Load8UMem0_SS { result, ptr, offset },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Load8UMem0_SS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Load8UMem0_SI { result, address } => 
                <crate::op::I32Load8UMem0_SI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Load8UMem0_SI { result, address },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Load8UMem0_SI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Load8U_RR { result, ptr, offset, memory } => 
                <crate::op::I64Load8U_RR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Load8U_RR { result, ptr, offset, memory },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Load8U_RR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Load8U_RS { result, ptr, offset, memory } => 
                <crate::op::I64Load8U_RS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Load8U_RS { result, ptr, offset, memory },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Load8U_RS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Load8U_RI { result, address, memory } => 
                <crate::op::I64Load8U_RI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Load8U_RI { result, address, memory },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Load8U_RI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Load8UMem0_RR { result, ptr, offset } => 
                <crate::op::I64Load8UMem0_RR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Load8UMem0_RR { result, ptr, offset },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Load8UMem0_RR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Load8UMem0_RS { result, ptr, offset } => 
                <crate::op::I64Load8UMem0_RS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Load8UMem0_RS { result, ptr, offset },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Load8UMem0_RS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Load8UMem0_RI { result, address } => 
                <crate::op::I64Load8UMem0_RI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Load8UMem0_RI { result, address },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Load8UMem0_RI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Load8UMem0_SR { result, ptr, offset } => 
                <crate::op::I64Load8UMem0_SR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Load8UMem0_SR { result, ptr, offset },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Load8UMem0_SR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Load8UMem0_SS { result, ptr, offset } => 
                <crate::op::I64Load8UMem0_SS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Load8UMem0_SS { result, ptr, offset },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Load8UMem0_SS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Load8UMem0_SI { result, address } => 
                <crate::op::I64Load8UMem0_SI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Load8UMem0_SI { result, address },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Load8UMem0_SI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Load16S_RR { result, ptr, offset, memory } => 
                <crate::op::I32Load16S_RR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Load16S_RR { result, ptr, offset, memory },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Load16S_RR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Load16S_RS { result, ptr, offset, memory } => 
                <crate::op::I32Load16S_RS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Load16S_RS { result, ptr, offset, memory },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Load16S_RS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Load16S_RI { result, address, memory } => 
                <crate::op::I32Load16S_RI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Load16S_RI { result, address, memory },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Load16S_RI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Load16SMem0_RR { result, ptr, offset } => 
                <crate::op::I32Load16SMem0_RR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Load16SMem0_RR { result, ptr, offset },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Load16SMem0_RR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Load16SMem0_RS { result, ptr, offset } => 
                <crate::op::I32Load16SMem0_RS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Load16SMem0_RS { result, ptr, offset },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Load16SMem0_RS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Load16SMem0_RI { result, address } => 
                <crate::op::I32Load16SMem0_RI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Load16SMem0_RI { result, address },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Load16SMem0_RI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Load16SMem0_SR { result, ptr, offset } => 
                <crate::op::I32Load16SMem0_SR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Load16SMem0_SR { result, ptr, offset },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Load16SMem0_SR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Load16SMem0_SS { result, ptr, offset } => 
                <crate::op::I32Load16SMem0_SS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Load16SMem0_SS { result, ptr, offset },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Load16SMem0_SS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Load16SMem0_SI { result, address } => 
                <crate::op::I32Load16SMem0_SI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Load16SMem0_SI { result, address },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Load16SMem0_SI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Load16S_RR { result, ptr, offset, memory } => 
                <crate::op::I64Load16S_RR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Load16S_RR { result, ptr, offset, memory },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Load16S_RR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Load16S_RS { result, ptr, offset, memory } => 
                <crate::op::I64Load16S_RS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Load16S_RS { result, ptr, offset, memory },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Load16S_RS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Load16S_RI { result, address, memory } => 
                <crate::op::I64Load16S_RI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Load16S_RI { result, address, memory },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Load16S_RI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Load16SMem0_RR { result, ptr, offset } => 
                <crate::op::I64Load16SMem0_RR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Load16SMem0_RR { result, ptr, offset },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Load16SMem0_RR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Load16SMem0_RS { result, ptr, offset } => 
                <crate::op::I64Load16SMem0_RS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Load16SMem0_RS { result, ptr, offset },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Load16SMem0_RS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Load16SMem0_RI { result, address } => 
                <crate::op::I64Load16SMem0_RI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Load16SMem0_RI { result, address },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Load16SMem0_RI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Load16SMem0_SR { result, ptr, offset } => 
                <crate::op::I64Load16SMem0_SR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Load16SMem0_SR { result, ptr, offset },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Load16SMem0_SR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Load16SMem0_SS { result, ptr, offset } => 
                <crate::op::I64Load16SMem0_SS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Load16SMem0_SS { result, ptr, offset },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Load16SMem0_SS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Load16SMem0_SI { result, address } => 
                <crate::op::I64Load16SMem0_SI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Load16SMem0_SI { result, address },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Load16SMem0_SI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Load16U_RR { result, ptr, offset, memory } => 
                <crate::op::I32Load16U_RR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Load16U_RR { result, ptr, offset, memory },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Load16U_RR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Load16U_RS { result, ptr, offset, memory } => 
                <crate::op::I32Load16U_RS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Load16U_RS { result, ptr, offset, memory },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Load16U_RS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Load16U_RI { result, address, memory } => 
                <crate::op::I32Load16U_RI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Load16U_RI { result, address, memory },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Load16U_RI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Load16UMem0_RR { result, ptr, offset } => 
                <crate::op::I32Load16UMem0_RR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Load16UMem0_RR { result, ptr, offset },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Load16UMem0_RR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Load16UMem0_RS { result, ptr, offset } => 
                <crate::op::I32Load16UMem0_RS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Load16UMem0_RS { result, ptr, offset },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Load16UMem0_RS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Load16UMem0_RI { result, address } => 
                <crate::op::I32Load16UMem0_RI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Load16UMem0_RI { result, address },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Load16UMem0_RI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Load16UMem0_SR { result, ptr, offset } => 
                <crate::op::I32Load16UMem0_SR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Load16UMem0_SR { result, ptr, offset },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Load16UMem0_SR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Load16UMem0_SS { result, ptr, offset } => 
                <crate::op::I32Load16UMem0_SS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Load16UMem0_SS { result, ptr, offset },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Load16UMem0_SS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I32Load16UMem0_SI { result, address } => 
                <crate::op::I32Load16UMem0_SI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I32Load16UMem0_SI { result, address },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I32Load16UMem0_SI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Load16U_RR { result, ptr, offset, memory } => 
                <crate::op::I64Load16U_RR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Load16U_RR { result, ptr, offset, memory },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Load16U_RR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Load16U_RS { result, ptr, offset, memory } => 
                <crate::op::I64Load16U_RS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Load16U_RS { result, ptr, offset, memory },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Load16U_RS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Load16U_RI { result, address, memory } => 
                <crate::op::I64Load16U_RI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Load16U_RI { result, address, memory },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Load16U_RI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Load16UMem0_RR { result, ptr, offset } => 
                <crate::op::I64Load16UMem0_RR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Load16UMem0_RR { result, ptr, offset },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Load16UMem0_RR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Load16UMem0_RS { result, ptr, offset } => 
                <crate::op::I64Load16UMem0_RS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Load16UMem0_RS { result, ptr, offset },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Load16UMem0_RS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Load16UMem0_RI { result, address } => 
                <crate::op::I64Load16UMem0_RI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Load16UMem0_RI { result, address },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Load16UMem0_RI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Load16UMem0_SR { result, ptr, offset } => 
                <crate::op::I64Load16UMem0_SR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Load16UMem0_SR { result, ptr, offset },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Load16UMem0_SR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Load16UMem0_SS { result, ptr, offset } => 
                <crate::op::I64Load16UMem0_SS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Load16UMem0_SS { result, ptr, offset },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Load16UMem0_SS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Load16UMem0_SI { result, address } => 
                <crate::op::I64Load16UMem0_SI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Load16UMem0_SI { result, address },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Load16UMem0_SI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Load32S_RR { result, ptr, offset, memory } => 
                <crate::op::I64Load32S_RR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Load32S_RR { result, ptr, offset, memory },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Load32S_RR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Load32S_RS { result, ptr, offset, memory } => 
                <crate::op::I64Load32S_RS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Load32S_RS { result, ptr, offset, memory },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Load32S_RS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Load32S_RI { result, address, memory } => 
                <crate::op::I64Load32S_RI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Load32S_RI { result, address, memory },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Load32S_RI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Load32SMem0_RR { result, ptr, offset } => 
                <crate::op::I64Load32SMem0_RR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Load32SMem0_RR { result, ptr, offset },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Load32SMem0_RR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Load32SMem0_RS { result, ptr, offset } => 
                <crate::op::I64Load32SMem0_RS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Load32SMem0_RS { result, ptr, offset },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Load32SMem0_RS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Load32SMem0_RI { result, address } => 
                <crate::op::I64Load32SMem0_RI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Load32SMem0_RI { result, address },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Load32SMem0_RI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Load32SMem0_SR { result, ptr, offset } => 
                <crate::op::I64Load32SMem0_SR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Load32SMem0_SR { result, ptr, offset },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Load32SMem0_SR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Load32SMem0_SS { result, ptr, offset } => 
                <crate::op::I64Load32SMem0_SS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Load32SMem0_SS { result, ptr, offset },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Load32SMem0_SS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Load32SMem0_SI { result, address } => 
                <crate::op::I64Load32SMem0_SI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Load32SMem0_SI { result, address },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Load32SMem0_SI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Load32U_RR { result, ptr, offset, memory } => 
                <crate::op::I64Load32U_RR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Load32U_RR { result, ptr, offset, memory },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Load32U_RR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Load32U_RS { result, ptr, offset, memory } => 
                <crate::op::I64Load32U_RS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Load32U_RS { result, ptr, offset, memory },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Load32U_RS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Load32U_RI { result, address, memory } => 
                <crate::op::I64Load32U_RI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Load32U_RI { result, address, memory },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Load32U_RI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Load32UMem0_RR { result, ptr, offset } => 
                <crate::op::I64Load32UMem0_RR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Load32UMem0_RR { result, ptr, offset },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Load32UMem0_RR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Load32UMem0_RS { result, ptr, offset } => 
                <crate::op::I64Load32UMem0_RS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Load32UMem0_RS { result, ptr, offset },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Load32UMem0_RS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Load32UMem0_RI { result, address } => 
                <crate::op::I64Load32UMem0_RI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Load32UMem0_RI { result, address },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Load32UMem0_RI as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Load32UMem0_SR { result, ptr, offset } => 
                <crate::op::I64Load32UMem0_SR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Load32UMem0_SR { result, ptr, offset },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Load32UMem0_SR as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Load32UMem0_SS { result, ptr, offset } => 
                <crate::op::I64Load32UMem0_SS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Load32UMem0_SS { result, ptr, offset },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Load32UMem0_SS as crate::UpdateOperatorResult>::Output>>::from),
            Self::I64Load32UMem0_SI { result, address } => 
                <crate::op::I64Load32UMem0_SI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::I64Load32UMem0_SI { result, address },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::I64Load32UMem0_SI as crate::UpdateOperatorResult>::Output>>::from),
            Self::Select { result, condition, lhs, rhs } => 
                <crate::op::Select as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::Select { result, condition, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::Select as crate::UpdateOperatorResult>::Output>>::from),
            Self::SelectI32_RSSS { result, condition, lhs, rhs } => 
                <crate::op::SelectI32_RSSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::SelectI32_RSSS { result, condition, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::SelectI32_RSSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::SelectI32_RSSI { result, condition, lhs, rhs } => 
                <crate::op::SelectI32_RSSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::SelectI32_RSSI { result, condition, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::SelectI32_RSSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::SelectI32_RSIS { result, condition, lhs, rhs } => 
                <crate::op::SelectI32_RSIS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::SelectI32_RSIS { result, condition, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::SelectI32_RSIS as crate::UpdateOperatorResult>::Output>>::from),
            Self::SelectI32_RSII { result, condition, lhs, rhs } => 
                <crate::op::SelectI32_RSII as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::SelectI32_RSII { result, condition, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::SelectI32_RSII as crate::UpdateOperatorResult>::Output>>::from),
            Self::SelectI64_RRSS { result, condition, lhs, rhs } => 
                <crate::op::SelectI64_RRSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::SelectI64_RRSS { result, condition, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::SelectI64_RRSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::SelectI64_RRSI { result, condition, lhs, rhs } => 
                <crate::op::SelectI64_RRSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::SelectI64_RRSI { result, condition, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::SelectI64_RRSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::SelectI64_RRIS { result, condition, lhs, rhs } => 
                <crate::op::SelectI64_RRIS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::SelectI64_RRIS { result, condition, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::SelectI64_RRIS as crate::UpdateOperatorResult>::Output>>::from),
            Self::SelectI64_RRII { result, condition, lhs, rhs } => 
                <crate::op::SelectI64_RRII as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::SelectI64_RRII { result, condition, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::SelectI64_RRII as crate::UpdateOperatorResult>::Output>>::from),
            Self::SelectI64_RSRS { result, condition, lhs, rhs } => 
                <crate::op::SelectI64_RSRS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::SelectI64_RSRS { result, condition, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::SelectI64_RSRS as crate::UpdateOperatorResult>::Output>>::from),
            Self::SelectI64_RSRI { result, condition, lhs, rhs } => 
                <crate::op::SelectI64_RSRI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::SelectI64_RSRI { result, condition, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::SelectI64_RSRI as crate::UpdateOperatorResult>::Output>>::from),
            Self::SelectI64_RSSR { result, condition, lhs, rhs } => 
                <crate::op::SelectI64_RSSR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::SelectI64_RSSR { result, condition, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::SelectI64_RSSR as crate::UpdateOperatorResult>::Output>>::from),
            Self::SelectI64_RSSS { result, condition, lhs, rhs } => 
                <crate::op::SelectI64_RSSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::SelectI64_RSSS { result, condition, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::SelectI64_RSSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::SelectI64_RSSI { result, condition, lhs, rhs } => 
                <crate::op::SelectI64_RSSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::SelectI64_RSSI { result, condition, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::SelectI64_RSSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::SelectI64_RSIR { result, condition, lhs, rhs } => 
                <crate::op::SelectI64_RSIR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::SelectI64_RSIR { result, condition, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::SelectI64_RSIR as crate::UpdateOperatorResult>::Output>>::from),
            Self::SelectI64_RSIS { result, condition, lhs, rhs } => 
                <crate::op::SelectI64_RSIS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::SelectI64_RSIS { result, condition, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::SelectI64_RSIS as crate::UpdateOperatorResult>::Output>>::from),
            Self::SelectI64_RSII { result, condition, lhs, rhs } => 
                <crate::op::SelectI64_RSII as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::SelectI64_RSII { result, condition, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::SelectI64_RSII as crate::UpdateOperatorResult>::Output>>::from),
            Self::SelectF32_RRSS { result, condition, lhs, rhs } => 
                <crate::op::SelectF32_RRSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::SelectF32_RRSS { result, condition, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::SelectF32_RRSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::SelectF32_RRSI { result, condition, lhs, rhs } => 
                <crate::op::SelectF32_RRSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::SelectF32_RRSI { result, condition, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::SelectF32_RRSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::SelectF32_RRIS { result, condition, lhs, rhs } => 
                <crate::op::SelectF32_RRIS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::SelectF32_RRIS { result, condition, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::SelectF32_RRIS as crate::UpdateOperatorResult>::Output>>::from),
            Self::SelectF32_RRII { result, condition, lhs, rhs } => 
                <crate::op::SelectF32_RRII as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::SelectF32_RRII { result, condition, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::SelectF32_RRII as crate::UpdateOperatorResult>::Output>>::from),
            Self::SelectF32_RSRS { result, condition, lhs, rhs } => 
                <crate::op::SelectF32_RSRS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::SelectF32_RSRS { result, condition, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::SelectF32_RSRS as crate::UpdateOperatorResult>::Output>>::from),
            Self::SelectF32_RSRI { result, condition, lhs, rhs } => 
                <crate::op::SelectF32_RSRI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::SelectF32_RSRI { result, condition, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::SelectF32_RSRI as crate::UpdateOperatorResult>::Output>>::from),
            Self::SelectF32_RSSR { result, condition, lhs, rhs } => 
                <crate::op::SelectF32_RSSR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::SelectF32_RSSR { result, condition, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::SelectF32_RSSR as crate::UpdateOperatorResult>::Output>>::from),
            Self::SelectF32_RSSS { result, condition, lhs, rhs } => 
                <crate::op::SelectF32_RSSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::SelectF32_RSSS { result, condition, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::SelectF32_RSSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::SelectF32_RSSI { result, condition, lhs, rhs } => 
                <crate::op::SelectF32_RSSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::SelectF32_RSSI { result, condition, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::SelectF32_RSSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::SelectF32_RSIR { result, condition, lhs, rhs } => 
                <crate::op::SelectF32_RSIR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::SelectF32_RSIR { result, condition, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::SelectF32_RSIR as crate::UpdateOperatorResult>::Output>>::from),
            Self::SelectF32_RSIS { result, condition, lhs, rhs } => 
                <crate::op::SelectF32_RSIS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::SelectF32_RSIS { result, condition, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::SelectF32_RSIS as crate::UpdateOperatorResult>::Output>>::from),
            Self::SelectF32_RSII { result, condition, lhs, rhs } => 
                <crate::op::SelectF32_RSII as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::SelectF32_RSII { result, condition, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::SelectF32_RSII as crate::UpdateOperatorResult>::Output>>::from),
            Self::SelectF64_RRSS { result, condition, lhs, rhs } => 
                <crate::op::SelectF64_RRSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::SelectF64_RRSS { result, condition, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::SelectF64_RRSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::SelectF64_RRSI { result, condition, lhs, rhs } => 
                <crate::op::SelectF64_RRSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::SelectF64_RRSI { result, condition, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::SelectF64_RRSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::SelectF64_RRIS { result, condition, lhs, rhs } => 
                <crate::op::SelectF64_RRIS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::SelectF64_RRIS { result, condition, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::SelectF64_RRIS as crate::UpdateOperatorResult>::Output>>::from),
            Self::SelectF64_RRII { result, condition, lhs, rhs } => 
                <crate::op::SelectF64_RRII as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::SelectF64_RRII { result, condition, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::SelectF64_RRII as crate::UpdateOperatorResult>::Output>>::from),
            Self::SelectF64_RSRS { result, condition, lhs, rhs } => 
                <crate::op::SelectF64_RSRS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::SelectF64_RSRS { result, condition, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::SelectF64_RSRS as crate::UpdateOperatorResult>::Output>>::from),
            Self::SelectF64_RSRI { result, condition, lhs, rhs } => 
                <crate::op::SelectF64_RSRI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::SelectF64_RSRI { result, condition, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::SelectF64_RSRI as crate::UpdateOperatorResult>::Output>>::from),
            Self::SelectF64_RSSR { result, condition, lhs, rhs } => 
                <crate::op::SelectF64_RSSR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::SelectF64_RSSR { result, condition, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::SelectF64_RSSR as crate::UpdateOperatorResult>::Output>>::from),
            Self::SelectF64_RSSS { result, condition, lhs, rhs } => 
                <crate::op::SelectF64_RSSS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::SelectF64_RSSS { result, condition, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::SelectF64_RSSS as crate::UpdateOperatorResult>::Output>>::from),
            Self::SelectF64_RSSI { result, condition, lhs, rhs } => 
                <crate::op::SelectF64_RSSI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::SelectF64_RSSI { result, condition, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::SelectF64_RSSI as crate::UpdateOperatorResult>::Output>>::from),
            Self::SelectF64_RSIR { result, condition, lhs, rhs } => 
                <crate::op::SelectF64_RSIR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::SelectF64_RSIR { result, condition, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::SelectF64_RSIR as crate::UpdateOperatorResult>::Output>>::from),
            Self::SelectF64_RSIS { result, condition, lhs, rhs } => 
                <crate::op::SelectF64_RSIS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::SelectF64_RSIS { result, condition, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::SelectF64_RSIS as crate::UpdateOperatorResult>::Output>>::from),
            Self::SelectF64_RSII { result, condition, lhs, rhs } => 
                <crate::op::SelectF64_RSII as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::SelectF64_RSII { result, condition, lhs, rhs },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::SelectF64_RSII as crate::UpdateOperatorResult>::Output>>::from),
            Self::TableSize_R { result, index } => 
                <crate::op::TableSize_R as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::TableSize_R { result, index },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::TableSize_R as crate::UpdateOperatorResult>::Output>>::from),
            Self::TableSize_S { result, index } => 
                <crate::op::TableSize_S as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::TableSize_S { result, index },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::TableSize_S as crate::UpdateOperatorResult>::Output>>::from),
            Self::TableGet_RR { result, index, table } => 
                <crate::op::TableGet_RR as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::TableGet_RR { result, index, table },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::TableGet_RR as crate::UpdateOperatorResult>::Output>>::from),
            Self::TableGet_RS { result, index, table } => 
                <crate::op::TableGet_RS as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::TableGet_RS { result, index, table },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::TableGet_RS as crate::UpdateOperatorResult>::Output>>::from),
            Self::TableGet_RI { result, index, table } => 
                <crate::op::TableGet_RI as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::TableGet_RI { result, index, table },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::TableGet_RI as crate::UpdateOperatorResult>::Output>>::from),
            Self::TableGrow { result, delta, table } => 
                <crate::op::TableGrow as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::TableGrow { result, delta, table },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::TableGrow as crate::UpdateOperatorResult>::Output>>::from),
            Self::MemorySize_R { result, index } => 
                <crate::op::MemorySize_R as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::MemorySize_R { result, index },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::MemorySize_R as crate::UpdateOperatorResult>::Output>>::from),
            Self::MemorySize_S { result, index } => 
                <crate::op::MemorySize_S as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::MemorySize_S { result, index },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::MemorySize_S as crate::UpdateOperatorResult>::Output>>::from),
            Self::MemoryGrow { result, delta, memory } => 
                <crate::op::MemoryGrow as crate::UpdateOperatorResult>::update_operator_result(
                    &crate::op::MemoryGrow { result, delta, memory },
                    new_result,
                ).map(<Self as ::core::convert::From<<crate::op::MemoryGrow as crate::UpdateOperatorResult>::Output>>::from),

            _ => ::core::option::Option::None,
        }
    }
}
impl crate::UpdateOperatorResult for crate::op::Trap {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::ConsumeFuel {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::RefFunc {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::Copy1_S {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            value: self.value,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::Copy {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            len_values: self.len_values,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::Copy1I32_I {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            value: self.value,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::Copy1I64_R {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            value: self.value,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::Copy1I64_I {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            value: self.value,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::Copy1F32_R {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            value: self.value,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::Copy1F32_I {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            value: self.value,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::Copy1F64_R {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            value: self.value,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::Copy1F64_I {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            value: self.value,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::Return0 {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::Return1_S {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::Return {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::Return1I32_R {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::Return1I64_R {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::Return1F32_R {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::Return1F64_R {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::Return1I32_I {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::Return1I64_I {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::Return1F32_I {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::Return1F64_I {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::GlobalGet_S {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            index: self.index,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::GlobalGetI32_R {
    type Output = crate::op::GlobalGet_S;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            index: self.index,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::GlobalGetI64_R {
    type Output = crate::op::GlobalGet_S;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            index: self.index,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::GlobalGetF32_R {
    type Output = crate::op::GlobalGet_S;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            index: self.index,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::GlobalGetF64_R {
    type Output = crate::op::GlobalGet_S;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            index: self.index,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::GlobalSet_S {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::GlobalSetI32_R {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::GlobalSetI64_R {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::GlobalSetF32_R {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::GlobalSetF64_R {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::GlobalSetI32_I {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::GlobalSetI64_I {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::GlobalSetF32_I {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::GlobalSetF64_I {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::BranchTable0_R {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::BranchTable_R {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::BranchTable0_S {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::BranchTable_S {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::Branch {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32EqBranch_RS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32EqBranch_RI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32EqBranch_SS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32EqBranch_SI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64EqBranch_RS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64EqBranch_RI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64EqBranch_SS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64EqBranch_SI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F32EqBranch_RS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F32EqBranch_RI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F32EqBranch_SS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F32EqBranch_SI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F64EqBranch_RS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F64EqBranch_RI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F64EqBranch_SS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F64EqBranch_SI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32NeBranch_RS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32NeBranch_RI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32NeBranch_SS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32NeBranch_SI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64NeBranch_RS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64NeBranch_RI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64NeBranch_SS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64NeBranch_SI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F32NeBranch_RS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F32NeBranch_RI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F32NeBranch_SS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F32NeBranch_SI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F64NeBranch_RS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F64NeBranch_RI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F64NeBranch_SS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F64NeBranch_SI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32AndBranch_RS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32AndBranch_RI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32AndBranch_SS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32AndBranch_SI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64AndBranch_RS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64AndBranch_RI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64AndBranch_SS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64AndBranch_SI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32OrBranch_RS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32OrBranch_RI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32OrBranch_SS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32OrBranch_SI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64OrBranch_RS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64OrBranch_RI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64OrBranch_SS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64OrBranch_SI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32XorBranch_RS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32XorBranch_RI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32XorBranch_SS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32XorBranch_SI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64XorBranch_RS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64XorBranch_RI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64XorBranch_SS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64XorBranch_SI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32NotAndBranch_RS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32NotAndBranch_RI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32NotAndBranch_SS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32NotAndBranch_SI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64NotAndBranch_RS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64NotAndBranch_RI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64NotAndBranch_SS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64NotAndBranch_SI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32NotOrBranch_RS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32NotOrBranch_RI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32NotOrBranch_SS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32NotOrBranch_SI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64NotOrBranch_RS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64NotOrBranch_RI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64NotOrBranch_SS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64NotOrBranch_SI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32NotXorBranch_RS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32NotXorBranch_RI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32NotXorBranch_SS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32NotXorBranch_SI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64NotXorBranch_RS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64NotXorBranch_RI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64NotXorBranch_SS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64NotXorBranch_SI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32LtSBranch_RS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32LtSBranch_RI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32LtSBranch_SR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32LtSBranch_SS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32LtSBranch_SI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32LtSBranch_IR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32LtSBranch_IS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64LtSBranch_RS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64LtSBranch_RI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64LtSBranch_SR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64LtSBranch_SS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64LtSBranch_SI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64LtSBranch_IR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64LtSBranch_IS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32LtUBranch_RS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32LtUBranch_RI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32LtUBranch_SR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32LtUBranch_SS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32LtUBranch_SI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32LtUBranch_IR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32LtUBranch_IS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64LtUBranch_RS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64LtUBranch_RI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64LtUBranch_SR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64LtUBranch_SS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64LtUBranch_SI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64LtUBranch_IR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64LtUBranch_IS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32LeSBranch_RS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32LeSBranch_RI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32LeSBranch_SR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32LeSBranch_SS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32LeSBranch_SI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32LeSBranch_IR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32LeSBranch_IS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64LeSBranch_RS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64LeSBranch_RI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64LeSBranch_SR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64LeSBranch_SS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64LeSBranch_SI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64LeSBranch_IR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64LeSBranch_IS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32LeUBranch_RS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32LeUBranch_RI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32LeUBranch_SR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32LeUBranch_SS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32LeUBranch_SI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32LeUBranch_IR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32LeUBranch_IS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64LeUBranch_RS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64LeUBranch_RI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64LeUBranch_SR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64LeUBranch_SS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64LeUBranch_SI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64LeUBranch_IR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64LeUBranch_IS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F32LtBranch_RS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F32LtBranch_RI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F32LtBranch_SR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F32LtBranch_SS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F32LtBranch_SI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F32LtBranch_IR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F32LtBranch_IS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F64LtBranch_RS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F64LtBranch_RI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F64LtBranch_SR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F64LtBranch_SS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F64LtBranch_SI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F64LtBranch_IR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F64LtBranch_IS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F32LeBranch_RS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F32LeBranch_RI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F32LeBranch_SR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F32LeBranch_SS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F32LeBranch_SI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F32LeBranch_IR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F32LeBranch_IS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F64LeBranch_RS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F64LeBranch_RI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F64LeBranch_SR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F64LeBranch_SS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F64LeBranch_SI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F64LeBranch_IR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F64LeBranch_IS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32Popcnt_SR {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32Popcnt_SS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Popcnt_SR {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Popcnt_SS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32Clz_SR {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32Clz_SS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Clz_SR {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Clz_SS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32Ctz_SR {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32Ctz_SS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Ctz_SR {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Ctz_SS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F32Abs_SR {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F32Abs_SS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F64Abs_SR {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F64Abs_SS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F32Neg_SR {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F32Neg_SS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F64Neg_SR {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F64Neg_SS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F32Ceil_SR {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F32Ceil_SS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F64Ceil_SR {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F64Ceil_SS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F32Floor_SR {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F32Floor_SS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F64Floor_SR {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F64Floor_SS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F32Trunc_SR {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F32Trunc_SS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F64Trunc_SR {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F64Trunc_SS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F32Nearest_SR {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F32Nearest_SS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F64Nearest_SR {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F64Nearest_SS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F32Sqrt_SR {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F32Sqrt_SS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F64Sqrt_SR {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F64Sqrt_SS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F32Demote_SR {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F32Demote_SS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F64Promote_SR {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F64Promote_SS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F32ConvertI32S_SR {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F32ConvertI32S_SS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F32ConvertI32U_SR {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F32ConvertI32U_SS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F32ConvertI64S_SR {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F32ConvertI64S_SS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F32ConvertI64U_SR {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F32ConvertI64U_SS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F64ConvertI32S_SR {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F64ConvertI32S_SS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F64ConvertI32U_SR {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F64ConvertI32U_SS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F64ConvertI64S_SR {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F64ConvertI64S_SS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F64ConvertI64U_SR {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F64ConvertI64U_SS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32TruncF32S_SR {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32TruncF32S_SS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32TruncF32U_SR {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32TruncF32U_SS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32TruncF64S_SR {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32TruncF64S_SS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32TruncF64U_SR {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32TruncF64U_SS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64TruncF32S_SR {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64TruncF32S_SS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64TruncF32U_SR {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64TruncF32U_SS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64TruncF64S_SR {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64TruncF64S_SS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64TruncF64U_SR {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64TruncF64U_SS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32TruncSatF32S_SR {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32TruncSatF32S_SS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32TruncSatF32U_SR {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32TruncSatF32U_SS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32TruncSatF64S_SR {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32TruncSatF64S_SS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32TruncSatF64U_SR {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32TruncSatF64U_SS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64TruncSatF32S_SR {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64TruncSatF32S_SS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64TruncSatF32U_SR {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64TruncSatF32U_SS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64TruncSatF64S_SR {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64TruncSatF64S_SS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64TruncSatF64U_SR {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64TruncSatF64U_SS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32Extend8S_SR {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32Extend8S_SS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32Extend16S_SR {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32Extend16S_SS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Extend8S_SR {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Extend8S_SS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Extend16S_SR {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Extend16S_SS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Extend32S_SR {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Extend32S_SS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32WrapI64_SR {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32WrapI64_SS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32Add_SRS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32Add_SRI {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32Add_SSS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32Add_SSI {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Add_SRS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Add_SRI {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Add_SSS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Add_SSI {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32Mul_SRS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32Mul_SRI {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32Mul_SSS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32Mul_SSI {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Mul_SRS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Mul_SRI {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Mul_SSS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Mul_SSI {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32BitAnd_SRS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32BitAnd_SRI {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32BitAnd_SSS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32BitAnd_SSI {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64BitAnd_SRS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64BitAnd_SRI {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64BitAnd_SSS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64BitAnd_SSI {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32BitOr_SRS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32BitOr_SRI {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32BitOr_SSS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32BitOr_SSI {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64BitOr_SRS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64BitOr_SRI {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64BitOr_SSS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64BitOr_SSI {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32BitXor_SRS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32BitXor_SRI {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32BitXor_SSS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32BitXor_SSI {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64BitXor_SRS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64BitXor_SRI {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64BitXor_SSS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64BitXor_SSI {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32And_SRS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32And_SRI {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32And_SSS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32And_SSI {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64And_SRS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64And_SRI {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64And_SSS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64And_SSI {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32Or_SRS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32Or_SRI {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32Or_SSS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32Or_SSI {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Or_SRS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Or_SRI {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Or_SSS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Or_SSI {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32Xor_SRS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32Xor_SRI {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32Xor_SSS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32Xor_SSI {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Xor_SRS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Xor_SRI {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Xor_SSS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Xor_SSI {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32Eq_SRS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32Eq_SRI {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32Eq_SSS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32Eq_SSI {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Eq_SRS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Eq_SRI {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Eq_SSS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Eq_SSI {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32Ne_SRS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32Ne_SRI {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32Ne_SSS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32Ne_SSI {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Ne_SRS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Ne_SRI {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Ne_SSS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Ne_SSI {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F32Add_SRS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F32Add_SRI {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F32Add_SSS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F32Add_SSI {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F64Add_SRS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F64Add_SRI {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F64Add_SSS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F64Add_SSI {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F32Mul_SRS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F32Mul_SRI {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F32Mul_SSS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F32Mul_SSI {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F64Mul_SRS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F64Mul_SRI {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F64Mul_SSS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F64Mul_SSI {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F32Eq_SRS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F32Eq_SRI {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F32Eq_SSS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F32Eq_SSI {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F64Eq_SRS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F64Eq_SRI {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F64Eq_SSS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F64Eq_SSI {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F32Ne_SRS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F32Ne_SRI {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F32Ne_SSS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F32Ne_SSI {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F64Ne_SRS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F64Ne_SRI {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F64Ne_SSS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F64Ne_SSI {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F32Min_SRS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F32Min_SRI {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F32Min_SSS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F32Min_SSI {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F64Min_SRS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F64Min_SRI {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F64Min_SSS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F64Min_SSI {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F32Max_SRS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F32Max_SRI {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F32Max_SSS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F32Max_SSI {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F64Max_SRS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F64Max_SRI {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F64Max_SSS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F64Max_SSI {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32Sub_RRS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32Sub_RRI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32Sub_RSR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32Sub_RSS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32Sub_RSI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32Sub_RIR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32Sub_RIS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64Sub_RRS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64Sub_RRI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64Sub_RSR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64Sub_RSS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64Sub_RSI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64Sub_RIR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64Sub_RIS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32LtS_RRS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32LtS_RRI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32LtS_RSR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32LtS_RSS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32LtS_RSI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32LtS_RIR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32LtS_RIS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64LtS_RRS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64LtS_RRI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64LtS_RSR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64LtS_RSS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64LtS_RSI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64LtS_RIR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64LtS_RIS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32LtU_RRS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32LtU_RRI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32LtU_RSR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32LtU_RSS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32LtU_RSI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32LtU_RIR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32LtU_RIS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64LtU_RRS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64LtU_RRI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64LtU_RSR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64LtU_RSS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64LtU_RSI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64LtU_RIR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64LtU_RIS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32LeS_RRS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32LeS_RRI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32LeS_RSR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32LeS_RSS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32LeS_RSI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32LeS_RIR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32LeS_RIS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64LeS_RRS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64LeS_RRI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64LeS_RSR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64LeS_RSS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64LeS_RSI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64LeS_RIR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64LeS_RIS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32LeU_RRS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32LeU_RRI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32LeU_RSR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32LeU_RSS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32LeU_RSI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32LeU_RIR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32LeU_RIS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64LeU_RRS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64LeU_RRI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64LeU_RSR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64LeU_RSS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64LeU_RSI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64LeU_RIR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64LeU_RIS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32DivS_RRS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32DivS_RRI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32DivS_RSR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32DivS_RSS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32DivS_RSI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32DivS_RIR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32DivS_RIS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64DivS_RRS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64DivS_RRI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64DivS_RSR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64DivS_RSS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64DivS_RSI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64DivS_RIR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64DivS_RIS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32DivU_RRS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32DivU_RRI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32DivU_RSR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32DivU_RSS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32DivU_RSI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32DivU_RIR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32DivU_RIS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64DivU_RRS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64DivU_RRI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64DivU_RSR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64DivU_RSS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64DivU_RSI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64DivU_RIR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64DivU_RIS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32RemS_RRS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32RemS_RRI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32RemS_RSR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32RemS_RSS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32RemS_RSI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32RemS_RIR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32RemS_RIS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64RemS_RRS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64RemS_RRI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64RemS_RSR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64RemS_RSS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64RemS_RSI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64RemS_RIR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64RemS_RIS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32RemU_RRS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32RemU_RRI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32RemU_RSR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32RemU_RSS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32RemU_RSI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32RemU_RIR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32RemU_RIS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64RemU_RRS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64RemU_RRI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64RemU_RSR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64RemU_RSS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64RemU_RSI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64RemU_RIR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64RemU_RIS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32Shl_RRS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32Shl_RRI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32Shl_RSR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32Shl_RSS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32Shl_RSI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32Shl_RIR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32Shl_RIS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64Shl_RRS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64Shl_RRI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64Shl_RSR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64Shl_RSS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64Shl_RSI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64Shl_RIR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64Shl_RIS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32ShrS_RRS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32ShrS_RRI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32ShrS_RSR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32ShrS_RSS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32ShrS_RSI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32ShrS_RIR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32ShrS_RIS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64ShrS_RRS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64ShrS_RRI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64ShrS_RSR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64ShrS_RSS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64ShrS_RSI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64ShrS_RIR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64ShrS_RIS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32ShrU_RRS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32ShrU_RRI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32ShrU_RSR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32ShrU_RSS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32ShrU_RSI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32ShrU_RIR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32ShrU_RIS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64ShrU_RRS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64ShrU_RRI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64ShrU_RSR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64ShrU_RSS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64ShrU_RSI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64ShrU_RIR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64ShrU_RIS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32Rotl_RRS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32Rotl_RRI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32Rotl_RSR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32Rotl_RSS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32Rotl_RSI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32Rotl_RIR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32Rotl_RIS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64Rotl_RRS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64Rotl_RRI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64Rotl_RSR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64Rotl_RSS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64Rotl_RSI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64Rotl_RIR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64Rotl_RIS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32Rotr_RRS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32Rotr_RRI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32Rotr_RSR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32Rotr_RSS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32Rotr_RSI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32Rotr_RIR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32Rotr_RIS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64Rotr_RRS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64Rotr_RRI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64Rotr_RSR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64Rotr_RSS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64Rotr_RSI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64Rotr_RIR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64Rotr_RIS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F32Sub_RRS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F32Sub_RRI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F32Sub_RSR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F32Sub_RSS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F32Sub_RSI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F32Sub_RIR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F32Sub_RIS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F64Sub_RRS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F64Sub_RRI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F64Sub_RSR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F64Sub_RSS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F64Sub_RSI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F64Sub_RIR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F64Sub_RIS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F32Div_RRS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F32Div_RRI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F32Div_RSR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F32Div_RSS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F32Div_RSI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F32Div_RIR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F32Div_RIS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F64Div_RRS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F64Div_RRI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F64Div_RSR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F64Div_RSS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F64Div_RSI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F64Div_RIR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F64Div_RIS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F32Copysign_RRS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F32Copysign_RRI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F32Copysign_RSR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F32Copysign_RSS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F32Copysign_RSI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F32Copysign_RIR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F32Copysign_RIS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F64Copysign_RRS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F64Copysign_RRI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F64Copysign_RSR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F64Copysign_RSS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F64Copysign_RSI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F64Copysign_RIR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F64Copysign_RIS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32LoadMem0_SR {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            ptr: self.ptr,
            offset: self.offset,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32LoadMem0_SS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            ptr: self.ptr,
            offset: self.offset,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32LoadMem0_SI {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            address: self.address,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64LoadMem0_SR {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            ptr: self.ptr,
            offset: self.offset,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64LoadMem0_SS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            ptr: self.ptr,
            offset: self.offset,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64LoadMem0_SI {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            address: self.address,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F32LoadMem0_SR {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            ptr: self.ptr,
            offset: self.offset,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F32LoadMem0_SS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            ptr: self.ptr,
            offset: self.offset,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F32LoadMem0_SI {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            address: self.address,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F64LoadMem0_SR {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            ptr: self.ptr,
            offset: self.offset,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F64LoadMem0_SS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            ptr: self.ptr,
            offset: self.offset,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F64LoadMem0_SI {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            address: self.address,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32Load8SMem0_SR {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            ptr: self.ptr,
            offset: self.offset,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32Load8SMem0_SS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            ptr: self.ptr,
            offset: self.offset,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32Load8SMem0_SI {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            address: self.address,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Load8SMem0_SR {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            ptr: self.ptr,
            offset: self.offset,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Load8SMem0_SS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            ptr: self.ptr,
            offset: self.offset,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Load8SMem0_SI {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            address: self.address,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32Load8UMem0_SR {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            ptr: self.ptr,
            offset: self.offset,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32Load8UMem0_SS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            ptr: self.ptr,
            offset: self.offset,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32Load8UMem0_SI {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            address: self.address,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Load8UMem0_SR {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            ptr: self.ptr,
            offset: self.offset,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Load8UMem0_SS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            ptr: self.ptr,
            offset: self.offset,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Load8UMem0_SI {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            address: self.address,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32Load16SMem0_SR {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            ptr: self.ptr,
            offset: self.offset,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32Load16SMem0_SS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            ptr: self.ptr,
            offset: self.offset,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32Load16SMem0_SI {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            address: self.address,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Load16SMem0_SR {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            ptr: self.ptr,
            offset: self.offset,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Load16SMem0_SS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            ptr: self.ptr,
            offset: self.offset,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Load16SMem0_SI {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            address: self.address,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32Load16UMem0_SR {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            ptr: self.ptr,
            offset: self.offset,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32Load16UMem0_SS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            ptr: self.ptr,
            offset: self.offset,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32Load16UMem0_SI {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            address: self.address,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Load16UMem0_SR {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            ptr: self.ptr,
            offset: self.offset,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Load16UMem0_SS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            ptr: self.ptr,
            offset: self.offset,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Load16UMem0_SI {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            address: self.address,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Load32SMem0_SR {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            ptr: self.ptr,
            offset: self.offset,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Load32SMem0_SS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            ptr: self.ptr,
            offset: self.offset,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Load32SMem0_SI {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            address: self.address,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Load32UMem0_SR {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            ptr: self.ptr,
            offset: self.offset,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Load32UMem0_SS {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            ptr: self.ptr,
            offset: self.offset,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Load32UMem0_SI {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            address: self.address,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32Store_SS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32Store_SI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32Store_IS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32Store_II {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32StoreMem0_RS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32StoreMem0_RI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32StoreMem0_SR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32StoreMem0_SS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32StoreMem0_SI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32StoreMem0_IR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32StoreMem0_IS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32StoreMem0_II {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64Store_SS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64Store_SI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64Store_IS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64Store_II {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64StoreMem0_RS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64StoreMem0_RI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64StoreMem0_SR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64StoreMem0_SS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64StoreMem0_SI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64StoreMem0_IR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64StoreMem0_IS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64StoreMem0_II {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F32Store_SS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F32Store_SI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F32Store_IS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F32Store_II {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F32StoreMem0_RR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F32StoreMem0_RS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F32StoreMem0_RI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F32StoreMem0_SR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F32StoreMem0_SS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F32StoreMem0_SI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F32StoreMem0_IR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F32StoreMem0_IS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F32StoreMem0_II {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F64Store_SS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F64Store_SI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F64Store_IS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F64Store_II {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F64StoreMem0_RR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F64StoreMem0_RS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F64StoreMem0_RI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F64StoreMem0_SR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F64StoreMem0_SS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F64StoreMem0_SI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F64StoreMem0_IR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F64StoreMem0_IS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F64StoreMem0_II {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32Store8_SS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32Store8_SI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32Store8_IS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32Store8_II {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32Store8Mem0_RS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32Store8Mem0_RI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32Store8Mem0_SR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32Store8Mem0_SS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32Store8Mem0_SI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32Store8Mem0_IR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32Store8Mem0_IS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32Store8Mem0_II {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64Store8_SS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64Store8_SI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64Store8_IS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64Store8_II {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64Store8Mem0_RS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64Store8Mem0_RI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64Store8Mem0_SR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64Store8Mem0_SS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64Store8Mem0_SI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64Store8Mem0_IR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64Store8Mem0_IS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64Store8Mem0_II {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32Store16_SS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32Store16_SI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32Store16_IS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32Store16_II {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32Store16Mem0_RS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32Store16Mem0_RI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32Store16Mem0_SR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32Store16Mem0_SS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32Store16Mem0_SI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32Store16Mem0_IR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32Store16Mem0_IS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32Store16Mem0_II {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64Store16_SS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64Store16_SI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64Store16_IS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64Store16_II {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64Store16Mem0_RS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64Store16Mem0_RI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64Store16Mem0_SR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64Store16Mem0_SS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64Store16Mem0_SI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64Store16Mem0_IR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64Store16Mem0_IS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64Store16Mem0_II {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64Store32_SS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64Store32_SI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64Store32_IS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64Store32_II {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64Store32Mem0_RS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64Store32Mem0_RI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64Store32Mem0_SR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64Store32Mem0_SS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64Store32Mem0_SI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64Store32Mem0_IR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64Store32Mem0_IS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64Store32Mem0_II {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::Select {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::SelectI32_RSSS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::SelectI32_RSSI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::SelectI32_RSIS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::SelectI32_RSII {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::SelectI64_RRSS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::SelectI64_RRSI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::SelectI64_RRIS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::SelectI64_RRII {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::SelectI64_RSRS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::SelectI64_RSRI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::SelectI64_RSSR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::SelectI64_RSSS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::SelectI64_RSSI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::SelectI64_RSIR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::SelectI64_RSIS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::SelectI64_RSII {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::SelectF32_RRSS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::SelectF32_RRSI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::SelectF32_RRIS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::SelectF32_RRII {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::SelectF32_RSRS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::SelectF32_RSRI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::SelectF32_RSSR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::SelectF32_RSSS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::SelectF32_RSSI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::SelectF32_RSIR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::SelectF32_RSIS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::SelectF32_RSII {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::SelectF64_RRSS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::SelectF64_RRSI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::SelectF64_RRIS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::SelectF64_RRII {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::SelectF64_RSRS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::SelectF64_RSRI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::SelectF64_RSSR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::SelectF64_RSSS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::SelectF64_RSSI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::SelectF64_RSIR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::SelectF64_RSIS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::SelectF64_RSII {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::TableSize_R {
    type Output = crate::op::TableSize_S;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            index: self.index,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::TableSize_S {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            index: self.index,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::TableGet_RR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::TableGet_RS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::TableGet_RI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::TableSet_RS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::TableSet_RI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::TableSet_SR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::TableSet_SS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::TableSet_SI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::TableSet_IR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::TableSet_IS {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::TableSet_II {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::TableGrow {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            delta: self.delta,
            table: self.table,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::TableCopy {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::TableFill {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::TableInit {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::MemorySize_R {
    type Output = crate::op::MemorySize_S;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            index: self.index,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::MemorySize_S {
    type Output = Self;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            index: self.index,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::MemoryGrow {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::MemoryCopy {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::MemoryFill {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::MemoryInit {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::CallInternal {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::ReturnCallInternal {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::CallImported {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::ReturnCallImported {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::CallIndirect_R {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::CallIndirect_S {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::CallIndirect_I {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::ReturnCallIndirect_R {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::ReturnCallIndirect_S {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::ReturnCallIndirect_I {
    type Output = crate::NoOp;
}

impl crate::UpdateOperatorResult for crate::op::I32Popcnt_RR {
    type Output = crate::op::I32Popcnt_SR;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32Popcnt_RS {
    type Output = crate::op::I32Popcnt_SS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Popcnt_RR {
    type Output = crate::op::I64Popcnt_SR;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Popcnt_RS {
    type Output = crate::op::I64Popcnt_SS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32Clz_RR {
    type Output = crate::op::I32Clz_SR;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32Clz_RS {
    type Output = crate::op::I32Clz_SS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Clz_RR {
    type Output = crate::op::I64Clz_SR;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Clz_RS {
    type Output = crate::op::I64Clz_SS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32Ctz_RR {
    type Output = crate::op::I32Ctz_SR;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32Ctz_RS {
    type Output = crate::op::I32Ctz_SS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Ctz_RR {
    type Output = crate::op::I64Ctz_SR;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Ctz_RS {
    type Output = crate::op::I64Ctz_SS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F32Abs_RR {
    type Output = crate::op::F32Abs_SR;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F32Abs_RS {
    type Output = crate::op::F32Abs_SS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F64Abs_RR {
    type Output = crate::op::F64Abs_SR;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F64Abs_RS {
    type Output = crate::op::F64Abs_SS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F32Neg_RR {
    type Output = crate::op::F32Neg_SR;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F32Neg_RS {
    type Output = crate::op::F32Neg_SS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F64Neg_RR {
    type Output = crate::op::F64Neg_SR;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F64Neg_RS {
    type Output = crate::op::F64Neg_SS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F32Ceil_RR {
    type Output = crate::op::F32Ceil_SR;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F32Ceil_RS {
    type Output = crate::op::F32Ceil_SS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F64Ceil_RR {
    type Output = crate::op::F64Ceil_SR;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F64Ceil_RS {
    type Output = crate::op::F64Ceil_SS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F32Floor_RR {
    type Output = crate::op::F32Floor_SR;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F32Floor_RS {
    type Output = crate::op::F32Floor_SS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F64Floor_RR {
    type Output = crate::op::F64Floor_SR;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F64Floor_RS {
    type Output = crate::op::F64Floor_SS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F32Trunc_RR {
    type Output = crate::op::F32Trunc_SR;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F32Trunc_RS {
    type Output = crate::op::F32Trunc_SS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F64Trunc_RR {
    type Output = crate::op::F64Trunc_SR;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F64Trunc_RS {
    type Output = crate::op::F64Trunc_SS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F32Nearest_RR {
    type Output = crate::op::F32Nearest_SR;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F32Nearest_RS {
    type Output = crate::op::F32Nearest_SS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F64Nearest_RR {
    type Output = crate::op::F64Nearest_SR;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F64Nearest_RS {
    type Output = crate::op::F64Nearest_SS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F32Sqrt_RR {
    type Output = crate::op::F32Sqrt_SR;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F32Sqrt_RS {
    type Output = crate::op::F32Sqrt_SS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F64Sqrt_RR {
    type Output = crate::op::F64Sqrt_SR;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F64Sqrt_RS {
    type Output = crate::op::F64Sqrt_SS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F32Demote_RR {
    type Output = crate::op::F32Demote_SR;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F32Demote_RS {
    type Output = crate::op::F32Demote_SS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F64Promote_RR {
    type Output = crate::op::F64Promote_SR;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F64Promote_RS {
    type Output = crate::op::F64Promote_SS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F32ConvertI32S_RR {
    type Output = crate::op::F32ConvertI32S_SR;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F32ConvertI32S_RS {
    type Output = crate::op::F32ConvertI32S_SS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F32ConvertI32U_RR {
    type Output = crate::op::F32ConvertI32U_SR;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F32ConvertI32U_RS {
    type Output = crate::op::F32ConvertI32U_SS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F32ConvertI64S_RR {
    type Output = crate::op::F32ConvertI64S_SR;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F32ConvertI64S_RS {
    type Output = crate::op::F32ConvertI64S_SS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F32ConvertI64U_RR {
    type Output = crate::op::F32ConvertI64U_SR;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F32ConvertI64U_RS {
    type Output = crate::op::F32ConvertI64U_SS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F64ConvertI32S_RR {
    type Output = crate::op::F64ConvertI32S_SR;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F64ConvertI32S_RS {
    type Output = crate::op::F64ConvertI32S_SS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F64ConvertI32U_RR {
    type Output = crate::op::F64ConvertI32U_SR;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F64ConvertI32U_RS {
    type Output = crate::op::F64ConvertI32U_SS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F64ConvertI64S_RR {
    type Output = crate::op::F64ConvertI64S_SR;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F64ConvertI64S_RS {
    type Output = crate::op::F64ConvertI64S_SS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F64ConvertI64U_RR {
    type Output = crate::op::F64ConvertI64U_SR;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F64ConvertI64U_RS {
    type Output = crate::op::F64ConvertI64U_SS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32TruncF32S_RR {
    type Output = crate::op::I32TruncF32S_SR;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32TruncF32S_RS {
    type Output = crate::op::I32TruncF32S_SS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32TruncF32U_RR {
    type Output = crate::op::I32TruncF32U_SR;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32TruncF32U_RS {
    type Output = crate::op::I32TruncF32U_SS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32TruncF64S_RR {
    type Output = crate::op::I32TruncF64S_SR;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32TruncF64S_RS {
    type Output = crate::op::I32TruncF64S_SS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32TruncF64U_RR {
    type Output = crate::op::I32TruncF64U_SR;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32TruncF64U_RS {
    type Output = crate::op::I32TruncF64U_SS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64TruncF32S_RR {
    type Output = crate::op::I64TruncF32S_SR;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64TruncF32S_RS {
    type Output = crate::op::I64TruncF32S_SS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64TruncF32U_RR {
    type Output = crate::op::I64TruncF32U_SR;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64TruncF32U_RS {
    type Output = crate::op::I64TruncF32U_SS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64TruncF64S_RR {
    type Output = crate::op::I64TruncF64S_SR;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64TruncF64S_RS {
    type Output = crate::op::I64TruncF64S_SS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64TruncF64U_RR {
    type Output = crate::op::I64TruncF64U_SR;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64TruncF64U_RS {
    type Output = crate::op::I64TruncF64U_SS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32TruncSatF32S_RR {
    type Output = crate::op::I32TruncSatF32S_SR;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32TruncSatF32S_RS {
    type Output = crate::op::I32TruncSatF32S_SS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32TruncSatF32U_RR {
    type Output = crate::op::I32TruncSatF32U_SR;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32TruncSatF32U_RS {
    type Output = crate::op::I32TruncSatF32U_SS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32TruncSatF64S_RR {
    type Output = crate::op::I32TruncSatF64S_SR;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32TruncSatF64S_RS {
    type Output = crate::op::I32TruncSatF64S_SS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32TruncSatF64U_RR {
    type Output = crate::op::I32TruncSatF64U_SR;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32TruncSatF64U_RS {
    type Output = crate::op::I32TruncSatF64U_SS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64TruncSatF32S_RR {
    type Output = crate::op::I64TruncSatF32S_SR;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64TruncSatF32S_RS {
    type Output = crate::op::I64TruncSatF32S_SS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64TruncSatF32U_RR {
    type Output = crate::op::I64TruncSatF32U_SR;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64TruncSatF32U_RS {
    type Output = crate::op::I64TruncSatF32U_SS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64TruncSatF64S_RR {
    type Output = crate::op::I64TruncSatF64S_SR;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64TruncSatF64S_RS {
    type Output = crate::op::I64TruncSatF64S_SS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64TruncSatF64U_RR {
    type Output = crate::op::I64TruncSatF64U_SR;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64TruncSatF64U_RS {
    type Output = crate::op::I64TruncSatF64U_SS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32Extend8S_RR {
    type Output = crate::op::I32Extend8S_SR;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32Extend8S_RS {
    type Output = crate::op::I32Extend8S_SS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32Extend16S_RR {
    type Output = crate::op::I32Extend16S_SR;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32Extend16S_RS {
    type Output = crate::op::I32Extend16S_SS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Extend8S_RR {
    type Output = crate::op::I64Extend8S_SR;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Extend8S_RS {
    type Output = crate::op::I64Extend8S_SS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Extend16S_RR {
    type Output = crate::op::I64Extend16S_SR;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Extend16S_RS {
    type Output = crate::op::I64Extend16S_SS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Extend32S_RR {
    type Output = crate::op::I64Extend32S_SR;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Extend32S_RS {
    type Output = crate::op::I64Extend32S_SS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32WrapI64_RR {
    type Output = crate::op::I32WrapI64_SR;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32WrapI64_RS {
    type Output = crate::op::I32WrapI64_SS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            input: self.input,
        })
    }
}


impl crate::UpdateOperatorResult for crate::op::I32Add_RRI {
    type Output = crate::op::I32Add_SRI;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32Add_RRS {
    type Output = crate::op::I32Add_SRS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32Add_RSI {
    type Output = crate::op::I32Add_SSI;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32Add_RSS {
    type Output = crate::op::I32Add_SSS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}

impl crate::UpdateOperatorResult for crate::op::I64Add_RRI {
    type Output = crate::op::I64Add_SRI;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Add_RRS {
    type Output = crate::op::I64Add_SRS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Add_RSI {
    type Output = crate::op::I64Add_SSI;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Add_RSS {
    type Output = crate::op::I64Add_SSS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}

impl crate::UpdateOperatorResult for crate::op::I32Mul_RRI {
    type Output = crate::op::I32Mul_SRI;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32Mul_RRS {
    type Output = crate::op::I32Mul_SRS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32Mul_RSI {
    type Output = crate::op::I32Mul_SSI;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32Mul_RSS {
    type Output = crate::op::I32Mul_SSS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}

impl crate::UpdateOperatorResult for crate::op::I64Mul_RRI {
    type Output = crate::op::I64Mul_SRI;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Mul_RRS {
    type Output = crate::op::I64Mul_SRS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Mul_RSI {
    type Output = crate::op::I64Mul_SSI;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Mul_RSS {
    type Output = crate::op::I64Mul_SSS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}

impl crate::UpdateOperatorResult for crate::op::I32BitAnd_RRI {
    type Output = crate::op::I32BitAnd_SRI;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32BitAnd_RRS {
    type Output = crate::op::I32BitAnd_SRS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32BitAnd_RSI {
    type Output = crate::op::I32BitAnd_SSI;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32BitAnd_RSS {
    type Output = crate::op::I32BitAnd_SSS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}

impl crate::UpdateOperatorResult for crate::op::I64BitAnd_RRI {
    type Output = crate::op::I64BitAnd_SRI;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64BitAnd_RRS {
    type Output = crate::op::I64BitAnd_SRS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64BitAnd_RSI {
    type Output = crate::op::I64BitAnd_SSI;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64BitAnd_RSS {
    type Output = crate::op::I64BitAnd_SSS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}

impl crate::UpdateOperatorResult for crate::op::I32BitOr_RRI {
    type Output = crate::op::I32BitOr_SRI;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32BitOr_RRS {
    type Output = crate::op::I32BitOr_SRS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32BitOr_RSI {
    type Output = crate::op::I32BitOr_SSI;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32BitOr_RSS {
    type Output = crate::op::I32BitOr_SSS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}

impl crate::UpdateOperatorResult for crate::op::I64BitOr_RRI {
    type Output = crate::op::I64BitOr_SRI;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64BitOr_RRS {
    type Output = crate::op::I64BitOr_SRS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64BitOr_RSI {
    type Output = crate::op::I64BitOr_SSI;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64BitOr_RSS {
    type Output = crate::op::I64BitOr_SSS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}

impl crate::UpdateOperatorResult for crate::op::I32BitXor_RRI {
    type Output = crate::op::I32BitXor_SRI;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32BitXor_RRS {
    type Output = crate::op::I32BitXor_SRS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32BitXor_RSI {
    type Output = crate::op::I32BitXor_SSI;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32BitXor_RSS {
    type Output = crate::op::I32BitXor_SSS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}

impl crate::UpdateOperatorResult for crate::op::I64BitXor_RRI {
    type Output = crate::op::I64BitXor_SRI;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64BitXor_RRS {
    type Output = crate::op::I64BitXor_SRS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64BitXor_RSI {
    type Output = crate::op::I64BitXor_SSI;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64BitXor_RSS {
    type Output = crate::op::I64BitXor_SSS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}

impl crate::UpdateOperatorResult for crate::op::I32And_RRI {
    type Output = crate::op::I32And_SRI;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32And_RRS {
    type Output = crate::op::I32And_SRS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32And_RSI {
    type Output = crate::op::I32And_SSI;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32And_RSS {
    type Output = crate::op::I32And_SSS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}

impl crate::UpdateOperatorResult for crate::op::I64And_RRI {
    type Output = crate::op::I64And_SRI;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64And_RRS {
    type Output = crate::op::I64And_SRS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64And_RSI {
    type Output = crate::op::I64And_SSI;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64And_RSS {
    type Output = crate::op::I64And_SSS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}

impl crate::UpdateOperatorResult for crate::op::I32Or_RRI {
    type Output = crate::op::I32Or_SRI;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32Or_RRS {
    type Output = crate::op::I32Or_SRS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32Or_RSI {
    type Output = crate::op::I32Or_SSI;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32Or_RSS {
    type Output = crate::op::I32Or_SSS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}

impl crate::UpdateOperatorResult for crate::op::I64Or_RRI {
    type Output = crate::op::I64Or_SRI;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Or_RRS {
    type Output = crate::op::I64Or_SRS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Or_RSI {
    type Output = crate::op::I64Or_SSI;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Or_RSS {
    type Output = crate::op::I64Or_SSS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}

impl crate::UpdateOperatorResult for crate::op::I32Xor_RRI {
    type Output = crate::op::I32Xor_SRI;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32Xor_RRS {
    type Output = crate::op::I32Xor_SRS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32Xor_RSI {
    type Output = crate::op::I32Xor_SSI;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32Xor_RSS {
    type Output = crate::op::I32Xor_SSS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}

impl crate::UpdateOperatorResult for crate::op::I64Xor_RRI {
    type Output = crate::op::I64Xor_SRI;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Xor_RRS {
    type Output = crate::op::I64Xor_SRS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Xor_RSI {
    type Output = crate::op::I64Xor_SSI;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Xor_RSS {
    type Output = crate::op::I64Xor_SSS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}

impl crate::UpdateOperatorResult for crate::op::I32Eq_RRI {
    type Output = crate::op::I32Eq_SRI;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32Eq_RRS {
    type Output = crate::op::I32Eq_SRS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32Eq_RSI {
    type Output = crate::op::I32Eq_SSI;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32Eq_RSS {
    type Output = crate::op::I32Eq_SSS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}

impl crate::UpdateOperatorResult for crate::op::I64Eq_RRI {
    type Output = crate::op::I64Eq_SRI;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Eq_RRS {
    type Output = crate::op::I64Eq_SRS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Eq_RSI {
    type Output = crate::op::I64Eq_SSI;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Eq_RSS {
    type Output = crate::op::I64Eq_SSS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}

impl crate::UpdateOperatorResult for crate::op::I32Ne_RRI {
    type Output = crate::op::I32Ne_SRI;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32Ne_RRS {
    type Output = crate::op::I32Ne_SRS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32Ne_RSI {
    type Output = crate::op::I32Ne_SSI;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32Ne_RSS {
    type Output = crate::op::I32Ne_SSS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}

impl crate::UpdateOperatorResult for crate::op::I64Ne_RRI {
    type Output = crate::op::I64Ne_SRI;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Ne_RRS {
    type Output = crate::op::I64Ne_SRS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Ne_RSI {
    type Output = crate::op::I64Ne_SSI;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Ne_RSS {
    type Output = crate::op::I64Ne_SSS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}

impl crate::UpdateOperatorResult for crate::op::F32Add_RRI {
    type Output = crate::op::F32Add_SRI;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F32Add_RRS {
    type Output = crate::op::F32Add_SRS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F32Add_RSI {
    type Output = crate::op::F32Add_SSI;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F32Add_RSS {
    type Output = crate::op::F32Add_SSS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}

impl crate::UpdateOperatorResult for crate::op::F64Add_RRI {
    type Output = crate::op::F64Add_SRI;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F64Add_RRS {
    type Output = crate::op::F64Add_SRS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F64Add_RSI {
    type Output = crate::op::F64Add_SSI;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F64Add_RSS {
    type Output = crate::op::F64Add_SSS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}

impl crate::UpdateOperatorResult for crate::op::F32Mul_RRI {
    type Output = crate::op::F32Mul_SRI;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F32Mul_RRS {
    type Output = crate::op::F32Mul_SRS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F32Mul_RSI {
    type Output = crate::op::F32Mul_SSI;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F32Mul_RSS {
    type Output = crate::op::F32Mul_SSS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}

impl crate::UpdateOperatorResult for crate::op::F64Mul_RRI {
    type Output = crate::op::F64Mul_SRI;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F64Mul_RRS {
    type Output = crate::op::F64Mul_SRS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F64Mul_RSI {
    type Output = crate::op::F64Mul_SSI;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F64Mul_RSS {
    type Output = crate::op::F64Mul_SSS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}

impl crate::UpdateOperatorResult for crate::op::F32Eq_RRI {
    type Output = crate::op::F32Eq_SRI;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F32Eq_RRS {
    type Output = crate::op::F32Eq_SRS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F32Eq_RSI {
    type Output = crate::op::F32Eq_SSI;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F32Eq_RSS {
    type Output = crate::op::F32Eq_SSS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}

impl crate::UpdateOperatorResult for crate::op::F64Eq_RRI {
    type Output = crate::op::F64Eq_SRI;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F64Eq_RRS {
    type Output = crate::op::F64Eq_SRS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F64Eq_RSI {
    type Output = crate::op::F64Eq_SSI;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F64Eq_RSS {
    type Output = crate::op::F64Eq_SSS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}

impl crate::UpdateOperatorResult for crate::op::F32Ne_RRI {
    type Output = crate::op::F32Ne_SRI;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F32Ne_RRS {
    type Output = crate::op::F32Ne_SRS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F32Ne_RSI {
    type Output = crate::op::F32Ne_SSI;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F32Ne_RSS {
    type Output = crate::op::F32Ne_SSS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}

impl crate::UpdateOperatorResult for crate::op::F64Ne_RRI {
    type Output = crate::op::F64Ne_SRI;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F64Ne_RRS {
    type Output = crate::op::F64Ne_SRS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F64Ne_RSI {
    type Output = crate::op::F64Ne_SSI;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F64Ne_RSS {
    type Output = crate::op::F64Ne_SSS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}

impl crate::UpdateOperatorResult for crate::op::F32Min_RRI {
    type Output = crate::op::F32Min_SRI;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F32Min_RRS {
    type Output = crate::op::F32Min_SRS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F32Min_RSI {
    type Output = crate::op::F32Min_SSI;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F32Min_RSS {
    type Output = crate::op::F32Min_SSS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}

impl crate::UpdateOperatorResult for crate::op::F64Min_RRI {
    type Output = crate::op::F64Min_SRI;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F64Min_RRS {
    type Output = crate::op::F64Min_SRS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F64Min_RSI {
    type Output = crate::op::F64Min_SSI;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F64Min_RSS {
    type Output = crate::op::F64Min_SSS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}

impl crate::UpdateOperatorResult for crate::op::F32Max_RRI {
    type Output = crate::op::F32Max_SRI;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F32Max_RRS {
    type Output = crate::op::F32Max_SRS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F32Max_RSI {
    type Output = crate::op::F32Max_SSI;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F32Max_RSS {
    type Output = crate::op::F32Max_SSS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}

impl crate::UpdateOperatorResult for crate::op::F64Max_RRI {
    type Output = crate::op::F64Max_SRI;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F64Max_RRS {
    type Output = crate::op::F64Max_SRS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F64Max_RSI {
    type Output = crate::op::F64Max_SSI;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F64Max_RSS {
    type Output = crate::op::F64Max_SSS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            lhs: self.lhs,
            rhs: self.rhs,
        })
    }
}


impl crate::UpdateOperatorResult for crate::op::I32LoadMem0_RI {
    type Output = crate::op::I32LoadMem0_SI;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            address: self.address,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32LoadMem0_RR {
    type Output = crate::op::I32LoadMem0_SR;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            ptr: self.ptr,
            offset: self.offset,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32LoadMem0_RS {
    type Output = crate::op::I32LoadMem0_SS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            ptr: self.ptr,
            offset: self.offset,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32Load_RI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32Load_RR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32Load_RS {
    type Output = crate::NoOp;
}

impl crate::UpdateOperatorResult for crate::op::I64LoadMem0_RI {
    type Output = crate::op::I64LoadMem0_SI;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            address: self.address,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64LoadMem0_RR {
    type Output = crate::op::I64LoadMem0_SR;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            ptr: self.ptr,
            offset: self.offset,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64LoadMem0_RS {
    type Output = crate::op::I64LoadMem0_SS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            ptr: self.ptr,
            offset: self.offset,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Load_RI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64Load_RR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64Load_RS {
    type Output = crate::NoOp;
}

impl crate::UpdateOperatorResult for crate::op::F32LoadMem0_RI {
    type Output = crate::op::F32LoadMem0_SI;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            address: self.address,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F32LoadMem0_RR {
    type Output = crate::op::F32LoadMem0_SR;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            ptr: self.ptr,
            offset: self.offset,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F32LoadMem0_RS {
    type Output = crate::op::F32LoadMem0_SS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            ptr: self.ptr,
            offset: self.offset,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F32Load_RI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F32Load_RR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F32Load_RS {
    type Output = crate::NoOp;
}

impl crate::UpdateOperatorResult for crate::op::F64LoadMem0_RI {
    type Output = crate::op::F64LoadMem0_SI;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            address: self.address,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F64LoadMem0_RR {
    type Output = crate::op::F64LoadMem0_SR;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            ptr: self.ptr,
            offset: self.offset,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F64LoadMem0_RS {
    type Output = crate::op::F64LoadMem0_SS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            ptr: self.ptr,
            offset: self.offset,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::F64Load_RI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F64Load_RR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::F64Load_RS {
    type Output = crate::NoOp;
}

impl crate::UpdateOperatorResult for crate::op::I32Load8SMem0_RI {
    type Output = crate::op::I32Load8SMem0_SI;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            address: self.address,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32Load8SMem0_RR {
    type Output = crate::op::I32Load8SMem0_SR;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            ptr: self.ptr,
            offset: self.offset,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32Load8SMem0_RS {
    type Output = crate::op::I32Load8SMem0_SS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            ptr: self.ptr,
            offset: self.offset,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32Load8S_RI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32Load8S_RR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32Load8S_RS {
    type Output = crate::NoOp;
}

impl crate::UpdateOperatorResult for crate::op::I64Load8SMem0_RI {
    type Output = crate::op::I64Load8SMem0_SI;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            address: self.address,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Load8SMem0_RR {
    type Output = crate::op::I64Load8SMem0_SR;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            ptr: self.ptr,
            offset: self.offset,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Load8SMem0_RS {
    type Output = crate::op::I64Load8SMem0_SS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            ptr: self.ptr,
            offset: self.offset,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Load8S_RI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64Load8S_RR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64Load8S_RS {
    type Output = crate::NoOp;
}

impl crate::UpdateOperatorResult for crate::op::I32Load8UMem0_RI {
    type Output = crate::op::I32Load8UMem0_SI;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            address: self.address,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32Load8UMem0_RR {
    type Output = crate::op::I32Load8UMem0_SR;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            ptr: self.ptr,
            offset: self.offset,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32Load8UMem0_RS {
    type Output = crate::op::I32Load8UMem0_SS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            ptr: self.ptr,
            offset: self.offset,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32Load8U_RI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32Load8U_RR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32Load8U_RS {
    type Output = crate::NoOp;
}

impl crate::UpdateOperatorResult for crate::op::I64Load8UMem0_RI {
    type Output = crate::op::I64Load8UMem0_SI;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            address: self.address,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Load8UMem0_RR {
    type Output = crate::op::I64Load8UMem0_SR;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            ptr: self.ptr,
            offset: self.offset,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Load8UMem0_RS {
    type Output = crate::op::I64Load8UMem0_SS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            ptr: self.ptr,
            offset: self.offset,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Load8U_RI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64Load8U_RR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64Load8U_RS {
    type Output = crate::NoOp;
}

impl crate::UpdateOperatorResult for crate::op::I32Load16SMem0_RI {
    type Output = crate::op::I32Load16SMem0_SI;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            address: self.address,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32Load16SMem0_RR {
    type Output = crate::op::I32Load16SMem0_SR;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            ptr: self.ptr,
            offset: self.offset,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32Load16SMem0_RS {
    type Output = crate::op::I32Load16SMem0_SS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            ptr: self.ptr,
            offset: self.offset,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32Load16S_RI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32Load16S_RR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32Load16S_RS {
    type Output = crate::NoOp;
}

impl crate::UpdateOperatorResult for crate::op::I64Load16SMem0_RI {
    type Output = crate::op::I64Load16SMem0_SI;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            address: self.address,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Load16SMem0_RR {
    type Output = crate::op::I64Load16SMem0_SR;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            ptr: self.ptr,
            offset: self.offset,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Load16SMem0_RS {
    type Output = crate::op::I64Load16SMem0_SS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            ptr: self.ptr,
            offset: self.offset,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Load16S_RI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64Load16S_RR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64Load16S_RS {
    type Output = crate::NoOp;
}

impl crate::UpdateOperatorResult for crate::op::I32Load16UMem0_RI {
    type Output = crate::op::I32Load16UMem0_SI;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            address: self.address,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32Load16UMem0_RR {
    type Output = crate::op::I32Load16UMem0_SR;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            ptr: self.ptr,
            offset: self.offset,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32Load16UMem0_RS {
    type Output = crate::op::I32Load16UMem0_SS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            ptr: self.ptr,
            offset: self.offset,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I32Load16U_RI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32Load16U_RR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I32Load16U_RS {
    type Output = crate::NoOp;
}

impl crate::UpdateOperatorResult for crate::op::I64Load16UMem0_RI {
    type Output = crate::op::I64Load16UMem0_SI;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            address: self.address,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Load16UMem0_RR {
    type Output = crate::op::I64Load16UMem0_SR;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            ptr: self.ptr,
            offset: self.offset,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Load16UMem0_RS {
    type Output = crate::op::I64Load16UMem0_SS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            ptr: self.ptr,
            offset: self.offset,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Load16U_RI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64Load16U_RR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64Load16U_RS {
    type Output = crate::NoOp;
}

impl crate::UpdateOperatorResult for crate::op::I64Load32SMem0_RI {
    type Output = crate::op::I64Load32SMem0_SI;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            address: self.address,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Load32SMem0_RR {
    type Output = crate::op::I64Load32SMem0_SR;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            ptr: self.ptr,
            offset: self.offset,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Load32SMem0_RS {
    type Output = crate::op::I64Load32SMem0_SS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            ptr: self.ptr,
            offset: self.offset,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Load32S_RI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64Load32S_RR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64Load32S_RS {
    type Output = crate::NoOp;
}

impl crate::UpdateOperatorResult for crate::op::I64Load32UMem0_RI {
    type Output = crate::op::I64Load32UMem0_SI;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            address: self.address,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Load32UMem0_RR {
    type Output = crate::op::I64Load32UMem0_SR;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            ptr: self.ptr,
            offset: self.offset,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Load32UMem0_RS {
    type Output = crate::op::I64Load32UMem0_SS;
    fn update_operator_result(&self, new_result: crate::Stack) -> ::core::option::Option<Self::Output> {
        ::core::option::Option::Some(Self::Output {
            result: new_result,
            ptr: self.ptr,
            offset: self.offset,
        })
    }
}
impl crate::UpdateOperatorResult for crate::op::I64Load32U_RI {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64Load32U_RR {
    type Output = crate::NoOp;
}
impl crate::UpdateOperatorResult for crate::op::I64Load32U_RS {
    type Output = crate::NoOp;
}

