// This file is automatically generated by the `build.rs` script.
//
// Do _not_ edit this file directly but change `build.rs` script logic instead.

#[repr(u16)]
pub enum OpCode {
    Trap = 0_u16,
    ConsumeFuel = 1_u16,
    RefFunc = 2_u16,
    Copy1_S = 3_u16,
    Copy = 4_u16,
    Copy1I32_I = 5_u16,
    Copy1I64_R = 6_u16,
    Copy1I64_I = 7_u16,
    Copy1F32_R = 8_u16,
    Copy1F32_I = 9_u16,
    Copy1F64_R = 10_u16,
    Copy1F64_I = 11_u16,
    Return0 = 12_u16,
    Return1_S = 13_u16,
    Return = 14_u16,
    Return1I32_R = 15_u16,
    Return1I64_R = 16_u16,
    Return1F32_R = 17_u16,
    Return1F64_R = 18_u16,
    Return1I32_I = 19_u16,
    Return1I64_I = 20_u16,
    Return1F32_I = 21_u16,
    Return1F64_I = 22_u16,
    GlobalGet_S = 23_u16,
    GlobalGetI32_R = 24_u16,
    GlobalGetI64_R = 25_u16,
    GlobalGetF32_R = 26_u16,
    GlobalGetF64_R = 27_u16,
    GlobalSet_S = 28_u16,
    GlobalSetI32_R = 29_u16,
    GlobalSetI64_R = 30_u16,
    GlobalSetF32_R = 31_u16,
    GlobalSetF64_R = 32_u16,
    GlobalSetI32_I = 33_u16,
    GlobalSetI64_I = 34_u16,
    GlobalSetF32_I = 35_u16,
    GlobalSetF64_I = 36_u16,
    BranchTable0_R = 37_u16,
    BranchTable_R = 38_u16,
    BranchTable0_S = 39_u16,
    BranchTable_S = 40_u16,
    Branch = 41_u16,
    I32EqBranch_RS = 42_u16,
    I32EqBranch_RI = 43_u16,
    I32EqBranch_SS = 44_u16,
    I32EqBranch_SI = 45_u16,
    I64EqBranch_RS = 46_u16,
    I64EqBranch_RI = 47_u16,
    I64EqBranch_SS = 48_u16,
    I64EqBranch_SI = 49_u16,
    F32EqBranch_RS = 50_u16,
    F32EqBranch_RI = 51_u16,
    F32EqBranch_SS = 52_u16,
    F32EqBranch_SI = 53_u16,
    F64EqBranch_RS = 54_u16,
    F64EqBranch_RI = 55_u16,
    F64EqBranch_SS = 56_u16,
    F64EqBranch_SI = 57_u16,
    I32NeBranch_RS = 58_u16,
    I32NeBranch_RI = 59_u16,
    I32NeBranch_SS = 60_u16,
    I32NeBranch_SI = 61_u16,
    I64NeBranch_RS = 62_u16,
    I64NeBranch_RI = 63_u16,
    I64NeBranch_SS = 64_u16,
    I64NeBranch_SI = 65_u16,
    F32NeBranch_RS = 66_u16,
    F32NeBranch_RI = 67_u16,
    F32NeBranch_SS = 68_u16,
    F32NeBranch_SI = 69_u16,
    F64NeBranch_RS = 70_u16,
    F64NeBranch_RI = 71_u16,
    F64NeBranch_SS = 72_u16,
    F64NeBranch_SI = 73_u16,
    I32AndBranch_RS = 74_u16,
    I32AndBranch_RI = 75_u16,
    I32AndBranch_SS = 76_u16,
    I32AndBranch_SI = 77_u16,
    I64AndBranch_RS = 78_u16,
    I64AndBranch_RI = 79_u16,
    I64AndBranch_SS = 80_u16,
    I64AndBranch_SI = 81_u16,
    I32OrBranch_RS = 82_u16,
    I32OrBranch_RI = 83_u16,
    I32OrBranch_SS = 84_u16,
    I32OrBranch_SI = 85_u16,
    I64OrBranch_RS = 86_u16,
    I64OrBranch_RI = 87_u16,
    I64OrBranch_SS = 88_u16,
    I64OrBranch_SI = 89_u16,
    I32XorBranch_RS = 90_u16,
    I32XorBranch_RI = 91_u16,
    I32XorBranch_SS = 92_u16,
    I32XorBranch_SI = 93_u16,
    I64XorBranch_RS = 94_u16,
    I64XorBranch_RI = 95_u16,
    I64XorBranch_SS = 96_u16,
    I64XorBranch_SI = 97_u16,
    I32NotAndBranch_RS = 98_u16,
    I32NotAndBranch_RI = 99_u16,
    I32NotAndBranch_SS = 100_u16,
    I32NotAndBranch_SI = 101_u16,
    I64NotAndBranch_RS = 102_u16,
    I64NotAndBranch_RI = 103_u16,
    I64NotAndBranch_SS = 104_u16,
    I64NotAndBranch_SI = 105_u16,
    I32NotOrBranch_RS = 106_u16,
    I32NotOrBranch_RI = 107_u16,
    I32NotOrBranch_SS = 108_u16,
    I32NotOrBranch_SI = 109_u16,
    I64NotOrBranch_RS = 110_u16,
    I64NotOrBranch_RI = 111_u16,
    I64NotOrBranch_SS = 112_u16,
    I64NotOrBranch_SI = 113_u16,
    I32NotXorBranch_RS = 114_u16,
    I32NotXorBranch_RI = 115_u16,
    I32NotXorBranch_SS = 116_u16,
    I32NotXorBranch_SI = 117_u16,
    I64NotXorBranch_RS = 118_u16,
    I64NotXorBranch_RI = 119_u16,
    I64NotXorBranch_SS = 120_u16,
    I64NotXorBranch_SI = 121_u16,
    I32LtSBranch_RS = 122_u16,
    I32LtSBranch_RI = 123_u16,
    I32LtSBranch_SR = 124_u16,
    I32LtSBranch_SS = 125_u16,
    I32LtSBranch_SI = 126_u16,
    I32LtSBranch_IR = 127_u16,
    I32LtSBranch_IS = 128_u16,
    I64LtSBranch_RS = 129_u16,
    I64LtSBranch_RI = 130_u16,
    I64LtSBranch_SR = 131_u16,
    I64LtSBranch_SS = 132_u16,
    I64LtSBranch_SI = 133_u16,
    I64LtSBranch_IR = 134_u16,
    I64LtSBranch_IS = 135_u16,
    I32LtUBranch_RS = 136_u16,
    I32LtUBranch_RI = 137_u16,
    I32LtUBranch_SR = 138_u16,
    I32LtUBranch_SS = 139_u16,
    I32LtUBranch_SI = 140_u16,
    I32LtUBranch_IR = 141_u16,
    I32LtUBranch_IS = 142_u16,
    I64LtUBranch_RS = 143_u16,
    I64LtUBranch_RI = 144_u16,
    I64LtUBranch_SR = 145_u16,
    I64LtUBranch_SS = 146_u16,
    I64LtUBranch_SI = 147_u16,
    I64LtUBranch_IR = 148_u16,
    I64LtUBranch_IS = 149_u16,
    I32LeSBranch_RS = 150_u16,
    I32LeSBranch_RI = 151_u16,
    I32LeSBranch_SR = 152_u16,
    I32LeSBranch_SS = 153_u16,
    I32LeSBranch_SI = 154_u16,
    I32LeSBranch_IR = 155_u16,
    I32LeSBranch_IS = 156_u16,
    I64LeSBranch_RS = 157_u16,
    I64LeSBranch_RI = 158_u16,
    I64LeSBranch_SR = 159_u16,
    I64LeSBranch_SS = 160_u16,
    I64LeSBranch_SI = 161_u16,
    I64LeSBranch_IR = 162_u16,
    I64LeSBranch_IS = 163_u16,
    I32LeUBranch_RS = 164_u16,
    I32LeUBranch_RI = 165_u16,
    I32LeUBranch_SR = 166_u16,
    I32LeUBranch_SS = 167_u16,
    I32LeUBranch_SI = 168_u16,
    I32LeUBranch_IR = 169_u16,
    I32LeUBranch_IS = 170_u16,
    I64LeUBranch_RS = 171_u16,
    I64LeUBranch_RI = 172_u16,
    I64LeUBranch_SR = 173_u16,
    I64LeUBranch_SS = 174_u16,
    I64LeUBranch_SI = 175_u16,
    I64LeUBranch_IR = 176_u16,
    I64LeUBranch_IS = 177_u16,
    F32LtBranch_RS = 178_u16,
    F32LtBranch_RI = 179_u16,
    F32LtBranch_SR = 180_u16,
    F32LtBranch_SS = 181_u16,
    F32LtBranch_SI = 182_u16,
    F32LtBranch_IR = 183_u16,
    F32LtBranch_IS = 184_u16,
    F64LtBranch_RS = 185_u16,
    F64LtBranch_RI = 186_u16,
    F64LtBranch_SR = 187_u16,
    F64LtBranch_SS = 188_u16,
    F64LtBranch_SI = 189_u16,
    F64LtBranch_IR = 190_u16,
    F64LtBranch_IS = 191_u16,
    F32LeBranch_RS = 192_u16,
    F32LeBranch_RI = 193_u16,
    F32LeBranch_SR = 194_u16,
    F32LeBranch_SS = 195_u16,
    F32LeBranch_SI = 196_u16,
    F32LeBranch_IR = 197_u16,
    F32LeBranch_IS = 198_u16,
    F64LeBranch_RS = 199_u16,
    F64LeBranch_RI = 200_u16,
    F64LeBranch_SR = 201_u16,
    F64LeBranch_SS = 202_u16,
    F64LeBranch_SI = 203_u16,
    F64LeBranch_IR = 204_u16,
    F64LeBranch_IS = 205_u16,
    I32Popcnt_RR = 206_u16,
    I32Popcnt_RS = 207_u16,
    I32Popcnt_SR = 208_u16,
    I32Popcnt_SS = 209_u16,
    I64Popcnt_RR = 210_u16,
    I64Popcnt_RS = 211_u16,
    I64Popcnt_SR = 212_u16,
    I64Popcnt_SS = 213_u16,
    I32Clz_RR = 214_u16,
    I32Clz_RS = 215_u16,
    I32Clz_SR = 216_u16,
    I32Clz_SS = 217_u16,
    I64Clz_RR = 218_u16,
    I64Clz_RS = 219_u16,
    I64Clz_SR = 220_u16,
    I64Clz_SS = 221_u16,
    I32Ctz_RR = 222_u16,
    I32Ctz_RS = 223_u16,
    I32Ctz_SR = 224_u16,
    I32Ctz_SS = 225_u16,
    I64Ctz_RR = 226_u16,
    I64Ctz_RS = 227_u16,
    I64Ctz_SR = 228_u16,
    I64Ctz_SS = 229_u16,
    F32Abs_RR = 230_u16,
    F32Abs_RS = 231_u16,
    F32Abs_SR = 232_u16,
    F32Abs_SS = 233_u16,
    F64Abs_RR = 234_u16,
    F64Abs_RS = 235_u16,
    F64Abs_SR = 236_u16,
    F64Abs_SS = 237_u16,
    F32Neg_RR = 238_u16,
    F32Neg_RS = 239_u16,
    F32Neg_SR = 240_u16,
    F32Neg_SS = 241_u16,
    F64Neg_RR = 242_u16,
    F64Neg_RS = 243_u16,
    F64Neg_SR = 244_u16,
    F64Neg_SS = 245_u16,
    F32Ceil_RR = 246_u16,
    F32Ceil_RS = 247_u16,
    F32Ceil_SR = 248_u16,
    F32Ceil_SS = 249_u16,
    F64Ceil_RR = 250_u16,
    F64Ceil_RS = 251_u16,
    F64Ceil_SR = 252_u16,
    F64Ceil_SS = 253_u16,
    F32Floor_RR = 254_u16,
    F32Floor_RS = 255_u16,
    F32Floor_SR = 256_u16,
    F32Floor_SS = 257_u16,
    F64Floor_RR = 258_u16,
    F64Floor_RS = 259_u16,
    F64Floor_SR = 260_u16,
    F64Floor_SS = 261_u16,
    F32Trunc_RR = 262_u16,
    F32Trunc_RS = 263_u16,
    F32Trunc_SR = 264_u16,
    F32Trunc_SS = 265_u16,
    F64Trunc_RR = 266_u16,
    F64Trunc_RS = 267_u16,
    F64Trunc_SR = 268_u16,
    F64Trunc_SS = 269_u16,
    F32Nearest_RR = 270_u16,
    F32Nearest_RS = 271_u16,
    F32Nearest_SR = 272_u16,
    F32Nearest_SS = 273_u16,
    F64Nearest_RR = 274_u16,
    F64Nearest_RS = 275_u16,
    F64Nearest_SR = 276_u16,
    F64Nearest_SS = 277_u16,
    F32Sqrt_RR = 278_u16,
    F32Sqrt_RS = 279_u16,
    F32Sqrt_SR = 280_u16,
    F32Sqrt_SS = 281_u16,
    F64Sqrt_RR = 282_u16,
    F64Sqrt_RS = 283_u16,
    F64Sqrt_SR = 284_u16,
    F64Sqrt_SS = 285_u16,
    F32Demote_RR = 286_u16,
    F32Demote_RS = 287_u16,
    F32Demote_SR = 288_u16,
    F32Demote_SS = 289_u16,
    F64Promote_RR = 290_u16,
    F64Promote_RS = 291_u16,
    F64Promote_SR = 292_u16,
    F64Promote_SS = 293_u16,
    F32ConvertI32S_RR = 294_u16,
    F32ConvertI32S_RS = 295_u16,
    F32ConvertI32S_SR = 296_u16,
    F32ConvertI32S_SS = 297_u16,
    F32ConvertI32U_RR = 298_u16,
    F32ConvertI32U_RS = 299_u16,
    F32ConvertI32U_SR = 300_u16,
    F32ConvertI32U_SS = 301_u16,
    F32ConvertI64S_RR = 302_u16,
    F32ConvertI64S_RS = 303_u16,
    F32ConvertI64S_SR = 304_u16,
    F32ConvertI64S_SS = 305_u16,
    F32ConvertI64U_RR = 306_u16,
    F32ConvertI64U_RS = 307_u16,
    F32ConvertI64U_SR = 308_u16,
    F32ConvertI64U_SS = 309_u16,
    F64ConvertI32S_RR = 310_u16,
    F64ConvertI32S_RS = 311_u16,
    F64ConvertI32S_SR = 312_u16,
    F64ConvertI32S_SS = 313_u16,
    F64ConvertI32U_RR = 314_u16,
    F64ConvertI32U_RS = 315_u16,
    F64ConvertI32U_SR = 316_u16,
    F64ConvertI32U_SS = 317_u16,
    F64ConvertI64S_RR = 318_u16,
    F64ConvertI64S_RS = 319_u16,
    F64ConvertI64S_SR = 320_u16,
    F64ConvertI64S_SS = 321_u16,
    F64ConvertI64U_RR = 322_u16,
    F64ConvertI64U_RS = 323_u16,
    F64ConvertI64U_SR = 324_u16,
    F64ConvertI64U_SS = 325_u16,
    I32TruncF32S_RR = 326_u16,
    I32TruncF32S_RS = 327_u16,
    I32TruncF32S_SR = 328_u16,
    I32TruncF32S_SS = 329_u16,
    I32TruncF32U_RR = 330_u16,
    I32TruncF32U_RS = 331_u16,
    I32TruncF32U_SR = 332_u16,
    I32TruncF32U_SS = 333_u16,
    I32TruncF64S_RR = 334_u16,
    I32TruncF64S_RS = 335_u16,
    I32TruncF64S_SR = 336_u16,
    I32TruncF64S_SS = 337_u16,
    I32TruncF64U_RR = 338_u16,
    I32TruncF64U_RS = 339_u16,
    I32TruncF64U_SR = 340_u16,
    I32TruncF64U_SS = 341_u16,
    I64TruncF32S_RR = 342_u16,
    I64TruncF32S_RS = 343_u16,
    I64TruncF32S_SR = 344_u16,
    I64TruncF32S_SS = 345_u16,
    I64TruncF32U_RR = 346_u16,
    I64TruncF32U_RS = 347_u16,
    I64TruncF32U_SR = 348_u16,
    I64TruncF32U_SS = 349_u16,
    I64TruncF64S_RR = 350_u16,
    I64TruncF64S_RS = 351_u16,
    I64TruncF64S_SR = 352_u16,
    I64TruncF64S_SS = 353_u16,
    I64TruncF64U_RR = 354_u16,
    I64TruncF64U_RS = 355_u16,
    I64TruncF64U_SR = 356_u16,
    I64TruncF64U_SS = 357_u16,
    I32TruncSatF32S_RR = 358_u16,
    I32TruncSatF32S_RS = 359_u16,
    I32TruncSatF32S_SR = 360_u16,
    I32TruncSatF32S_SS = 361_u16,
    I32TruncSatF32U_RR = 362_u16,
    I32TruncSatF32U_RS = 363_u16,
    I32TruncSatF32U_SR = 364_u16,
    I32TruncSatF32U_SS = 365_u16,
    I32TruncSatF64S_RR = 366_u16,
    I32TruncSatF64S_RS = 367_u16,
    I32TruncSatF64S_SR = 368_u16,
    I32TruncSatF64S_SS = 369_u16,
    I32TruncSatF64U_RR = 370_u16,
    I32TruncSatF64U_RS = 371_u16,
    I32TruncSatF64U_SR = 372_u16,
    I32TruncSatF64U_SS = 373_u16,
    I64TruncSatF32S_RR = 374_u16,
    I64TruncSatF32S_RS = 375_u16,
    I64TruncSatF32S_SR = 376_u16,
    I64TruncSatF32S_SS = 377_u16,
    I64TruncSatF32U_RR = 378_u16,
    I64TruncSatF32U_RS = 379_u16,
    I64TruncSatF32U_SR = 380_u16,
    I64TruncSatF32U_SS = 381_u16,
    I64TruncSatF64S_RR = 382_u16,
    I64TruncSatF64S_RS = 383_u16,
    I64TruncSatF64S_SR = 384_u16,
    I64TruncSatF64S_SS = 385_u16,
    I64TruncSatF64U_RR = 386_u16,
    I64TruncSatF64U_RS = 387_u16,
    I64TruncSatF64U_SR = 388_u16,
    I64TruncSatF64U_SS = 389_u16,
    I32Extend8S_RR = 390_u16,
    I32Extend8S_RS = 391_u16,
    I32Extend8S_SR = 392_u16,
    I32Extend8S_SS = 393_u16,
    I32Extend16S_RR = 394_u16,
    I32Extend16S_RS = 395_u16,
    I32Extend16S_SR = 396_u16,
    I32Extend16S_SS = 397_u16,
    I64Extend8S_RR = 398_u16,
    I64Extend8S_RS = 399_u16,
    I64Extend8S_SR = 400_u16,
    I64Extend8S_SS = 401_u16,
    I64Extend16S_RR = 402_u16,
    I64Extend16S_RS = 403_u16,
    I64Extend16S_SR = 404_u16,
    I64Extend16S_SS = 405_u16,
    I64Extend32S_RR = 406_u16,
    I64Extend32S_RS = 407_u16,
    I64Extend32S_SR = 408_u16,
    I64Extend32S_SS = 409_u16,
    I32WrapI64_RR = 410_u16,
    I32WrapI64_RS = 411_u16,
    I32WrapI64_SR = 412_u16,
    I32WrapI64_SS = 413_u16,
    I32Add_RRS = 414_u16,
    I32Add_RRI = 415_u16,
    I32Add_RSS = 416_u16,
    I32Add_RSI = 417_u16,
    I32Add_SRS = 418_u16,
    I32Add_SRI = 419_u16,
    I32Add_SSS = 420_u16,
    I32Add_SSI = 421_u16,
    I64Add_RRS = 422_u16,
    I64Add_RRI = 423_u16,
    I64Add_RSS = 424_u16,
    I64Add_RSI = 425_u16,
    I64Add_SRS = 426_u16,
    I64Add_SRI = 427_u16,
    I64Add_SSS = 428_u16,
    I64Add_SSI = 429_u16,
    I32Mul_RRS = 430_u16,
    I32Mul_RRI = 431_u16,
    I32Mul_RSS = 432_u16,
    I32Mul_RSI = 433_u16,
    I32Mul_SRS = 434_u16,
    I32Mul_SRI = 435_u16,
    I32Mul_SSS = 436_u16,
    I32Mul_SSI = 437_u16,
    I64Mul_RRS = 438_u16,
    I64Mul_RRI = 439_u16,
    I64Mul_RSS = 440_u16,
    I64Mul_RSI = 441_u16,
    I64Mul_SRS = 442_u16,
    I64Mul_SRI = 443_u16,
    I64Mul_SSS = 444_u16,
    I64Mul_SSI = 445_u16,
    I32And_RRS = 446_u16,
    I32And_RRI = 447_u16,
    I32And_RSS = 448_u16,
    I32And_RSI = 449_u16,
    I32And_SRS = 450_u16,
    I32And_SRI = 451_u16,
    I32And_SSS = 452_u16,
    I32And_SSI = 453_u16,
    I64And_RRS = 454_u16,
    I64And_RRI = 455_u16,
    I64And_RSS = 456_u16,
    I64And_RSI = 457_u16,
    I64And_SRS = 458_u16,
    I64And_SRI = 459_u16,
    I64And_SSS = 460_u16,
    I64And_SSI = 461_u16,
    I32Or_RRS = 462_u16,
    I32Or_RRI = 463_u16,
    I32Or_RSS = 464_u16,
    I32Or_RSI = 465_u16,
    I32Or_SRS = 466_u16,
    I32Or_SRI = 467_u16,
    I32Or_SSS = 468_u16,
    I32Or_SSI = 469_u16,
    I64Or_RRS = 470_u16,
    I64Or_RRI = 471_u16,
    I64Or_RSS = 472_u16,
    I64Or_RSI = 473_u16,
    I64Or_SRS = 474_u16,
    I64Or_SRI = 475_u16,
    I64Or_SSS = 476_u16,
    I64Or_SSI = 477_u16,
    I32Xor_RRS = 478_u16,
    I32Xor_RRI = 479_u16,
    I32Xor_RSS = 480_u16,
    I32Xor_RSI = 481_u16,
    I32Xor_SRS = 482_u16,
    I32Xor_SRI = 483_u16,
    I32Xor_SSS = 484_u16,
    I32Xor_SSI = 485_u16,
    I64Xor_RRS = 486_u16,
    I64Xor_RRI = 487_u16,
    I64Xor_RSS = 488_u16,
    I64Xor_RSI = 489_u16,
    I64Xor_SRS = 490_u16,
    I64Xor_SRI = 491_u16,
    I64Xor_SSS = 492_u16,
    I64Xor_SSI = 493_u16,
    I32Eq_RRS = 494_u16,
    I32Eq_RRI = 495_u16,
    I32Eq_RSS = 496_u16,
    I32Eq_RSI = 497_u16,
    I32Eq_SRS = 498_u16,
    I32Eq_SRI = 499_u16,
    I32Eq_SSS = 500_u16,
    I32Eq_SSI = 501_u16,
    I64Eq_RRS = 502_u16,
    I64Eq_RRI = 503_u16,
    I64Eq_RSS = 504_u16,
    I64Eq_RSI = 505_u16,
    I64Eq_SRS = 506_u16,
    I64Eq_SRI = 507_u16,
    I64Eq_SSS = 508_u16,
    I64Eq_SSI = 509_u16,
    I32Ne_RRS = 510_u16,
    I32Ne_RRI = 511_u16,
    I32Ne_RSS = 512_u16,
    I32Ne_RSI = 513_u16,
    I32Ne_SRS = 514_u16,
    I32Ne_SRI = 515_u16,
    I32Ne_SSS = 516_u16,
    I32Ne_SSI = 517_u16,
    I64Ne_RRS = 518_u16,
    I64Ne_RRI = 519_u16,
    I64Ne_RSS = 520_u16,
    I64Ne_RSI = 521_u16,
    I64Ne_SRS = 522_u16,
    I64Ne_SRI = 523_u16,
    I64Ne_SSS = 524_u16,
    I64Ne_SSI = 525_u16,
    F32Add_RRS = 526_u16,
    F32Add_RRI = 527_u16,
    F32Add_RSS = 528_u16,
    F32Add_RSI = 529_u16,
    F32Add_SRS = 530_u16,
    F32Add_SRI = 531_u16,
    F32Add_SSS = 532_u16,
    F32Add_SSI = 533_u16,
    F64Add_RRS = 534_u16,
    F64Add_RRI = 535_u16,
    F64Add_RSS = 536_u16,
    F64Add_RSI = 537_u16,
    F64Add_SRS = 538_u16,
    F64Add_SRI = 539_u16,
    F64Add_SSS = 540_u16,
    F64Add_SSI = 541_u16,
    F32Mul_RRS = 542_u16,
    F32Mul_RRI = 543_u16,
    F32Mul_RSS = 544_u16,
    F32Mul_RSI = 545_u16,
    F32Mul_SRS = 546_u16,
    F32Mul_SRI = 547_u16,
    F32Mul_SSS = 548_u16,
    F32Mul_SSI = 549_u16,
    F64Mul_RRS = 550_u16,
    F64Mul_RRI = 551_u16,
    F64Mul_RSS = 552_u16,
    F64Mul_RSI = 553_u16,
    F64Mul_SRS = 554_u16,
    F64Mul_SRI = 555_u16,
    F64Mul_SSS = 556_u16,
    F64Mul_SSI = 557_u16,
    F32Eq_RRS = 558_u16,
    F32Eq_RRI = 559_u16,
    F32Eq_RSS = 560_u16,
    F32Eq_RSI = 561_u16,
    F32Eq_SRS = 562_u16,
    F32Eq_SRI = 563_u16,
    F32Eq_SSS = 564_u16,
    F32Eq_SSI = 565_u16,
    F64Eq_RRS = 566_u16,
    F64Eq_RRI = 567_u16,
    F64Eq_RSS = 568_u16,
    F64Eq_RSI = 569_u16,
    F64Eq_SRS = 570_u16,
    F64Eq_SRI = 571_u16,
    F64Eq_SSS = 572_u16,
    F64Eq_SSI = 573_u16,
    F32Ne_RRS = 574_u16,
    F32Ne_RRI = 575_u16,
    F32Ne_RSS = 576_u16,
    F32Ne_RSI = 577_u16,
    F32Ne_SRS = 578_u16,
    F32Ne_SRI = 579_u16,
    F32Ne_SSS = 580_u16,
    F32Ne_SSI = 581_u16,
    F64Ne_RRS = 582_u16,
    F64Ne_RRI = 583_u16,
    F64Ne_RSS = 584_u16,
    F64Ne_RSI = 585_u16,
    F64Ne_SRS = 586_u16,
    F64Ne_SRI = 587_u16,
    F64Ne_SSS = 588_u16,
    F64Ne_SSI = 589_u16,
    F32Min_RRS = 590_u16,
    F32Min_RRI = 591_u16,
    F32Min_RSS = 592_u16,
    F32Min_RSI = 593_u16,
    F32Min_SRS = 594_u16,
    F32Min_SRI = 595_u16,
    F32Min_SSS = 596_u16,
    F32Min_SSI = 597_u16,
    F64Min_RRS = 598_u16,
    F64Min_RRI = 599_u16,
    F64Min_RSS = 600_u16,
    F64Min_RSI = 601_u16,
    F64Min_SRS = 602_u16,
    F64Min_SRI = 603_u16,
    F64Min_SSS = 604_u16,
    F64Min_SSI = 605_u16,
    F32Max_RRS = 606_u16,
    F32Max_RRI = 607_u16,
    F32Max_RSS = 608_u16,
    F32Max_RSI = 609_u16,
    F32Max_SRS = 610_u16,
    F32Max_SRI = 611_u16,
    F32Max_SSS = 612_u16,
    F32Max_SSI = 613_u16,
    F64Max_RRS = 614_u16,
    F64Max_RRI = 615_u16,
    F64Max_RSS = 616_u16,
    F64Max_RSI = 617_u16,
    F64Max_SRS = 618_u16,
    F64Max_SRI = 619_u16,
    F64Max_SSS = 620_u16,
    F64Max_SSI = 621_u16,
    I32Sub_RRS = 622_u16,
    I32Sub_RRI = 623_u16,
    I32Sub_RSR = 624_u16,
    I32Sub_RSS = 625_u16,
    I32Sub_RSI = 626_u16,
    I32Sub_RIR = 627_u16,
    I32Sub_RIS = 628_u16,
    I64Sub_RRS = 629_u16,
    I64Sub_RRI = 630_u16,
    I64Sub_RSR = 631_u16,
    I64Sub_RSS = 632_u16,
    I64Sub_RSI = 633_u16,
    I64Sub_RIR = 634_u16,
    I64Sub_RIS = 635_u16,
    I32LtS_RRS = 636_u16,
    I32LtS_RRI = 637_u16,
    I32LtS_RSR = 638_u16,
    I32LtS_RSS = 639_u16,
    I32LtS_RSI = 640_u16,
    I32LtS_RIR = 641_u16,
    I32LtS_RIS = 642_u16,
    I64LtS_RRS = 643_u16,
    I64LtS_RRI = 644_u16,
    I64LtS_RSR = 645_u16,
    I64LtS_RSS = 646_u16,
    I64LtS_RSI = 647_u16,
    I64LtS_RIR = 648_u16,
    I64LtS_RIS = 649_u16,
    I32LtU_RRS = 650_u16,
    I32LtU_RRI = 651_u16,
    I32LtU_RSR = 652_u16,
    I32LtU_RSS = 653_u16,
    I32LtU_RSI = 654_u16,
    I32LtU_RIR = 655_u16,
    I32LtU_RIS = 656_u16,
    I64LtU_RRS = 657_u16,
    I64LtU_RRI = 658_u16,
    I64LtU_RSR = 659_u16,
    I64LtU_RSS = 660_u16,
    I64LtU_RSI = 661_u16,
    I64LtU_RIR = 662_u16,
    I64LtU_RIS = 663_u16,
    I32LeS_RRS = 664_u16,
    I32LeS_RRI = 665_u16,
    I32LeS_RSR = 666_u16,
    I32LeS_RSS = 667_u16,
    I32LeS_RSI = 668_u16,
    I32LeS_RIR = 669_u16,
    I32LeS_RIS = 670_u16,
    I64LeS_RRS = 671_u16,
    I64LeS_RRI = 672_u16,
    I64LeS_RSR = 673_u16,
    I64LeS_RSS = 674_u16,
    I64LeS_RSI = 675_u16,
    I64LeS_RIR = 676_u16,
    I64LeS_RIS = 677_u16,
    I32LeU_RRS = 678_u16,
    I32LeU_RRI = 679_u16,
    I32LeU_RSR = 680_u16,
    I32LeU_RSS = 681_u16,
    I32LeU_RSI = 682_u16,
    I32LeU_RIR = 683_u16,
    I32LeU_RIS = 684_u16,
    I64LeU_RRS = 685_u16,
    I64LeU_RRI = 686_u16,
    I64LeU_RSR = 687_u16,
    I64LeU_RSS = 688_u16,
    I64LeU_RSI = 689_u16,
    I64LeU_RIR = 690_u16,
    I64LeU_RIS = 691_u16,
    I32DivS_RRS = 692_u16,
    I32DivS_RRI = 693_u16,
    I32DivS_RSR = 694_u16,
    I32DivS_RSS = 695_u16,
    I32DivS_RSI = 696_u16,
    I32DivS_RIR = 697_u16,
    I32DivS_RIS = 698_u16,
    I64DivS_RRS = 699_u16,
    I64DivS_RRI = 700_u16,
    I64DivS_RSR = 701_u16,
    I64DivS_RSS = 702_u16,
    I64DivS_RSI = 703_u16,
    I64DivS_RIR = 704_u16,
    I64DivS_RIS = 705_u16,
    I32DivU_RRS = 706_u16,
    I32DivU_RRI = 707_u16,
    I32DivU_RSR = 708_u16,
    I32DivU_RSS = 709_u16,
    I32DivU_RSI = 710_u16,
    I32DivU_RIR = 711_u16,
    I32DivU_RIS = 712_u16,
    I64DivU_RRS = 713_u16,
    I64DivU_RRI = 714_u16,
    I64DivU_RSR = 715_u16,
    I64DivU_RSS = 716_u16,
    I64DivU_RSI = 717_u16,
    I64DivU_RIR = 718_u16,
    I64DivU_RIS = 719_u16,
    I32RemS_RRS = 720_u16,
    I32RemS_RRI = 721_u16,
    I32RemS_RSR = 722_u16,
    I32RemS_RSS = 723_u16,
    I32RemS_RSI = 724_u16,
    I32RemS_RIR = 725_u16,
    I32RemS_RIS = 726_u16,
    I64RemS_RRS = 727_u16,
    I64RemS_RRI = 728_u16,
    I64RemS_RSR = 729_u16,
    I64RemS_RSS = 730_u16,
    I64RemS_RSI = 731_u16,
    I64RemS_RIR = 732_u16,
    I64RemS_RIS = 733_u16,
    I32RemU_RRS = 734_u16,
    I32RemU_RRI = 735_u16,
    I32RemU_RSR = 736_u16,
    I32RemU_RSS = 737_u16,
    I32RemU_RSI = 738_u16,
    I32RemU_RIR = 739_u16,
    I32RemU_RIS = 740_u16,
    I64RemU_RRS = 741_u16,
    I64RemU_RRI = 742_u16,
    I64RemU_RSR = 743_u16,
    I64RemU_RSS = 744_u16,
    I64RemU_RSI = 745_u16,
    I64RemU_RIR = 746_u16,
    I64RemU_RIS = 747_u16,
    I32Shl_RRS = 748_u16,
    I32Shl_RRI = 749_u16,
    I32Shl_RSR = 750_u16,
    I32Shl_RSS = 751_u16,
    I32Shl_RSI = 752_u16,
    I32Shl_RIR = 753_u16,
    I32Shl_RIS = 754_u16,
    I64Shl_RRS = 755_u16,
    I64Shl_RRI = 756_u16,
    I64Shl_RSR = 757_u16,
    I64Shl_RSS = 758_u16,
    I64Shl_RSI = 759_u16,
    I64Shl_RIR = 760_u16,
    I64Shl_RIS = 761_u16,
    I32ShrS_RRS = 762_u16,
    I32ShrS_RRI = 763_u16,
    I32ShrS_RSR = 764_u16,
    I32ShrS_RSS = 765_u16,
    I32ShrS_RSI = 766_u16,
    I32ShrS_RIR = 767_u16,
    I32ShrS_RIS = 768_u16,
    I64ShrS_RRS = 769_u16,
    I64ShrS_RRI = 770_u16,
    I64ShrS_RSR = 771_u16,
    I64ShrS_RSS = 772_u16,
    I64ShrS_RSI = 773_u16,
    I64ShrS_RIR = 774_u16,
    I64ShrS_RIS = 775_u16,
    I32ShrU_RRS = 776_u16,
    I32ShrU_RRI = 777_u16,
    I32ShrU_RSR = 778_u16,
    I32ShrU_RSS = 779_u16,
    I32ShrU_RSI = 780_u16,
    I32ShrU_RIR = 781_u16,
    I32ShrU_RIS = 782_u16,
    I64ShrU_RRS = 783_u16,
    I64ShrU_RRI = 784_u16,
    I64ShrU_RSR = 785_u16,
    I64ShrU_RSS = 786_u16,
    I64ShrU_RSI = 787_u16,
    I64ShrU_RIR = 788_u16,
    I64ShrU_RIS = 789_u16,
    I32Rotl_RRS = 790_u16,
    I32Rotl_RRI = 791_u16,
    I32Rotl_RSR = 792_u16,
    I32Rotl_RSS = 793_u16,
    I32Rotl_RSI = 794_u16,
    I32Rotl_RIR = 795_u16,
    I32Rotl_RIS = 796_u16,
    I64Rotl_RRS = 797_u16,
    I64Rotl_RRI = 798_u16,
    I64Rotl_RSR = 799_u16,
    I64Rotl_RSS = 800_u16,
    I64Rotl_RSI = 801_u16,
    I64Rotl_RIR = 802_u16,
    I64Rotl_RIS = 803_u16,
    I32Rotr_RRS = 804_u16,
    I32Rotr_RRI = 805_u16,
    I32Rotr_RSR = 806_u16,
    I32Rotr_RSS = 807_u16,
    I32Rotr_RSI = 808_u16,
    I32Rotr_RIR = 809_u16,
    I32Rotr_RIS = 810_u16,
    I64Rotr_RRS = 811_u16,
    I64Rotr_RRI = 812_u16,
    I64Rotr_RSR = 813_u16,
    I64Rotr_RSS = 814_u16,
    I64Rotr_RSI = 815_u16,
    I64Rotr_RIR = 816_u16,
    I64Rotr_RIS = 817_u16,
    F32Sub_RRS = 818_u16,
    F32Sub_RRI = 819_u16,
    F32Sub_RSR = 820_u16,
    F32Sub_RSS = 821_u16,
    F32Sub_RSI = 822_u16,
    F32Sub_RIR = 823_u16,
    F32Sub_RIS = 824_u16,
    F64Sub_RRS = 825_u16,
    F64Sub_RRI = 826_u16,
    F64Sub_RSR = 827_u16,
    F64Sub_RSS = 828_u16,
    F64Sub_RSI = 829_u16,
    F64Sub_RIR = 830_u16,
    F64Sub_RIS = 831_u16,
    F32Div_RRS = 832_u16,
    F32Div_RRI = 833_u16,
    F32Div_RSR = 834_u16,
    F32Div_RSS = 835_u16,
    F32Div_RSI = 836_u16,
    F32Div_RIR = 837_u16,
    F32Div_RIS = 838_u16,
    F64Div_RRS = 839_u16,
    F64Div_RRI = 840_u16,
    F64Div_RSR = 841_u16,
    F64Div_RSS = 842_u16,
    F64Div_RSI = 843_u16,
    F64Div_RIR = 844_u16,
    F64Div_RIS = 845_u16,
    F32Copysign_RRS = 846_u16,
    F32Copysign_RRI = 847_u16,
    F32Copysign_RSR = 848_u16,
    F32Copysign_RSS = 849_u16,
    F32Copysign_RSI = 850_u16,
    F32Copysign_RIR = 851_u16,
    F32Copysign_RIS = 852_u16,
    F64Copysign_RRS = 853_u16,
    F64Copysign_RRI = 854_u16,
    F64Copysign_RSR = 855_u16,
    F64Copysign_RSS = 856_u16,
    F64Copysign_RSI = 857_u16,
    F64Copysign_RIR = 858_u16,
    F64Copysign_RIS = 859_u16,
    I32Load_RR = 860_u16,
    I32Load_RS = 861_u16,
    I32Load_RI = 862_u16,
    I32LoadMem0_RR = 863_u16,
    I32LoadMem0_RS = 864_u16,
    I32LoadMem0_RI = 865_u16,
    I32LoadMem0_SR = 866_u16,
    I32LoadMem0_SS = 867_u16,
    I32LoadMem0_SI = 868_u16,
    I64Load_RR = 869_u16,
    I64Load_RS = 870_u16,
    I64Load_RI = 871_u16,
    I64LoadMem0_RR = 872_u16,
    I64LoadMem0_RS = 873_u16,
    I64LoadMem0_RI = 874_u16,
    I64LoadMem0_SR = 875_u16,
    I64LoadMem0_SS = 876_u16,
    I64LoadMem0_SI = 877_u16,
    F32Load_RR = 878_u16,
    F32Load_RS = 879_u16,
    F32Load_RI = 880_u16,
    F32LoadMem0_RR = 881_u16,
    F32LoadMem0_RS = 882_u16,
    F32LoadMem0_RI = 883_u16,
    F32LoadMem0_SR = 884_u16,
    F32LoadMem0_SS = 885_u16,
    F32LoadMem0_SI = 886_u16,
    F64Load_RR = 887_u16,
    F64Load_RS = 888_u16,
    F64Load_RI = 889_u16,
    F64LoadMem0_RR = 890_u16,
    F64LoadMem0_RS = 891_u16,
    F64LoadMem0_RI = 892_u16,
    F64LoadMem0_SR = 893_u16,
    F64LoadMem0_SS = 894_u16,
    F64LoadMem0_SI = 895_u16,
    I32Load8S_RR = 896_u16,
    I32Load8S_RS = 897_u16,
    I32Load8S_RI = 898_u16,
    I32Load8SMem0_RR = 899_u16,
    I32Load8SMem0_RS = 900_u16,
    I32Load8SMem0_RI = 901_u16,
    I32Load8SMem0_SR = 902_u16,
    I32Load8SMem0_SS = 903_u16,
    I32Load8SMem0_SI = 904_u16,
    I64Load8S_RR = 905_u16,
    I64Load8S_RS = 906_u16,
    I64Load8S_RI = 907_u16,
    I64Load8SMem0_RR = 908_u16,
    I64Load8SMem0_RS = 909_u16,
    I64Load8SMem0_RI = 910_u16,
    I64Load8SMem0_SR = 911_u16,
    I64Load8SMem0_SS = 912_u16,
    I64Load8SMem0_SI = 913_u16,
    I32Load8U_RR = 914_u16,
    I32Load8U_RS = 915_u16,
    I32Load8U_RI = 916_u16,
    I32Load8UMem0_RR = 917_u16,
    I32Load8UMem0_RS = 918_u16,
    I32Load8UMem0_RI = 919_u16,
    I32Load8UMem0_SR = 920_u16,
    I32Load8UMem0_SS = 921_u16,
    I32Load8UMem0_SI = 922_u16,
    I64Load8U_RR = 923_u16,
    I64Load8U_RS = 924_u16,
    I64Load8U_RI = 925_u16,
    I64Load8UMem0_RR = 926_u16,
    I64Load8UMem0_RS = 927_u16,
    I64Load8UMem0_RI = 928_u16,
    I64Load8UMem0_SR = 929_u16,
    I64Load8UMem0_SS = 930_u16,
    I64Load8UMem0_SI = 931_u16,
    I32Load16S_RR = 932_u16,
    I32Load16S_RS = 933_u16,
    I32Load16S_RI = 934_u16,
    I32Load16SMem0_RR = 935_u16,
    I32Load16SMem0_RS = 936_u16,
    I32Load16SMem0_RI = 937_u16,
    I32Load16SMem0_SR = 938_u16,
    I32Load16SMem0_SS = 939_u16,
    I32Load16SMem0_SI = 940_u16,
    I64Load16S_RR = 941_u16,
    I64Load16S_RS = 942_u16,
    I64Load16S_RI = 943_u16,
    I64Load16SMem0_RR = 944_u16,
    I64Load16SMem0_RS = 945_u16,
    I64Load16SMem0_RI = 946_u16,
    I64Load16SMem0_SR = 947_u16,
    I64Load16SMem0_SS = 948_u16,
    I64Load16SMem0_SI = 949_u16,
    I32Load16U_RR = 950_u16,
    I32Load16U_RS = 951_u16,
    I32Load16U_RI = 952_u16,
    I32Load16UMem0_RR = 953_u16,
    I32Load16UMem0_RS = 954_u16,
    I32Load16UMem0_RI = 955_u16,
    I32Load16UMem0_SR = 956_u16,
    I32Load16UMem0_SS = 957_u16,
    I32Load16UMem0_SI = 958_u16,
    I64Load16U_RR = 959_u16,
    I64Load16U_RS = 960_u16,
    I64Load16U_RI = 961_u16,
    I64Load16UMem0_RR = 962_u16,
    I64Load16UMem0_RS = 963_u16,
    I64Load16UMem0_RI = 964_u16,
    I64Load16UMem0_SR = 965_u16,
    I64Load16UMem0_SS = 966_u16,
    I64Load16UMem0_SI = 967_u16,
    I64Load32S_RR = 968_u16,
    I64Load32S_RS = 969_u16,
    I64Load32S_RI = 970_u16,
    I64Load32SMem0_RR = 971_u16,
    I64Load32SMem0_RS = 972_u16,
    I64Load32SMem0_RI = 973_u16,
    I64Load32SMem0_SR = 974_u16,
    I64Load32SMem0_SS = 975_u16,
    I64Load32SMem0_SI = 976_u16,
    I64Load32U_RR = 977_u16,
    I64Load32U_RS = 978_u16,
    I64Load32U_RI = 979_u16,
    I64Load32UMem0_RR = 980_u16,
    I64Load32UMem0_RS = 981_u16,
    I64Load32UMem0_RI = 982_u16,
    I64Load32UMem0_SR = 983_u16,
    I64Load32UMem0_SS = 984_u16,
    I64Load32UMem0_SI = 985_u16,
    I32Store_SS = 986_u16,
    I32Store_SI = 987_u16,
    I32Store_IS = 988_u16,
    I32Store_II = 989_u16,
    I32StoreMem0_RS = 990_u16,
    I32StoreMem0_RI = 991_u16,
    I32StoreMem0_SR = 992_u16,
    I32StoreMem0_SS = 993_u16,
    I32StoreMem0_SI = 994_u16,
    I32StoreMem0_IR = 995_u16,
    I32StoreMem0_IS = 996_u16,
    I32StoreMem0_II = 997_u16,
    I64Store_SS = 998_u16,
    I64Store_SI = 999_u16,
    I64Store_IS = 1000_u16,
    I64Store_II = 1001_u16,
    I64StoreMem0_RS = 1002_u16,
    I64StoreMem0_RI = 1003_u16,
    I64StoreMem0_SR = 1004_u16,
    I64StoreMem0_SS = 1005_u16,
    I64StoreMem0_SI = 1006_u16,
    I64StoreMem0_IR = 1007_u16,
    I64StoreMem0_IS = 1008_u16,
    I64StoreMem0_II = 1009_u16,
    F32Store_SS = 1010_u16,
    F32Store_SI = 1011_u16,
    F32Store_IS = 1012_u16,
    F32Store_II = 1013_u16,
    F32StoreMem0_RR = 1014_u16,
    F32StoreMem0_RS = 1015_u16,
    F32StoreMem0_RI = 1016_u16,
    F32StoreMem0_SR = 1017_u16,
    F32StoreMem0_SS = 1018_u16,
    F32StoreMem0_SI = 1019_u16,
    F32StoreMem0_IR = 1020_u16,
    F32StoreMem0_IS = 1021_u16,
    F32StoreMem0_II = 1022_u16,
    F64Store_SS = 1023_u16,
    F64Store_SI = 1024_u16,
    F64Store_IS = 1025_u16,
    F64Store_II = 1026_u16,
    F64StoreMem0_RR = 1027_u16,
    F64StoreMem0_RS = 1028_u16,
    F64StoreMem0_RI = 1029_u16,
    F64StoreMem0_SR = 1030_u16,
    F64StoreMem0_SS = 1031_u16,
    F64StoreMem0_SI = 1032_u16,
    F64StoreMem0_IR = 1033_u16,
    F64StoreMem0_IS = 1034_u16,
    F64StoreMem0_II = 1035_u16,
    I32Store8_SS = 1036_u16,
    I32Store8_SI = 1037_u16,
    I32Store8_IS = 1038_u16,
    I32Store8_II = 1039_u16,
    I32Store8Mem0_RS = 1040_u16,
    I32Store8Mem0_RI = 1041_u16,
    I32Store8Mem0_SR = 1042_u16,
    I32Store8Mem0_SS = 1043_u16,
    I32Store8Mem0_SI = 1044_u16,
    I32Store8Mem0_IR = 1045_u16,
    I32Store8Mem0_IS = 1046_u16,
    I32Store8Mem0_II = 1047_u16,
    I64Store8_SS = 1048_u16,
    I64Store8_SI = 1049_u16,
    I64Store8_IS = 1050_u16,
    I64Store8_II = 1051_u16,
    I64Store8Mem0_RS = 1052_u16,
    I64Store8Mem0_RI = 1053_u16,
    I64Store8Mem0_SR = 1054_u16,
    I64Store8Mem0_SS = 1055_u16,
    I64Store8Mem0_SI = 1056_u16,
    I64Store8Mem0_IR = 1057_u16,
    I64Store8Mem0_IS = 1058_u16,
    I64Store8Mem0_II = 1059_u16,
    I32Store16_SS = 1060_u16,
    I32Store16_SI = 1061_u16,
    I32Store16_IS = 1062_u16,
    I32Store16_II = 1063_u16,
    I32Store16Mem0_RS = 1064_u16,
    I32Store16Mem0_RI = 1065_u16,
    I32Store16Mem0_SR = 1066_u16,
    I32Store16Mem0_SS = 1067_u16,
    I32Store16Mem0_SI = 1068_u16,
    I32Store16Mem0_IR = 1069_u16,
    I32Store16Mem0_IS = 1070_u16,
    I32Store16Mem0_II = 1071_u16,
    I64Store16_SS = 1072_u16,
    I64Store16_SI = 1073_u16,
    I64Store16_IS = 1074_u16,
    I64Store16_II = 1075_u16,
    I64Store16Mem0_RS = 1076_u16,
    I64Store16Mem0_RI = 1077_u16,
    I64Store16Mem0_SR = 1078_u16,
    I64Store16Mem0_SS = 1079_u16,
    I64Store16Mem0_SI = 1080_u16,
    I64Store16Mem0_IR = 1081_u16,
    I64Store16Mem0_IS = 1082_u16,
    I64Store16Mem0_II = 1083_u16,
    I64Store32_SS = 1084_u16,
    I64Store32_SI = 1085_u16,
    I64Store32_IS = 1086_u16,
    I64Store32_II = 1087_u16,
    I64Store32Mem0_RS = 1088_u16,
    I64Store32Mem0_RI = 1089_u16,
    I64Store32Mem0_SR = 1090_u16,
    I64Store32Mem0_SS = 1091_u16,
    I64Store32Mem0_SI = 1092_u16,
    I64Store32Mem0_IR = 1093_u16,
    I64Store32Mem0_IS = 1094_u16,
    I64Store32Mem0_II = 1095_u16,
    Select = 1096_u16,
    SelectI32_RSSS = 1097_u16,
    SelectI32_RSSI = 1098_u16,
    SelectI32_RSIS = 1099_u16,
    SelectI32_RSII = 1100_u16,
    SelectI64_RRSS = 1101_u16,
    SelectI64_RRSI = 1102_u16,
    SelectI64_RRIS = 1103_u16,
    SelectI64_RRII = 1104_u16,
    SelectI64_RSRS = 1105_u16,
    SelectI64_RSRI = 1106_u16,
    SelectI64_RSSR = 1107_u16,
    SelectI64_RSSS = 1108_u16,
    SelectI64_RSSI = 1109_u16,
    SelectI64_RSIR = 1110_u16,
    SelectI64_RSIS = 1111_u16,
    SelectI64_RSII = 1112_u16,
    SelectF32_RRSS = 1113_u16,
    SelectF32_RRSI = 1114_u16,
    SelectF32_RRIS = 1115_u16,
    SelectF32_RRII = 1116_u16,
    SelectF32_RSRS = 1117_u16,
    SelectF32_RSRI = 1118_u16,
    SelectF32_RSSR = 1119_u16,
    SelectF32_RSSS = 1120_u16,
    SelectF32_RSSI = 1121_u16,
    SelectF32_RSIR = 1122_u16,
    SelectF32_RSIS = 1123_u16,
    SelectF32_RSII = 1124_u16,
    SelectF64_RRSS = 1125_u16,
    SelectF64_RRSI = 1126_u16,
    SelectF64_RRIS = 1127_u16,
    SelectF64_RRII = 1128_u16,
    SelectF64_RSRS = 1129_u16,
    SelectF64_RSRI = 1130_u16,
    SelectF64_RSSR = 1131_u16,
    SelectF64_RSSS = 1132_u16,
    SelectF64_RSSI = 1133_u16,
    SelectF64_RSIR = 1134_u16,
    SelectF64_RSIS = 1135_u16,
    SelectF64_RSII = 1136_u16,
    TableSize_R = 1137_u16,
    TableSize_S = 1138_u16,
    TableGet_RR = 1139_u16,
    TableGet_RS = 1140_u16,
    TableGet_RI = 1141_u16,
    TableSet_RS = 1142_u16,
    TableSet_RI = 1143_u16,
    TableSet_SR = 1144_u16,
    TableSet_SS = 1145_u16,
    TableSet_SI = 1146_u16,
    TableSet_IR = 1147_u16,
    TableSet_IS = 1148_u16,
    TableSet_II = 1149_u16,
    TableGrow = 1150_u16,
    TableCopy = 1151_u16,
    TableFill = 1152_u16,
    TableInit = 1153_u16,
    MemorySize_R = 1154_u16,
    MemorySize_S = 1155_u16,
    MemoryGrow = 1156_u16,
    MemoryCopy = 1157_u16,
    MemoryFill = 1158_u16,
    MemoryInit = 1159_u16,
    CallInternal = 1160_u16,
    ReturnCallInternal = 1161_u16,
    CallImported = 1162_u16,
    ReturnCallImported = 1163_u16,
    CallIndirect_R = 1164_u16,
    CallIndirect_S = 1165_u16,
    CallIndirect_I = 1166_u16,
    ReturnCallIndirect_R = 1167_u16,
    ReturnCallIndirect_S = 1168_u16,
    ReturnCallIndirect_I = 1169_u16,
}
impl ::core::marker::Copy for OpCode {}
impl ::core::clone::Clone for OpCode {
    fn clone(&self) -> Self {
        *self
    }
}
impl ::core::cmp::PartialEq for OpCode {
    fn eq(&self, other: &Self) -> bool {
        (*self as ::core::primitive::u16) == (*other as ::core::primitive::u16)
    }
}
impl ::core::cmp::Ord for OpCode {
    fn cmp(&self, other: &Self) -> ::core::cmp::Ordering {
        (*self as ::core::primitive::u16).cmp(&(*other as ::core::primitive::u16))
    }
}
impl ::core::cmp::PartialOrd for OpCode {
    fn partial_cmp(&self, other: &Self) -> ::core::option::Option<::core::cmp::Ordering> {
        ::core::option::Option::Some(
            <Self as ::core::cmp::Ord>::cmp(self, other)
        )
    }
}
impl ::core::cmp::Eq for OpCode {}
impl crate::OperatorCode for OpCode {
    fn op_code(&self) -> Self {
        *self
    }
}
impl crate::OperatorCode for crate::Op {
    fn op_code(&self) -> crate::OpCode {
        match self {
            Self::Trap { .. } => crate::OpCode::Trap,
            Self::ConsumeFuel { .. } => crate::OpCode::ConsumeFuel,
            Self::RefFunc { .. } => crate::OpCode::RefFunc,
            Self::Copy1_S { .. } => crate::OpCode::Copy1_S,
            Self::Copy { .. } => crate::OpCode::Copy,
            Self::Copy1I32_I { .. } => crate::OpCode::Copy1I32_I,
            Self::Copy1I64_R { .. } => crate::OpCode::Copy1I64_R,
            Self::Copy1I64_I { .. } => crate::OpCode::Copy1I64_I,
            Self::Copy1F32_R { .. } => crate::OpCode::Copy1F32_R,
            Self::Copy1F32_I { .. } => crate::OpCode::Copy1F32_I,
            Self::Copy1F64_R { .. } => crate::OpCode::Copy1F64_R,
            Self::Copy1F64_I { .. } => crate::OpCode::Copy1F64_I,
            Self::Return0 { .. } => crate::OpCode::Return0,
            Self::Return1_S { .. } => crate::OpCode::Return1_S,
            Self::Return { .. } => crate::OpCode::Return,
            Self::Return1I32_R { .. } => crate::OpCode::Return1I32_R,
            Self::Return1I64_R { .. } => crate::OpCode::Return1I64_R,
            Self::Return1F32_R { .. } => crate::OpCode::Return1F32_R,
            Self::Return1F64_R { .. } => crate::OpCode::Return1F64_R,
            Self::Return1I32_I { .. } => crate::OpCode::Return1I32_I,
            Self::Return1I64_I { .. } => crate::OpCode::Return1I64_I,
            Self::Return1F32_I { .. } => crate::OpCode::Return1F32_I,
            Self::Return1F64_I { .. } => crate::OpCode::Return1F64_I,
            Self::GlobalGet_S { .. } => crate::OpCode::GlobalGet_S,
            Self::GlobalGetI32_R { .. } => crate::OpCode::GlobalGetI32_R,
            Self::GlobalGetI64_R { .. } => crate::OpCode::GlobalGetI64_R,
            Self::GlobalGetF32_R { .. } => crate::OpCode::GlobalGetF32_R,
            Self::GlobalGetF64_R { .. } => crate::OpCode::GlobalGetF64_R,
            Self::GlobalSet_S { .. } => crate::OpCode::GlobalSet_S,
            Self::GlobalSetI32_R { .. } => crate::OpCode::GlobalSetI32_R,
            Self::GlobalSetI64_R { .. } => crate::OpCode::GlobalSetI64_R,
            Self::GlobalSetF32_R { .. } => crate::OpCode::GlobalSetF32_R,
            Self::GlobalSetF64_R { .. } => crate::OpCode::GlobalSetF64_R,
            Self::GlobalSetI32_I { .. } => crate::OpCode::GlobalSetI32_I,
            Self::GlobalSetI64_I { .. } => crate::OpCode::GlobalSetI64_I,
            Self::GlobalSetF32_I { .. } => crate::OpCode::GlobalSetF32_I,
            Self::GlobalSetF64_I { .. } => crate::OpCode::GlobalSetF64_I,
            Self::BranchTable0_R { .. } => crate::OpCode::BranchTable0_R,
            Self::BranchTable_R { .. } => crate::OpCode::BranchTable_R,
            Self::BranchTable0_S { .. } => crate::OpCode::BranchTable0_S,
            Self::BranchTable_S { .. } => crate::OpCode::BranchTable_S,
            Self::Branch { .. } => crate::OpCode::Branch,
            Self::I32EqBranch_RS { .. } => crate::OpCode::I32EqBranch_RS,
            Self::I32EqBranch_RI { .. } => crate::OpCode::I32EqBranch_RI,
            Self::I32EqBranch_SS { .. } => crate::OpCode::I32EqBranch_SS,
            Self::I32EqBranch_SI { .. } => crate::OpCode::I32EqBranch_SI,
            Self::I64EqBranch_RS { .. } => crate::OpCode::I64EqBranch_RS,
            Self::I64EqBranch_RI { .. } => crate::OpCode::I64EqBranch_RI,
            Self::I64EqBranch_SS { .. } => crate::OpCode::I64EqBranch_SS,
            Self::I64EqBranch_SI { .. } => crate::OpCode::I64EqBranch_SI,
            Self::F32EqBranch_RS { .. } => crate::OpCode::F32EqBranch_RS,
            Self::F32EqBranch_RI { .. } => crate::OpCode::F32EqBranch_RI,
            Self::F32EqBranch_SS { .. } => crate::OpCode::F32EqBranch_SS,
            Self::F32EqBranch_SI { .. } => crate::OpCode::F32EqBranch_SI,
            Self::F64EqBranch_RS { .. } => crate::OpCode::F64EqBranch_RS,
            Self::F64EqBranch_RI { .. } => crate::OpCode::F64EqBranch_RI,
            Self::F64EqBranch_SS { .. } => crate::OpCode::F64EqBranch_SS,
            Self::F64EqBranch_SI { .. } => crate::OpCode::F64EqBranch_SI,
            Self::I32NeBranch_RS { .. } => crate::OpCode::I32NeBranch_RS,
            Self::I32NeBranch_RI { .. } => crate::OpCode::I32NeBranch_RI,
            Self::I32NeBranch_SS { .. } => crate::OpCode::I32NeBranch_SS,
            Self::I32NeBranch_SI { .. } => crate::OpCode::I32NeBranch_SI,
            Self::I64NeBranch_RS { .. } => crate::OpCode::I64NeBranch_RS,
            Self::I64NeBranch_RI { .. } => crate::OpCode::I64NeBranch_RI,
            Self::I64NeBranch_SS { .. } => crate::OpCode::I64NeBranch_SS,
            Self::I64NeBranch_SI { .. } => crate::OpCode::I64NeBranch_SI,
            Self::F32NeBranch_RS { .. } => crate::OpCode::F32NeBranch_RS,
            Self::F32NeBranch_RI { .. } => crate::OpCode::F32NeBranch_RI,
            Self::F32NeBranch_SS { .. } => crate::OpCode::F32NeBranch_SS,
            Self::F32NeBranch_SI { .. } => crate::OpCode::F32NeBranch_SI,
            Self::F64NeBranch_RS { .. } => crate::OpCode::F64NeBranch_RS,
            Self::F64NeBranch_RI { .. } => crate::OpCode::F64NeBranch_RI,
            Self::F64NeBranch_SS { .. } => crate::OpCode::F64NeBranch_SS,
            Self::F64NeBranch_SI { .. } => crate::OpCode::F64NeBranch_SI,
            Self::I32AndBranch_RS { .. } => crate::OpCode::I32AndBranch_RS,
            Self::I32AndBranch_RI { .. } => crate::OpCode::I32AndBranch_RI,
            Self::I32AndBranch_SS { .. } => crate::OpCode::I32AndBranch_SS,
            Self::I32AndBranch_SI { .. } => crate::OpCode::I32AndBranch_SI,
            Self::I64AndBranch_RS { .. } => crate::OpCode::I64AndBranch_RS,
            Self::I64AndBranch_RI { .. } => crate::OpCode::I64AndBranch_RI,
            Self::I64AndBranch_SS { .. } => crate::OpCode::I64AndBranch_SS,
            Self::I64AndBranch_SI { .. } => crate::OpCode::I64AndBranch_SI,
            Self::I32OrBranch_RS { .. } => crate::OpCode::I32OrBranch_RS,
            Self::I32OrBranch_RI { .. } => crate::OpCode::I32OrBranch_RI,
            Self::I32OrBranch_SS { .. } => crate::OpCode::I32OrBranch_SS,
            Self::I32OrBranch_SI { .. } => crate::OpCode::I32OrBranch_SI,
            Self::I64OrBranch_RS { .. } => crate::OpCode::I64OrBranch_RS,
            Self::I64OrBranch_RI { .. } => crate::OpCode::I64OrBranch_RI,
            Self::I64OrBranch_SS { .. } => crate::OpCode::I64OrBranch_SS,
            Self::I64OrBranch_SI { .. } => crate::OpCode::I64OrBranch_SI,
            Self::I32XorBranch_RS { .. } => crate::OpCode::I32XorBranch_RS,
            Self::I32XorBranch_RI { .. } => crate::OpCode::I32XorBranch_RI,
            Self::I32XorBranch_SS { .. } => crate::OpCode::I32XorBranch_SS,
            Self::I32XorBranch_SI { .. } => crate::OpCode::I32XorBranch_SI,
            Self::I64XorBranch_RS { .. } => crate::OpCode::I64XorBranch_RS,
            Self::I64XorBranch_RI { .. } => crate::OpCode::I64XorBranch_RI,
            Self::I64XorBranch_SS { .. } => crate::OpCode::I64XorBranch_SS,
            Self::I64XorBranch_SI { .. } => crate::OpCode::I64XorBranch_SI,
            Self::I32NotAndBranch_RS { .. } => crate::OpCode::I32NotAndBranch_RS,
            Self::I32NotAndBranch_RI { .. } => crate::OpCode::I32NotAndBranch_RI,
            Self::I32NotAndBranch_SS { .. } => crate::OpCode::I32NotAndBranch_SS,
            Self::I32NotAndBranch_SI { .. } => crate::OpCode::I32NotAndBranch_SI,
            Self::I64NotAndBranch_RS { .. } => crate::OpCode::I64NotAndBranch_RS,
            Self::I64NotAndBranch_RI { .. } => crate::OpCode::I64NotAndBranch_RI,
            Self::I64NotAndBranch_SS { .. } => crate::OpCode::I64NotAndBranch_SS,
            Self::I64NotAndBranch_SI { .. } => crate::OpCode::I64NotAndBranch_SI,
            Self::I32NotOrBranch_RS { .. } => crate::OpCode::I32NotOrBranch_RS,
            Self::I32NotOrBranch_RI { .. } => crate::OpCode::I32NotOrBranch_RI,
            Self::I32NotOrBranch_SS { .. } => crate::OpCode::I32NotOrBranch_SS,
            Self::I32NotOrBranch_SI { .. } => crate::OpCode::I32NotOrBranch_SI,
            Self::I64NotOrBranch_RS { .. } => crate::OpCode::I64NotOrBranch_RS,
            Self::I64NotOrBranch_RI { .. } => crate::OpCode::I64NotOrBranch_RI,
            Self::I64NotOrBranch_SS { .. } => crate::OpCode::I64NotOrBranch_SS,
            Self::I64NotOrBranch_SI { .. } => crate::OpCode::I64NotOrBranch_SI,
            Self::I32NotXorBranch_RS { .. } => crate::OpCode::I32NotXorBranch_RS,
            Self::I32NotXorBranch_RI { .. } => crate::OpCode::I32NotXorBranch_RI,
            Self::I32NotXorBranch_SS { .. } => crate::OpCode::I32NotXorBranch_SS,
            Self::I32NotXorBranch_SI { .. } => crate::OpCode::I32NotXorBranch_SI,
            Self::I64NotXorBranch_RS { .. } => crate::OpCode::I64NotXorBranch_RS,
            Self::I64NotXorBranch_RI { .. } => crate::OpCode::I64NotXorBranch_RI,
            Self::I64NotXorBranch_SS { .. } => crate::OpCode::I64NotXorBranch_SS,
            Self::I64NotXorBranch_SI { .. } => crate::OpCode::I64NotXorBranch_SI,
            Self::I32LtSBranch_RS { .. } => crate::OpCode::I32LtSBranch_RS,
            Self::I32LtSBranch_RI { .. } => crate::OpCode::I32LtSBranch_RI,
            Self::I32LtSBranch_SR { .. } => crate::OpCode::I32LtSBranch_SR,
            Self::I32LtSBranch_SS { .. } => crate::OpCode::I32LtSBranch_SS,
            Self::I32LtSBranch_SI { .. } => crate::OpCode::I32LtSBranch_SI,
            Self::I32LtSBranch_IR { .. } => crate::OpCode::I32LtSBranch_IR,
            Self::I32LtSBranch_IS { .. } => crate::OpCode::I32LtSBranch_IS,
            Self::I64LtSBranch_RS { .. } => crate::OpCode::I64LtSBranch_RS,
            Self::I64LtSBranch_RI { .. } => crate::OpCode::I64LtSBranch_RI,
            Self::I64LtSBranch_SR { .. } => crate::OpCode::I64LtSBranch_SR,
            Self::I64LtSBranch_SS { .. } => crate::OpCode::I64LtSBranch_SS,
            Self::I64LtSBranch_SI { .. } => crate::OpCode::I64LtSBranch_SI,
            Self::I64LtSBranch_IR { .. } => crate::OpCode::I64LtSBranch_IR,
            Self::I64LtSBranch_IS { .. } => crate::OpCode::I64LtSBranch_IS,
            Self::I32LtUBranch_RS { .. } => crate::OpCode::I32LtUBranch_RS,
            Self::I32LtUBranch_RI { .. } => crate::OpCode::I32LtUBranch_RI,
            Self::I32LtUBranch_SR { .. } => crate::OpCode::I32LtUBranch_SR,
            Self::I32LtUBranch_SS { .. } => crate::OpCode::I32LtUBranch_SS,
            Self::I32LtUBranch_SI { .. } => crate::OpCode::I32LtUBranch_SI,
            Self::I32LtUBranch_IR { .. } => crate::OpCode::I32LtUBranch_IR,
            Self::I32LtUBranch_IS { .. } => crate::OpCode::I32LtUBranch_IS,
            Self::I64LtUBranch_RS { .. } => crate::OpCode::I64LtUBranch_RS,
            Self::I64LtUBranch_RI { .. } => crate::OpCode::I64LtUBranch_RI,
            Self::I64LtUBranch_SR { .. } => crate::OpCode::I64LtUBranch_SR,
            Self::I64LtUBranch_SS { .. } => crate::OpCode::I64LtUBranch_SS,
            Self::I64LtUBranch_SI { .. } => crate::OpCode::I64LtUBranch_SI,
            Self::I64LtUBranch_IR { .. } => crate::OpCode::I64LtUBranch_IR,
            Self::I64LtUBranch_IS { .. } => crate::OpCode::I64LtUBranch_IS,
            Self::I32LeSBranch_RS { .. } => crate::OpCode::I32LeSBranch_RS,
            Self::I32LeSBranch_RI { .. } => crate::OpCode::I32LeSBranch_RI,
            Self::I32LeSBranch_SR { .. } => crate::OpCode::I32LeSBranch_SR,
            Self::I32LeSBranch_SS { .. } => crate::OpCode::I32LeSBranch_SS,
            Self::I32LeSBranch_SI { .. } => crate::OpCode::I32LeSBranch_SI,
            Self::I32LeSBranch_IR { .. } => crate::OpCode::I32LeSBranch_IR,
            Self::I32LeSBranch_IS { .. } => crate::OpCode::I32LeSBranch_IS,
            Self::I64LeSBranch_RS { .. } => crate::OpCode::I64LeSBranch_RS,
            Self::I64LeSBranch_RI { .. } => crate::OpCode::I64LeSBranch_RI,
            Self::I64LeSBranch_SR { .. } => crate::OpCode::I64LeSBranch_SR,
            Self::I64LeSBranch_SS { .. } => crate::OpCode::I64LeSBranch_SS,
            Self::I64LeSBranch_SI { .. } => crate::OpCode::I64LeSBranch_SI,
            Self::I64LeSBranch_IR { .. } => crate::OpCode::I64LeSBranch_IR,
            Self::I64LeSBranch_IS { .. } => crate::OpCode::I64LeSBranch_IS,
            Self::I32LeUBranch_RS { .. } => crate::OpCode::I32LeUBranch_RS,
            Self::I32LeUBranch_RI { .. } => crate::OpCode::I32LeUBranch_RI,
            Self::I32LeUBranch_SR { .. } => crate::OpCode::I32LeUBranch_SR,
            Self::I32LeUBranch_SS { .. } => crate::OpCode::I32LeUBranch_SS,
            Self::I32LeUBranch_SI { .. } => crate::OpCode::I32LeUBranch_SI,
            Self::I32LeUBranch_IR { .. } => crate::OpCode::I32LeUBranch_IR,
            Self::I32LeUBranch_IS { .. } => crate::OpCode::I32LeUBranch_IS,
            Self::I64LeUBranch_RS { .. } => crate::OpCode::I64LeUBranch_RS,
            Self::I64LeUBranch_RI { .. } => crate::OpCode::I64LeUBranch_RI,
            Self::I64LeUBranch_SR { .. } => crate::OpCode::I64LeUBranch_SR,
            Self::I64LeUBranch_SS { .. } => crate::OpCode::I64LeUBranch_SS,
            Self::I64LeUBranch_SI { .. } => crate::OpCode::I64LeUBranch_SI,
            Self::I64LeUBranch_IR { .. } => crate::OpCode::I64LeUBranch_IR,
            Self::I64LeUBranch_IS { .. } => crate::OpCode::I64LeUBranch_IS,
            Self::F32LtBranch_RS { .. } => crate::OpCode::F32LtBranch_RS,
            Self::F32LtBranch_RI { .. } => crate::OpCode::F32LtBranch_RI,
            Self::F32LtBranch_SR { .. } => crate::OpCode::F32LtBranch_SR,
            Self::F32LtBranch_SS { .. } => crate::OpCode::F32LtBranch_SS,
            Self::F32LtBranch_SI { .. } => crate::OpCode::F32LtBranch_SI,
            Self::F32LtBranch_IR { .. } => crate::OpCode::F32LtBranch_IR,
            Self::F32LtBranch_IS { .. } => crate::OpCode::F32LtBranch_IS,
            Self::F64LtBranch_RS { .. } => crate::OpCode::F64LtBranch_RS,
            Self::F64LtBranch_RI { .. } => crate::OpCode::F64LtBranch_RI,
            Self::F64LtBranch_SR { .. } => crate::OpCode::F64LtBranch_SR,
            Self::F64LtBranch_SS { .. } => crate::OpCode::F64LtBranch_SS,
            Self::F64LtBranch_SI { .. } => crate::OpCode::F64LtBranch_SI,
            Self::F64LtBranch_IR { .. } => crate::OpCode::F64LtBranch_IR,
            Self::F64LtBranch_IS { .. } => crate::OpCode::F64LtBranch_IS,
            Self::F32LeBranch_RS { .. } => crate::OpCode::F32LeBranch_RS,
            Self::F32LeBranch_RI { .. } => crate::OpCode::F32LeBranch_RI,
            Self::F32LeBranch_SR { .. } => crate::OpCode::F32LeBranch_SR,
            Self::F32LeBranch_SS { .. } => crate::OpCode::F32LeBranch_SS,
            Self::F32LeBranch_SI { .. } => crate::OpCode::F32LeBranch_SI,
            Self::F32LeBranch_IR { .. } => crate::OpCode::F32LeBranch_IR,
            Self::F32LeBranch_IS { .. } => crate::OpCode::F32LeBranch_IS,
            Self::F64LeBranch_RS { .. } => crate::OpCode::F64LeBranch_RS,
            Self::F64LeBranch_RI { .. } => crate::OpCode::F64LeBranch_RI,
            Self::F64LeBranch_SR { .. } => crate::OpCode::F64LeBranch_SR,
            Self::F64LeBranch_SS { .. } => crate::OpCode::F64LeBranch_SS,
            Self::F64LeBranch_SI { .. } => crate::OpCode::F64LeBranch_SI,
            Self::F64LeBranch_IR { .. } => crate::OpCode::F64LeBranch_IR,
            Self::F64LeBranch_IS { .. } => crate::OpCode::F64LeBranch_IS,
            Self::I32Popcnt_RR { .. } => crate::OpCode::I32Popcnt_RR,
            Self::I32Popcnt_RS { .. } => crate::OpCode::I32Popcnt_RS,
            Self::I32Popcnt_SR { .. } => crate::OpCode::I32Popcnt_SR,
            Self::I32Popcnt_SS { .. } => crate::OpCode::I32Popcnt_SS,
            Self::I64Popcnt_RR { .. } => crate::OpCode::I64Popcnt_RR,
            Self::I64Popcnt_RS { .. } => crate::OpCode::I64Popcnt_RS,
            Self::I64Popcnt_SR { .. } => crate::OpCode::I64Popcnt_SR,
            Self::I64Popcnt_SS { .. } => crate::OpCode::I64Popcnt_SS,
            Self::I32Clz_RR { .. } => crate::OpCode::I32Clz_RR,
            Self::I32Clz_RS { .. } => crate::OpCode::I32Clz_RS,
            Self::I32Clz_SR { .. } => crate::OpCode::I32Clz_SR,
            Self::I32Clz_SS { .. } => crate::OpCode::I32Clz_SS,
            Self::I64Clz_RR { .. } => crate::OpCode::I64Clz_RR,
            Self::I64Clz_RS { .. } => crate::OpCode::I64Clz_RS,
            Self::I64Clz_SR { .. } => crate::OpCode::I64Clz_SR,
            Self::I64Clz_SS { .. } => crate::OpCode::I64Clz_SS,
            Self::I32Ctz_RR { .. } => crate::OpCode::I32Ctz_RR,
            Self::I32Ctz_RS { .. } => crate::OpCode::I32Ctz_RS,
            Self::I32Ctz_SR { .. } => crate::OpCode::I32Ctz_SR,
            Self::I32Ctz_SS { .. } => crate::OpCode::I32Ctz_SS,
            Self::I64Ctz_RR { .. } => crate::OpCode::I64Ctz_RR,
            Self::I64Ctz_RS { .. } => crate::OpCode::I64Ctz_RS,
            Self::I64Ctz_SR { .. } => crate::OpCode::I64Ctz_SR,
            Self::I64Ctz_SS { .. } => crate::OpCode::I64Ctz_SS,
            Self::F32Abs_RR { .. } => crate::OpCode::F32Abs_RR,
            Self::F32Abs_RS { .. } => crate::OpCode::F32Abs_RS,
            Self::F32Abs_SR { .. } => crate::OpCode::F32Abs_SR,
            Self::F32Abs_SS { .. } => crate::OpCode::F32Abs_SS,
            Self::F64Abs_RR { .. } => crate::OpCode::F64Abs_RR,
            Self::F64Abs_RS { .. } => crate::OpCode::F64Abs_RS,
            Self::F64Abs_SR { .. } => crate::OpCode::F64Abs_SR,
            Self::F64Abs_SS { .. } => crate::OpCode::F64Abs_SS,
            Self::F32Neg_RR { .. } => crate::OpCode::F32Neg_RR,
            Self::F32Neg_RS { .. } => crate::OpCode::F32Neg_RS,
            Self::F32Neg_SR { .. } => crate::OpCode::F32Neg_SR,
            Self::F32Neg_SS { .. } => crate::OpCode::F32Neg_SS,
            Self::F64Neg_RR { .. } => crate::OpCode::F64Neg_RR,
            Self::F64Neg_RS { .. } => crate::OpCode::F64Neg_RS,
            Self::F64Neg_SR { .. } => crate::OpCode::F64Neg_SR,
            Self::F64Neg_SS { .. } => crate::OpCode::F64Neg_SS,
            Self::F32Ceil_RR { .. } => crate::OpCode::F32Ceil_RR,
            Self::F32Ceil_RS { .. } => crate::OpCode::F32Ceil_RS,
            Self::F32Ceil_SR { .. } => crate::OpCode::F32Ceil_SR,
            Self::F32Ceil_SS { .. } => crate::OpCode::F32Ceil_SS,
            Self::F64Ceil_RR { .. } => crate::OpCode::F64Ceil_RR,
            Self::F64Ceil_RS { .. } => crate::OpCode::F64Ceil_RS,
            Self::F64Ceil_SR { .. } => crate::OpCode::F64Ceil_SR,
            Self::F64Ceil_SS { .. } => crate::OpCode::F64Ceil_SS,
            Self::F32Floor_RR { .. } => crate::OpCode::F32Floor_RR,
            Self::F32Floor_RS { .. } => crate::OpCode::F32Floor_RS,
            Self::F32Floor_SR { .. } => crate::OpCode::F32Floor_SR,
            Self::F32Floor_SS { .. } => crate::OpCode::F32Floor_SS,
            Self::F64Floor_RR { .. } => crate::OpCode::F64Floor_RR,
            Self::F64Floor_RS { .. } => crate::OpCode::F64Floor_RS,
            Self::F64Floor_SR { .. } => crate::OpCode::F64Floor_SR,
            Self::F64Floor_SS { .. } => crate::OpCode::F64Floor_SS,
            Self::F32Trunc_RR { .. } => crate::OpCode::F32Trunc_RR,
            Self::F32Trunc_RS { .. } => crate::OpCode::F32Trunc_RS,
            Self::F32Trunc_SR { .. } => crate::OpCode::F32Trunc_SR,
            Self::F32Trunc_SS { .. } => crate::OpCode::F32Trunc_SS,
            Self::F64Trunc_RR { .. } => crate::OpCode::F64Trunc_RR,
            Self::F64Trunc_RS { .. } => crate::OpCode::F64Trunc_RS,
            Self::F64Trunc_SR { .. } => crate::OpCode::F64Trunc_SR,
            Self::F64Trunc_SS { .. } => crate::OpCode::F64Trunc_SS,
            Self::F32Nearest_RR { .. } => crate::OpCode::F32Nearest_RR,
            Self::F32Nearest_RS { .. } => crate::OpCode::F32Nearest_RS,
            Self::F32Nearest_SR { .. } => crate::OpCode::F32Nearest_SR,
            Self::F32Nearest_SS { .. } => crate::OpCode::F32Nearest_SS,
            Self::F64Nearest_RR { .. } => crate::OpCode::F64Nearest_RR,
            Self::F64Nearest_RS { .. } => crate::OpCode::F64Nearest_RS,
            Self::F64Nearest_SR { .. } => crate::OpCode::F64Nearest_SR,
            Self::F64Nearest_SS { .. } => crate::OpCode::F64Nearest_SS,
            Self::F32Sqrt_RR { .. } => crate::OpCode::F32Sqrt_RR,
            Self::F32Sqrt_RS { .. } => crate::OpCode::F32Sqrt_RS,
            Self::F32Sqrt_SR { .. } => crate::OpCode::F32Sqrt_SR,
            Self::F32Sqrt_SS { .. } => crate::OpCode::F32Sqrt_SS,
            Self::F64Sqrt_RR { .. } => crate::OpCode::F64Sqrt_RR,
            Self::F64Sqrt_RS { .. } => crate::OpCode::F64Sqrt_RS,
            Self::F64Sqrt_SR { .. } => crate::OpCode::F64Sqrt_SR,
            Self::F64Sqrt_SS { .. } => crate::OpCode::F64Sqrt_SS,
            Self::F32Demote_RR { .. } => crate::OpCode::F32Demote_RR,
            Self::F32Demote_RS { .. } => crate::OpCode::F32Demote_RS,
            Self::F32Demote_SR { .. } => crate::OpCode::F32Demote_SR,
            Self::F32Demote_SS { .. } => crate::OpCode::F32Demote_SS,
            Self::F64Promote_RR { .. } => crate::OpCode::F64Promote_RR,
            Self::F64Promote_RS { .. } => crate::OpCode::F64Promote_RS,
            Self::F64Promote_SR { .. } => crate::OpCode::F64Promote_SR,
            Self::F64Promote_SS { .. } => crate::OpCode::F64Promote_SS,
            Self::F32ConvertI32S_RR { .. } => crate::OpCode::F32ConvertI32S_RR,
            Self::F32ConvertI32S_RS { .. } => crate::OpCode::F32ConvertI32S_RS,
            Self::F32ConvertI32S_SR { .. } => crate::OpCode::F32ConvertI32S_SR,
            Self::F32ConvertI32S_SS { .. } => crate::OpCode::F32ConvertI32S_SS,
            Self::F32ConvertI32U_RR { .. } => crate::OpCode::F32ConvertI32U_RR,
            Self::F32ConvertI32U_RS { .. } => crate::OpCode::F32ConvertI32U_RS,
            Self::F32ConvertI32U_SR { .. } => crate::OpCode::F32ConvertI32U_SR,
            Self::F32ConvertI32U_SS { .. } => crate::OpCode::F32ConvertI32U_SS,
            Self::F32ConvertI64S_RR { .. } => crate::OpCode::F32ConvertI64S_RR,
            Self::F32ConvertI64S_RS { .. } => crate::OpCode::F32ConvertI64S_RS,
            Self::F32ConvertI64S_SR { .. } => crate::OpCode::F32ConvertI64S_SR,
            Self::F32ConvertI64S_SS { .. } => crate::OpCode::F32ConvertI64S_SS,
            Self::F32ConvertI64U_RR { .. } => crate::OpCode::F32ConvertI64U_RR,
            Self::F32ConvertI64U_RS { .. } => crate::OpCode::F32ConvertI64U_RS,
            Self::F32ConvertI64U_SR { .. } => crate::OpCode::F32ConvertI64U_SR,
            Self::F32ConvertI64U_SS { .. } => crate::OpCode::F32ConvertI64U_SS,
            Self::F64ConvertI32S_RR { .. } => crate::OpCode::F64ConvertI32S_RR,
            Self::F64ConvertI32S_RS { .. } => crate::OpCode::F64ConvertI32S_RS,
            Self::F64ConvertI32S_SR { .. } => crate::OpCode::F64ConvertI32S_SR,
            Self::F64ConvertI32S_SS { .. } => crate::OpCode::F64ConvertI32S_SS,
            Self::F64ConvertI32U_RR { .. } => crate::OpCode::F64ConvertI32U_RR,
            Self::F64ConvertI32U_RS { .. } => crate::OpCode::F64ConvertI32U_RS,
            Self::F64ConvertI32U_SR { .. } => crate::OpCode::F64ConvertI32U_SR,
            Self::F64ConvertI32U_SS { .. } => crate::OpCode::F64ConvertI32U_SS,
            Self::F64ConvertI64S_RR { .. } => crate::OpCode::F64ConvertI64S_RR,
            Self::F64ConvertI64S_RS { .. } => crate::OpCode::F64ConvertI64S_RS,
            Self::F64ConvertI64S_SR { .. } => crate::OpCode::F64ConvertI64S_SR,
            Self::F64ConvertI64S_SS { .. } => crate::OpCode::F64ConvertI64S_SS,
            Self::F64ConvertI64U_RR { .. } => crate::OpCode::F64ConvertI64U_RR,
            Self::F64ConvertI64U_RS { .. } => crate::OpCode::F64ConvertI64U_RS,
            Self::F64ConvertI64U_SR { .. } => crate::OpCode::F64ConvertI64U_SR,
            Self::F64ConvertI64U_SS { .. } => crate::OpCode::F64ConvertI64U_SS,
            Self::I32TruncF32S_RR { .. } => crate::OpCode::I32TruncF32S_RR,
            Self::I32TruncF32S_RS { .. } => crate::OpCode::I32TruncF32S_RS,
            Self::I32TruncF32S_SR { .. } => crate::OpCode::I32TruncF32S_SR,
            Self::I32TruncF32S_SS { .. } => crate::OpCode::I32TruncF32S_SS,
            Self::I32TruncF32U_RR { .. } => crate::OpCode::I32TruncF32U_RR,
            Self::I32TruncF32U_RS { .. } => crate::OpCode::I32TruncF32U_RS,
            Self::I32TruncF32U_SR { .. } => crate::OpCode::I32TruncF32U_SR,
            Self::I32TruncF32U_SS { .. } => crate::OpCode::I32TruncF32U_SS,
            Self::I32TruncF64S_RR { .. } => crate::OpCode::I32TruncF64S_RR,
            Self::I32TruncF64S_RS { .. } => crate::OpCode::I32TruncF64S_RS,
            Self::I32TruncF64S_SR { .. } => crate::OpCode::I32TruncF64S_SR,
            Self::I32TruncF64S_SS { .. } => crate::OpCode::I32TruncF64S_SS,
            Self::I32TruncF64U_RR { .. } => crate::OpCode::I32TruncF64U_RR,
            Self::I32TruncF64U_RS { .. } => crate::OpCode::I32TruncF64U_RS,
            Self::I32TruncF64U_SR { .. } => crate::OpCode::I32TruncF64U_SR,
            Self::I32TruncF64U_SS { .. } => crate::OpCode::I32TruncF64U_SS,
            Self::I64TruncF32S_RR { .. } => crate::OpCode::I64TruncF32S_RR,
            Self::I64TruncF32S_RS { .. } => crate::OpCode::I64TruncF32S_RS,
            Self::I64TruncF32S_SR { .. } => crate::OpCode::I64TruncF32S_SR,
            Self::I64TruncF32S_SS { .. } => crate::OpCode::I64TruncF32S_SS,
            Self::I64TruncF32U_RR { .. } => crate::OpCode::I64TruncF32U_RR,
            Self::I64TruncF32U_RS { .. } => crate::OpCode::I64TruncF32U_RS,
            Self::I64TruncF32U_SR { .. } => crate::OpCode::I64TruncF32U_SR,
            Self::I64TruncF32U_SS { .. } => crate::OpCode::I64TruncF32U_SS,
            Self::I64TruncF64S_RR { .. } => crate::OpCode::I64TruncF64S_RR,
            Self::I64TruncF64S_RS { .. } => crate::OpCode::I64TruncF64S_RS,
            Self::I64TruncF64S_SR { .. } => crate::OpCode::I64TruncF64S_SR,
            Self::I64TruncF64S_SS { .. } => crate::OpCode::I64TruncF64S_SS,
            Self::I64TruncF64U_RR { .. } => crate::OpCode::I64TruncF64U_RR,
            Self::I64TruncF64U_RS { .. } => crate::OpCode::I64TruncF64U_RS,
            Self::I64TruncF64U_SR { .. } => crate::OpCode::I64TruncF64U_SR,
            Self::I64TruncF64U_SS { .. } => crate::OpCode::I64TruncF64U_SS,
            Self::I32TruncSatF32S_RR { .. } => crate::OpCode::I32TruncSatF32S_RR,
            Self::I32TruncSatF32S_RS { .. } => crate::OpCode::I32TruncSatF32S_RS,
            Self::I32TruncSatF32S_SR { .. } => crate::OpCode::I32TruncSatF32S_SR,
            Self::I32TruncSatF32S_SS { .. } => crate::OpCode::I32TruncSatF32S_SS,
            Self::I32TruncSatF32U_RR { .. } => crate::OpCode::I32TruncSatF32U_RR,
            Self::I32TruncSatF32U_RS { .. } => crate::OpCode::I32TruncSatF32U_RS,
            Self::I32TruncSatF32U_SR { .. } => crate::OpCode::I32TruncSatF32U_SR,
            Self::I32TruncSatF32U_SS { .. } => crate::OpCode::I32TruncSatF32U_SS,
            Self::I32TruncSatF64S_RR { .. } => crate::OpCode::I32TruncSatF64S_RR,
            Self::I32TruncSatF64S_RS { .. } => crate::OpCode::I32TruncSatF64S_RS,
            Self::I32TruncSatF64S_SR { .. } => crate::OpCode::I32TruncSatF64S_SR,
            Self::I32TruncSatF64S_SS { .. } => crate::OpCode::I32TruncSatF64S_SS,
            Self::I32TruncSatF64U_RR { .. } => crate::OpCode::I32TruncSatF64U_RR,
            Self::I32TruncSatF64U_RS { .. } => crate::OpCode::I32TruncSatF64U_RS,
            Self::I32TruncSatF64U_SR { .. } => crate::OpCode::I32TruncSatF64U_SR,
            Self::I32TruncSatF64U_SS { .. } => crate::OpCode::I32TruncSatF64U_SS,
            Self::I64TruncSatF32S_RR { .. } => crate::OpCode::I64TruncSatF32S_RR,
            Self::I64TruncSatF32S_RS { .. } => crate::OpCode::I64TruncSatF32S_RS,
            Self::I64TruncSatF32S_SR { .. } => crate::OpCode::I64TruncSatF32S_SR,
            Self::I64TruncSatF32S_SS { .. } => crate::OpCode::I64TruncSatF32S_SS,
            Self::I64TruncSatF32U_RR { .. } => crate::OpCode::I64TruncSatF32U_RR,
            Self::I64TruncSatF32U_RS { .. } => crate::OpCode::I64TruncSatF32U_RS,
            Self::I64TruncSatF32U_SR { .. } => crate::OpCode::I64TruncSatF32U_SR,
            Self::I64TruncSatF32U_SS { .. } => crate::OpCode::I64TruncSatF32U_SS,
            Self::I64TruncSatF64S_RR { .. } => crate::OpCode::I64TruncSatF64S_RR,
            Self::I64TruncSatF64S_RS { .. } => crate::OpCode::I64TruncSatF64S_RS,
            Self::I64TruncSatF64S_SR { .. } => crate::OpCode::I64TruncSatF64S_SR,
            Self::I64TruncSatF64S_SS { .. } => crate::OpCode::I64TruncSatF64S_SS,
            Self::I64TruncSatF64U_RR { .. } => crate::OpCode::I64TruncSatF64U_RR,
            Self::I64TruncSatF64U_RS { .. } => crate::OpCode::I64TruncSatF64U_RS,
            Self::I64TruncSatF64U_SR { .. } => crate::OpCode::I64TruncSatF64U_SR,
            Self::I64TruncSatF64U_SS { .. } => crate::OpCode::I64TruncSatF64U_SS,
            Self::I32Extend8S_RR { .. } => crate::OpCode::I32Extend8S_RR,
            Self::I32Extend8S_RS { .. } => crate::OpCode::I32Extend8S_RS,
            Self::I32Extend8S_SR { .. } => crate::OpCode::I32Extend8S_SR,
            Self::I32Extend8S_SS { .. } => crate::OpCode::I32Extend8S_SS,
            Self::I32Extend16S_RR { .. } => crate::OpCode::I32Extend16S_RR,
            Self::I32Extend16S_RS { .. } => crate::OpCode::I32Extend16S_RS,
            Self::I32Extend16S_SR { .. } => crate::OpCode::I32Extend16S_SR,
            Self::I32Extend16S_SS { .. } => crate::OpCode::I32Extend16S_SS,
            Self::I64Extend8S_RR { .. } => crate::OpCode::I64Extend8S_RR,
            Self::I64Extend8S_RS { .. } => crate::OpCode::I64Extend8S_RS,
            Self::I64Extend8S_SR { .. } => crate::OpCode::I64Extend8S_SR,
            Self::I64Extend8S_SS { .. } => crate::OpCode::I64Extend8S_SS,
            Self::I64Extend16S_RR { .. } => crate::OpCode::I64Extend16S_RR,
            Self::I64Extend16S_RS { .. } => crate::OpCode::I64Extend16S_RS,
            Self::I64Extend16S_SR { .. } => crate::OpCode::I64Extend16S_SR,
            Self::I64Extend16S_SS { .. } => crate::OpCode::I64Extend16S_SS,
            Self::I64Extend32S_RR { .. } => crate::OpCode::I64Extend32S_RR,
            Self::I64Extend32S_RS { .. } => crate::OpCode::I64Extend32S_RS,
            Self::I64Extend32S_SR { .. } => crate::OpCode::I64Extend32S_SR,
            Self::I64Extend32S_SS { .. } => crate::OpCode::I64Extend32S_SS,
            Self::I32WrapI64_RR { .. } => crate::OpCode::I32WrapI64_RR,
            Self::I32WrapI64_RS { .. } => crate::OpCode::I32WrapI64_RS,
            Self::I32WrapI64_SR { .. } => crate::OpCode::I32WrapI64_SR,
            Self::I32WrapI64_SS { .. } => crate::OpCode::I32WrapI64_SS,
            Self::I32Add_RRS { .. } => crate::OpCode::I32Add_RRS,
            Self::I32Add_RRI { .. } => crate::OpCode::I32Add_RRI,
            Self::I32Add_RSS { .. } => crate::OpCode::I32Add_RSS,
            Self::I32Add_RSI { .. } => crate::OpCode::I32Add_RSI,
            Self::I32Add_SRS { .. } => crate::OpCode::I32Add_SRS,
            Self::I32Add_SRI { .. } => crate::OpCode::I32Add_SRI,
            Self::I32Add_SSS { .. } => crate::OpCode::I32Add_SSS,
            Self::I32Add_SSI { .. } => crate::OpCode::I32Add_SSI,
            Self::I64Add_RRS { .. } => crate::OpCode::I64Add_RRS,
            Self::I64Add_RRI { .. } => crate::OpCode::I64Add_RRI,
            Self::I64Add_RSS { .. } => crate::OpCode::I64Add_RSS,
            Self::I64Add_RSI { .. } => crate::OpCode::I64Add_RSI,
            Self::I64Add_SRS { .. } => crate::OpCode::I64Add_SRS,
            Self::I64Add_SRI { .. } => crate::OpCode::I64Add_SRI,
            Self::I64Add_SSS { .. } => crate::OpCode::I64Add_SSS,
            Self::I64Add_SSI { .. } => crate::OpCode::I64Add_SSI,
            Self::I32Mul_RRS { .. } => crate::OpCode::I32Mul_RRS,
            Self::I32Mul_RRI { .. } => crate::OpCode::I32Mul_RRI,
            Self::I32Mul_RSS { .. } => crate::OpCode::I32Mul_RSS,
            Self::I32Mul_RSI { .. } => crate::OpCode::I32Mul_RSI,
            Self::I32Mul_SRS { .. } => crate::OpCode::I32Mul_SRS,
            Self::I32Mul_SRI { .. } => crate::OpCode::I32Mul_SRI,
            Self::I32Mul_SSS { .. } => crate::OpCode::I32Mul_SSS,
            Self::I32Mul_SSI { .. } => crate::OpCode::I32Mul_SSI,
            Self::I64Mul_RRS { .. } => crate::OpCode::I64Mul_RRS,
            Self::I64Mul_RRI { .. } => crate::OpCode::I64Mul_RRI,
            Self::I64Mul_RSS { .. } => crate::OpCode::I64Mul_RSS,
            Self::I64Mul_RSI { .. } => crate::OpCode::I64Mul_RSI,
            Self::I64Mul_SRS { .. } => crate::OpCode::I64Mul_SRS,
            Self::I64Mul_SRI { .. } => crate::OpCode::I64Mul_SRI,
            Self::I64Mul_SSS { .. } => crate::OpCode::I64Mul_SSS,
            Self::I64Mul_SSI { .. } => crate::OpCode::I64Mul_SSI,
            Self::I32And_RRS { .. } => crate::OpCode::I32And_RRS,
            Self::I32And_RRI { .. } => crate::OpCode::I32And_RRI,
            Self::I32And_RSS { .. } => crate::OpCode::I32And_RSS,
            Self::I32And_RSI { .. } => crate::OpCode::I32And_RSI,
            Self::I32And_SRS { .. } => crate::OpCode::I32And_SRS,
            Self::I32And_SRI { .. } => crate::OpCode::I32And_SRI,
            Self::I32And_SSS { .. } => crate::OpCode::I32And_SSS,
            Self::I32And_SSI { .. } => crate::OpCode::I32And_SSI,
            Self::I64And_RRS { .. } => crate::OpCode::I64And_RRS,
            Self::I64And_RRI { .. } => crate::OpCode::I64And_RRI,
            Self::I64And_RSS { .. } => crate::OpCode::I64And_RSS,
            Self::I64And_RSI { .. } => crate::OpCode::I64And_RSI,
            Self::I64And_SRS { .. } => crate::OpCode::I64And_SRS,
            Self::I64And_SRI { .. } => crate::OpCode::I64And_SRI,
            Self::I64And_SSS { .. } => crate::OpCode::I64And_SSS,
            Self::I64And_SSI { .. } => crate::OpCode::I64And_SSI,
            Self::I32Or_RRS { .. } => crate::OpCode::I32Or_RRS,
            Self::I32Or_RRI { .. } => crate::OpCode::I32Or_RRI,
            Self::I32Or_RSS { .. } => crate::OpCode::I32Or_RSS,
            Self::I32Or_RSI { .. } => crate::OpCode::I32Or_RSI,
            Self::I32Or_SRS { .. } => crate::OpCode::I32Or_SRS,
            Self::I32Or_SRI { .. } => crate::OpCode::I32Or_SRI,
            Self::I32Or_SSS { .. } => crate::OpCode::I32Or_SSS,
            Self::I32Or_SSI { .. } => crate::OpCode::I32Or_SSI,
            Self::I64Or_RRS { .. } => crate::OpCode::I64Or_RRS,
            Self::I64Or_RRI { .. } => crate::OpCode::I64Or_RRI,
            Self::I64Or_RSS { .. } => crate::OpCode::I64Or_RSS,
            Self::I64Or_RSI { .. } => crate::OpCode::I64Or_RSI,
            Self::I64Or_SRS { .. } => crate::OpCode::I64Or_SRS,
            Self::I64Or_SRI { .. } => crate::OpCode::I64Or_SRI,
            Self::I64Or_SSS { .. } => crate::OpCode::I64Or_SSS,
            Self::I64Or_SSI { .. } => crate::OpCode::I64Or_SSI,
            Self::I32Xor_RRS { .. } => crate::OpCode::I32Xor_RRS,
            Self::I32Xor_RRI { .. } => crate::OpCode::I32Xor_RRI,
            Self::I32Xor_RSS { .. } => crate::OpCode::I32Xor_RSS,
            Self::I32Xor_RSI { .. } => crate::OpCode::I32Xor_RSI,
            Self::I32Xor_SRS { .. } => crate::OpCode::I32Xor_SRS,
            Self::I32Xor_SRI { .. } => crate::OpCode::I32Xor_SRI,
            Self::I32Xor_SSS { .. } => crate::OpCode::I32Xor_SSS,
            Self::I32Xor_SSI { .. } => crate::OpCode::I32Xor_SSI,
            Self::I64Xor_RRS { .. } => crate::OpCode::I64Xor_RRS,
            Self::I64Xor_RRI { .. } => crate::OpCode::I64Xor_RRI,
            Self::I64Xor_RSS { .. } => crate::OpCode::I64Xor_RSS,
            Self::I64Xor_RSI { .. } => crate::OpCode::I64Xor_RSI,
            Self::I64Xor_SRS { .. } => crate::OpCode::I64Xor_SRS,
            Self::I64Xor_SRI { .. } => crate::OpCode::I64Xor_SRI,
            Self::I64Xor_SSS { .. } => crate::OpCode::I64Xor_SSS,
            Self::I64Xor_SSI { .. } => crate::OpCode::I64Xor_SSI,
            Self::I32Eq_RRS { .. } => crate::OpCode::I32Eq_RRS,
            Self::I32Eq_RRI { .. } => crate::OpCode::I32Eq_RRI,
            Self::I32Eq_RSS { .. } => crate::OpCode::I32Eq_RSS,
            Self::I32Eq_RSI { .. } => crate::OpCode::I32Eq_RSI,
            Self::I32Eq_SRS { .. } => crate::OpCode::I32Eq_SRS,
            Self::I32Eq_SRI { .. } => crate::OpCode::I32Eq_SRI,
            Self::I32Eq_SSS { .. } => crate::OpCode::I32Eq_SSS,
            Self::I32Eq_SSI { .. } => crate::OpCode::I32Eq_SSI,
            Self::I64Eq_RRS { .. } => crate::OpCode::I64Eq_RRS,
            Self::I64Eq_RRI { .. } => crate::OpCode::I64Eq_RRI,
            Self::I64Eq_RSS { .. } => crate::OpCode::I64Eq_RSS,
            Self::I64Eq_RSI { .. } => crate::OpCode::I64Eq_RSI,
            Self::I64Eq_SRS { .. } => crate::OpCode::I64Eq_SRS,
            Self::I64Eq_SRI { .. } => crate::OpCode::I64Eq_SRI,
            Self::I64Eq_SSS { .. } => crate::OpCode::I64Eq_SSS,
            Self::I64Eq_SSI { .. } => crate::OpCode::I64Eq_SSI,
            Self::I32Ne_RRS { .. } => crate::OpCode::I32Ne_RRS,
            Self::I32Ne_RRI { .. } => crate::OpCode::I32Ne_RRI,
            Self::I32Ne_RSS { .. } => crate::OpCode::I32Ne_RSS,
            Self::I32Ne_RSI { .. } => crate::OpCode::I32Ne_RSI,
            Self::I32Ne_SRS { .. } => crate::OpCode::I32Ne_SRS,
            Self::I32Ne_SRI { .. } => crate::OpCode::I32Ne_SRI,
            Self::I32Ne_SSS { .. } => crate::OpCode::I32Ne_SSS,
            Self::I32Ne_SSI { .. } => crate::OpCode::I32Ne_SSI,
            Self::I64Ne_RRS { .. } => crate::OpCode::I64Ne_RRS,
            Self::I64Ne_RRI { .. } => crate::OpCode::I64Ne_RRI,
            Self::I64Ne_RSS { .. } => crate::OpCode::I64Ne_RSS,
            Self::I64Ne_RSI { .. } => crate::OpCode::I64Ne_RSI,
            Self::I64Ne_SRS { .. } => crate::OpCode::I64Ne_SRS,
            Self::I64Ne_SRI { .. } => crate::OpCode::I64Ne_SRI,
            Self::I64Ne_SSS { .. } => crate::OpCode::I64Ne_SSS,
            Self::I64Ne_SSI { .. } => crate::OpCode::I64Ne_SSI,
            Self::F32Add_RRS { .. } => crate::OpCode::F32Add_RRS,
            Self::F32Add_RRI { .. } => crate::OpCode::F32Add_RRI,
            Self::F32Add_RSS { .. } => crate::OpCode::F32Add_RSS,
            Self::F32Add_RSI { .. } => crate::OpCode::F32Add_RSI,
            Self::F32Add_SRS { .. } => crate::OpCode::F32Add_SRS,
            Self::F32Add_SRI { .. } => crate::OpCode::F32Add_SRI,
            Self::F32Add_SSS { .. } => crate::OpCode::F32Add_SSS,
            Self::F32Add_SSI { .. } => crate::OpCode::F32Add_SSI,
            Self::F64Add_RRS { .. } => crate::OpCode::F64Add_RRS,
            Self::F64Add_RRI { .. } => crate::OpCode::F64Add_RRI,
            Self::F64Add_RSS { .. } => crate::OpCode::F64Add_RSS,
            Self::F64Add_RSI { .. } => crate::OpCode::F64Add_RSI,
            Self::F64Add_SRS { .. } => crate::OpCode::F64Add_SRS,
            Self::F64Add_SRI { .. } => crate::OpCode::F64Add_SRI,
            Self::F64Add_SSS { .. } => crate::OpCode::F64Add_SSS,
            Self::F64Add_SSI { .. } => crate::OpCode::F64Add_SSI,
            Self::F32Mul_RRS { .. } => crate::OpCode::F32Mul_RRS,
            Self::F32Mul_RRI { .. } => crate::OpCode::F32Mul_RRI,
            Self::F32Mul_RSS { .. } => crate::OpCode::F32Mul_RSS,
            Self::F32Mul_RSI { .. } => crate::OpCode::F32Mul_RSI,
            Self::F32Mul_SRS { .. } => crate::OpCode::F32Mul_SRS,
            Self::F32Mul_SRI { .. } => crate::OpCode::F32Mul_SRI,
            Self::F32Mul_SSS { .. } => crate::OpCode::F32Mul_SSS,
            Self::F32Mul_SSI { .. } => crate::OpCode::F32Mul_SSI,
            Self::F64Mul_RRS { .. } => crate::OpCode::F64Mul_RRS,
            Self::F64Mul_RRI { .. } => crate::OpCode::F64Mul_RRI,
            Self::F64Mul_RSS { .. } => crate::OpCode::F64Mul_RSS,
            Self::F64Mul_RSI { .. } => crate::OpCode::F64Mul_RSI,
            Self::F64Mul_SRS { .. } => crate::OpCode::F64Mul_SRS,
            Self::F64Mul_SRI { .. } => crate::OpCode::F64Mul_SRI,
            Self::F64Mul_SSS { .. } => crate::OpCode::F64Mul_SSS,
            Self::F64Mul_SSI { .. } => crate::OpCode::F64Mul_SSI,
            Self::F32Eq_RRS { .. } => crate::OpCode::F32Eq_RRS,
            Self::F32Eq_RRI { .. } => crate::OpCode::F32Eq_RRI,
            Self::F32Eq_RSS { .. } => crate::OpCode::F32Eq_RSS,
            Self::F32Eq_RSI { .. } => crate::OpCode::F32Eq_RSI,
            Self::F32Eq_SRS { .. } => crate::OpCode::F32Eq_SRS,
            Self::F32Eq_SRI { .. } => crate::OpCode::F32Eq_SRI,
            Self::F32Eq_SSS { .. } => crate::OpCode::F32Eq_SSS,
            Self::F32Eq_SSI { .. } => crate::OpCode::F32Eq_SSI,
            Self::F64Eq_RRS { .. } => crate::OpCode::F64Eq_RRS,
            Self::F64Eq_RRI { .. } => crate::OpCode::F64Eq_RRI,
            Self::F64Eq_RSS { .. } => crate::OpCode::F64Eq_RSS,
            Self::F64Eq_RSI { .. } => crate::OpCode::F64Eq_RSI,
            Self::F64Eq_SRS { .. } => crate::OpCode::F64Eq_SRS,
            Self::F64Eq_SRI { .. } => crate::OpCode::F64Eq_SRI,
            Self::F64Eq_SSS { .. } => crate::OpCode::F64Eq_SSS,
            Self::F64Eq_SSI { .. } => crate::OpCode::F64Eq_SSI,
            Self::F32Ne_RRS { .. } => crate::OpCode::F32Ne_RRS,
            Self::F32Ne_RRI { .. } => crate::OpCode::F32Ne_RRI,
            Self::F32Ne_RSS { .. } => crate::OpCode::F32Ne_RSS,
            Self::F32Ne_RSI { .. } => crate::OpCode::F32Ne_RSI,
            Self::F32Ne_SRS { .. } => crate::OpCode::F32Ne_SRS,
            Self::F32Ne_SRI { .. } => crate::OpCode::F32Ne_SRI,
            Self::F32Ne_SSS { .. } => crate::OpCode::F32Ne_SSS,
            Self::F32Ne_SSI { .. } => crate::OpCode::F32Ne_SSI,
            Self::F64Ne_RRS { .. } => crate::OpCode::F64Ne_RRS,
            Self::F64Ne_RRI { .. } => crate::OpCode::F64Ne_RRI,
            Self::F64Ne_RSS { .. } => crate::OpCode::F64Ne_RSS,
            Self::F64Ne_RSI { .. } => crate::OpCode::F64Ne_RSI,
            Self::F64Ne_SRS { .. } => crate::OpCode::F64Ne_SRS,
            Self::F64Ne_SRI { .. } => crate::OpCode::F64Ne_SRI,
            Self::F64Ne_SSS { .. } => crate::OpCode::F64Ne_SSS,
            Self::F64Ne_SSI { .. } => crate::OpCode::F64Ne_SSI,
            Self::F32Min_RRS { .. } => crate::OpCode::F32Min_RRS,
            Self::F32Min_RRI { .. } => crate::OpCode::F32Min_RRI,
            Self::F32Min_RSS { .. } => crate::OpCode::F32Min_RSS,
            Self::F32Min_RSI { .. } => crate::OpCode::F32Min_RSI,
            Self::F32Min_SRS { .. } => crate::OpCode::F32Min_SRS,
            Self::F32Min_SRI { .. } => crate::OpCode::F32Min_SRI,
            Self::F32Min_SSS { .. } => crate::OpCode::F32Min_SSS,
            Self::F32Min_SSI { .. } => crate::OpCode::F32Min_SSI,
            Self::F64Min_RRS { .. } => crate::OpCode::F64Min_RRS,
            Self::F64Min_RRI { .. } => crate::OpCode::F64Min_RRI,
            Self::F64Min_RSS { .. } => crate::OpCode::F64Min_RSS,
            Self::F64Min_RSI { .. } => crate::OpCode::F64Min_RSI,
            Self::F64Min_SRS { .. } => crate::OpCode::F64Min_SRS,
            Self::F64Min_SRI { .. } => crate::OpCode::F64Min_SRI,
            Self::F64Min_SSS { .. } => crate::OpCode::F64Min_SSS,
            Self::F64Min_SSI { .. } => crate::OpCode::F64Min_SSI,
            Self::F32Max_RRS { .. } => crate::OpCode::F32Max_RRS,
            Self::F32Max_RRI { .. } => crate::OpCode::F32Max_RRI,
            Self::F32Max_RSS { .. } => crate::OpCode::F32Max_RSS,
            Self::F32Max_RSI { .. } => crate::OpCode::F32Max_RSI,
            Self::F32Max_SRS { .. } => crate::OpCode::F32Max_SRS,
            Self::F32Max_SRI { .. } => crate::OpCode::F32Max_SRI,
            Self::F32Max_SSS { .. } => crate::OpCode::F32Max_SSS,
            Self::F32Max_SSI { .. } => crate::OpCode::F32Max_SSI,
            Self::F64Max_RRS { .. } => crate::OpCode::F64Max_RRS,
            Self::F64Max_RRI { .. } => crate::OpCode::F64Max_RRI,
            Self::F64Max_RSS { .. } => crate::OpCode::F64Max_RSS,
            Self::F64Max_RSI { .. } => crate::OpCode::F64Max_RSI,
            Self::F64Max_SRS { .. } => crate::OpCode::F64Max_SRS,
            Self::F64Max_SRI { .. } => crate::OpCode::F64Max_SRI,
            Self::F64Max_SSS { .. } => crate::OpCode::F64Max_SSS,
            Self::F64Max_SSI { .. } => crate::OpCode::F64Max_SSI,
            Self::I32Sub_RRS { .. } => crate::OpCode::I32Sub_RRS,
            Self::I32Sub_RRI { .. } => crate::OpCode::I32Sub_RRI,
            Self::I32Sub_RSR { .. } => crate::OpCode::I32Sub_RSR,
            Self::I32Sub_RSS { .. } => crate::OpCode::I32Sub_RSS,
            Self::I32Sub_RSI { .. } => crate::OpCode::I32Sub_RSI,
            Self::I32Sub_RIR { .. } => crate::OpCode::I32Sub_RIR,
            Self::I32Sub_RIS { .. } => crate::OpCode::I32Sub_RIS,
            Self::I64Sub_RRS { .. } => crate::OpCode::I64Sub_RRS,
            Self::I64Sub_RRI { .. } => crate::OpCode::I64Sub_RRI,
            Self::I64Sub_RSR { .. } => crate::OpCode::I64Sub_RSR,
            Self::I64Sub_RSS { .. } => crate::OpCode::I64Sub_RSS,
            Self::I64Sub_RSI { .. } => crate::OpCode::I64Sub_RSI,
            Self::I64Sub_RIR { .. } => crate::OpCode::I64Sub_RIR,
            Self::I64Sub_RIS { .. } => crate::OpCode::I64Sub_RIS,
            Self::I32LtS_RRS { .. } => crate::OpCode::I32LtS_RRS,
            Self::I32LtS_RRI { .. } => crate::OpCode::I32LtS_RRI,
            Self::I32LtS_RSR { .. } => crate::OpCode::I32LtS_RSR,
            Self::I32LtS_RSS { .. } => crate::OpCode::I32LtS_RSS,
            Self::I32LtS_RSI { .. } => crate::OpCode::I32LtS_RSI,
            Self::I32LtS_RIR { .. } => crate::OpCode::I32LtS_RIR,
            Self::I32LtS_RIS { .. } => crate::OpCode::I32LtS_RIS,
            Self::I64LtS_RRS { .. } => crate::OpCode::I64LtS_RRS,
            Self::I64LtS_RRI { .. } => crate::OpCode::I64LtS_RRI,
            Self::I64LtS_RSR { .. } => crate::OpCode::I64LtS_RSR,
            Self::I64LtS_RSS { .. } => crate::OpCode::I64LtS_RSS,
            Self::I64LtS_RSI { .. } => crate::OpCode::I64LtS_RSI,
            Self::I64LtS_RIR { .. } => crate::OpCode::I64LtS_RIR,
            Self::I64LtS_RIS { .. } => crate::OpCode::I64LtS_RIS,
            Self::I32LtU_RRS { .. } => crate::OpCode::I32LtU_RRS,
            Self::I32LtU_RRI { .. } => crate::OpCode::I32LtU_RRI,
            Self::I32LtU_RSR { .. } => crate::OpCode::I32LtU_RSR,
            Self::I32LtU_RSS { .. } => crate::OpCode::I32LtU_RSS,
            Self::I32LtU_RSI { .. } => crate::OpCode::I32LtU_RSI,
            Self::I32LtU_RIR { .. } => crate::OpCode::I32LtU_RIR,
            Self::I32LtU_RIS { .. } => crate::OpCode::I32LtU_RIS,
            Self::I64LtU_RRS { .. } => crate::OpCode::I64LtU_RRS,
            Self::I64LtU_RRI { .. } => crate::OpCode::I64LtU_RRI,
            Self::I64LtU_RSR { .. } => crate::OpCode::I64LtU_RSR,
            Self::I64LtU_RSS { .. } => crate::OpCode::I64LtU_RSS,
            Self::I64LtU_RSI { .. } => crate::OpCode::I64LtU_RSI,
            Self::I64LtU_RIR { .. } => crate::OpCode::I64LtU_RIR,
            Self::I64LtU_RIS { .. } => crate::OpCode::I64LtU_RIS,
            Self::I32LeS_RRS { .. } => crate::OpCode::I32LeS_RRS,
            Self::I32LeS_RRI { .. } => crate::OpCode::I32LeS_RRI,
            Self::I32LeS_RSR { .. } => crate::OpCode::I32LeS_RSR,
            Self::I32LeS_RSS { .. } => crate::OpCode::I32LeS_RSS,
            Self::I32LeS_RSI { .. } => crate::OpCode::I32LeS_RSI,
            Self::I32LeS_RIR { .. } => crate::OpCode::I32LeS_RIR,
            Self::I32LeS_RIS { .. } => crate::OpCode::I32LeS_RIS,
            Self::I64LeS_RRS { .. } => crate::OpCode::I64LeS_RRS,
            Self::I64LeS_RRI { .. } => crate::OpCode::I64LeS_RRI,
            Self::I64LeS_RSR { .. } => crate::OpCode::I64LeS_RSR,
            Self::I64LeS_RSS { .. } => crate::OpCode::I64LeS_RSS,
            Self::I64LeS_RSI { .. } => crate::OpCode::I64LeS_RSI,
            Self::I64LeS_RIR { .. } => crate::OpCode::I64LeS_RIR,
            Self::I64LeS_RIS { .. } => crate::OpCode::I64LeS_RIS,
            Self::I32LeU_RRS { .. } => crate::OpCode::I32LeU_RRS,
            Self::I32LeU_RRI { .. } => crate::OpCode::I32LeU_RRI,
            Self::I32LeU_RSR { .. } => crate::OpCode::I32LeU_RSR,
            Self::I32LeU_RSS { .. } => crate::OpCode::I32LeU_RSS,
            Self::I32LeU_RSI { .. } => crate::OpCode::I32LeU_RSI,
            Self::I32LeU_RIR { .. } => crate::OpCode::I32LeU_RIR,
            Self::I32LeU_RIS { .. } => crate::OpCode::I32LeU_RIS,
            Self::I64LeU_RRS { .. } => crate::OpCode::I64LeU_RRS,
            Self::I64LeU_RRI { .. } => crate::OpCode::I64LeU_RRI,
            Self::I64LeU_RSR { .. } => crate::OpCode::I64LeU_RSR,
            Self::I64LeU_RSS { .. } => crate::OpCode::I64LeU_RSS,
            Self::I64LeU_RSI { .. } => crate::OpCode::I64LeU_RSI,
            Self::I64LeU_RIR { .. } => crate::OpCode::I64LeU_RIR,
            Self::I64LeU_RIS { .. } => crate::OpCode::I64LeU_RIS,
            Self::I32DivS_RRS { .. } => crate::OpCode::I32DivS_RRS,
            Self::I32DivS_RRI { .. } => crate::OpCode::I32DivS_RRI,
            Self::I32DivS_RSR { .. } => crate::OpCode::I32DivS_RSR,
            Self::I32DivS_RSS { .. } => crate::OpCode::I32DivS_RSS,
            Self::I32DivS_RSI { .. } => crate::OpCode::I32DivS_RSI,
            Self::I32DivS_RIR { .. } => crate::OpCode::I32DivS_RIR,
            Self::I32DivS_RIS { .. } => crate::OpCode::I32DivS_RIS,
            Self::I64DivS_RRS { .. } => crate::OpCode::I64DivS_RRS,
            Self::I64DivS_RRI { .. } => crate::OpCode::I64DivS_RRI,
            Self::I64DivS_RSR { .. } => crate::OpCode::I64DivS_RSR,
            Self::I64DivS_RSS { .. } => crate::OpCode::I64DivS_RSS,
            Self::I64DivS_RSI { .. } => crate::OpCode::I64DivS_RSI,
            Self::I64DivS_RIR { .. } => crate::OpCode::I64DivS_RIR,
            Self::I64DivS_RIS { .. } => crate::OpCode::I64DivS_RIS,
            Self::I32DivU_RRS { .. } => crate::OpCode::I32DivU_RRS,
            Self::I32DivU_RRI { .. } => crate::OpCode::I32DivU_RRI,
            Self::I32DivU_RSR { .. } => crate::OpCode::I32DivU_RSR,
            Self::I32DivU_RSS { .. } => crate::OpCode::I32DivU_RSS,
            Self::I32DivU_RSI { .. } => crate::OpCode::I32DivU_RSI,
            Self::I32DivU_RIR { .. } => crate::OpCode::I32DivU_RIR,
            Self::I32DivU_RIS { .. } => crate::OpCode::I32DivU_RIS,
            Self::I64DivU_RRS { .. } => crate::OpCode::I64DivU_RRS,
            Self::I64DivU_RRI { .. } => crate::OpCode::I64DivU_RRI,
            Self::I64DivU_RSR { .. } => crate::OpCode::I64DivU_RSR,
            Self::I64DivU_RSS { .. } => crate::OpCode::I64DivU_RSS,
            Self::I64DivU_RSI { .. } => crate::OpCode::I64DivU_RSI,
            Self::I64DivU_RIR { .. } => crate::OpCode::I64DivU_RIR,
            Self::I64DivU_RIS { .. } => crate::OpCode::I64DivU_RIS,
            Self::I32RemS_RRS { .. } => crate::OpCode::I32RemS_RRS,
            Self::I32RemS_RRI { .. } => crate::OpCode::I32RemS_RRI,
            Self::I32RemS_RSR { .. } => crate::OpCode::I32RemS_RSR,
            Self::I32RemS_RSS { .. } => crate::OpCode::I32RemS_RSS,
            Self::I32RemS_RSI { .. } => crate::OpCode::I32RemS_RSI,
            Self::I32RemS_RIR { .. } => crate::OpCode::I32RemS_RIR,
            Self::I32RemS_RIS { .. } => crate::OpCode::I32RemS_RIS,
            Self::I64RemS_RRS { .. } => crate::OpCode::I64RemS_RRS,
            Self::I64RemS_RRI { .. } => crate::OpCode::I64RemS_RRI,
            Self::I64RemS_RSR { .. } => crate::OpCode::I64RemS_RSR,
            Self::I64RemS_RSS { .. } => crate::OpCode::I64RemS_RSS,
            Self::I64RemS_RSI { .. } => crate::OpCode::I64RemS_RSI,
            Self::I64RemS_RIR { .. } => crate::OpCode::I64RemS_RIR,
            Self::I64RemS_RIS { .. } => crate::OpCode::I64RemS_RIS,
            Self::I32RemU_RRS { .. } => crate::OpCode::I32RemU_RRS,
            Self::I32RemU_RRI { .. } => crate::OpCode::I32RemU_RRI,
            Self::I32RemU_RSR { .. } => crate::OpCode::I32RemU_RSR,
            Self::I32RemU_RSS { .. } => crate::OpCode::I32RemU_RSS,
            Self::I32RemU_RSI { .. } => crate::OpCode::I32RemU_RSI,
            Self::I32RemU_RIR { .. } => crate::OpCode::I32RemU_RIR,
            Self::I32RemU_RIS { .. } => crate::OpCode::I32RemU_RIS,
            Self::I64RemU_RRS { .. } => crate::OpCode::I64RemU_RRS,
            Self::I64RemU_RRI { .. } => crate::OpCode::I64RemU_RRI,
            Self::I64RemU_RSR { .. } => crate::OpCode::I64RemU_RSR,
            Self::I64RemU_RSS { .. } => crate::OpCode::I64RemU_RSS,
            Self::I64RemU_RSI { .. } => crate::OpCode::I64RemU_RSI,
            Self::I64RemU_RIR { .. } => crate::OpCode::I64RemU_RIR,
            Self::I64RemU_RIS { .. } => crate::OpCode::I64RemU_RIS,
            Self::I32Shl_RRS { .. } => crate::OpCode::I32Shl_RRS,
            Self::I32Shl_RRI { .. } => crate::OpCode::I32Shl_RRI,
            Self::I32Shl_RSR { .. } => crate::OpCode::I32Shl_RSR,
            Self::I32Shl_RSS { .. } => crate::OpCode::I32Shl_RSS,
            Self::I32Shl_RSI { .. } => crate::OpCode::I32Shl_RSI,
            Self::I32Shl_RIR { .. } => crate::OpCode::I32Shl_RIR,
            Self::I32Shl_RIS { .. } => crate::OpCode::I32Shl_RIS,
            Self::I64Shl_RRS { .. } => crate::OpCode::I64Shl_RRS,
            Self::I64Shl_RRI { .. } => crate::OpCode::I64Shl_RRI,
            Self::I64Shl_RSR { .. } => crate::OpCode::I64Shl_RSR,
            Self::I64Shl_RSS { .. } => crate::OpCode::I64Shl_RSS,
            Self::I64Shl_RSI { .. } => crate::OpCode::I64Shl_RSI,
            Self::I64Shl_RIR { .. } => crate::OpCode::I64Shl_RIR,
            Self::I64Shl_RIS { .. } => crate::OpCode::I64Shl_RIS,
            Self::I32ShrS_RRS { .. } => crate::OpCode::I32ShrS_RRS,
            Self::I32ShrS_RRI { .. } => crate::OpCode::I32ShrS_RRI,
            Self::I32ShrS_RSR { .. } => crate::OpCode::I32ShrS_RSR,
            Self::I32ShrS_RSS { .. } => crate::OpCode::I32ShrS_RSS,
            Self::I32ShrS_RSI { .. } => crate::OpCode::I32ShrS_RSI,
            Self::I32ShrS_RIR { .. } => crate::OpCode::I32ShrS_RIR,
            Self::I32ShrS_RIS { .. } => crate::OpCode::I32ShrS_RIS,
            Self::I64ShrS_RRS { .. } => crate::OpCode::I64ShrS_RRS,
            Self::I64ShrS_RRI { .. } => crate::OpCode::I64ShrS_RRI,
            Self::I64ShrS_RSR { .. } => crate::OpCode::I64ShrS_RSR,
            Self::I64ShrS_RSS { .. } => crate::OpCode::I64ShrS_RSS,
            Self::I64ShrS_RSI { .. } => crate::OpCode::I64ShrS_RSI,
            Self::I64ShrS_RIR { .. } => crate::OpCode::I64ShrS_RIR,
            Self::I64ShrS_RIS { .. } => crate::OpCode::I64ShrS_RIS,
            Self::I32ShrU_RRS { .. } => crate::OpCode::I32ShrU_RRS,
            Self::I32ShrU_RRI { .. } => crate::OpCode::I32ShrU_RRI,
            Self::I32ShrU_RSR { .. } => crate::OpCode::I32ShrU_RSR,
            Self::I32ShrU_RSS { .. } => crate::OpCode::I32ShrU_RSS,
            Self::I32ShrU_RSI { .. } => crate::OpCode::I32ShrU_RSI,
            Self::I32ShrU_RIR { .. } => crate::OpCode::I32ShrU_RIR,
            Self::I32ShrU_RIS { .. } => crate::OpCode::I32ShrU_RIS,
            Self::I64ShrU_RRS { .. } => crate::OpCode::I64ShrU_RRS,
            Self::I64ShrU_RRI { .. } => crate::OpCode::I64ShrU_RRI,
            Self::I64ShrU_RSR { .. } => crate::OpCode::I64ShrU_RSR,
            Self::I64ShrU_RSS { .. } => crate::OpCode::I64ShrU_RSS,
            Self::I64ShrU_RSI { .. } => crate::OpCode::I64ShrU_RSI,
            Self::I64ShrU_RIR { .. } => crate::OpCode::I64ShrU_RIR,
            Self::I64ShrU_RIS { .. } => crate::OpCode::I64ShrU_RIS,
            Self::I32Rotl_RRS { .. } => crate::OpCode::I32Rotl_RRS,
            Self::I32Rotl_RRI { .. } => crate::OpCode::I32Rotl_RRI,
            Self::I32Rotl_RSR { .. } => crate::OpCode::I32Rotl_RSR,
            Self::I32Rotl_RSS { .. } => crate::OpCode::I32Rotl_RSS,
            Self::I32Rotl_RSI { .. } => crate::OpCode::I32Rotl_RSI,
            Self::I32Rotl_RIR { .. } => crate::OpCode::I32Rotl_RIR,
            Self::I32Rotl_RIS { .. } => crate::OpCode::I32Rotl_RIS,
            Self::I64Rotl_RRS { .. } => crate::OpCode::I64Rotl_RRS,
            Self::I64Rotl_RRI { .. } => crate::OpCode::I64Rotl_RRI,
            Self::I64Rotl_RSR { .. } => crate::OpCode::I64Rotl_RSR,
            Self::I64Rotl_RSS { .. } => crate::OpCode::I64Rotl_RSS,
            Self::I64Rotl_RSI { .. } => crate::OpCode::I64Rotl_RSI,
            Self::I64Rotl_RIR { .. } => crate::OpCode::I64Rotl_RIR,
            Self::I64Rotl_RIS { .. } => crate::OpCode::I64Rotl_RIS,
            Self::I32Rotr_RRS { .. } => crate::OpCode::I32Rotr_RRS,
            Self::I32Rotr_RRI { .. } => crate::OpCode::I32Rotr_RRI,
            Self::I32Rotr_RSR { .. } => crate::OpCode::I32Rotr_RSR,
            Self::I32Rotr_RSS { .. } => crate::OpCode::I32Rotr_RSS,
            Self::I32Rotr_RSI { .. } => crate::OpCode::I32Rotr_RSI,
            Self::I32Rotr_RIR { .. } => crate::OpCode::I32Rotr_RIR,
            Self::I32Rotr_RIS { .. } => crate::OpCode::I32Rotr_RIS,
            Self::I64Rotr_RRS { .. } => crate::OpCode::I64Rotr_RRS,
            Self::I64Rotr_RRI { .. } => crate::OpCode::I64Rotr_RRI,
            Self::I64Rotr_RSR { .. } => crate::OpCode::I64Rotr_RSR,
            Self::I64Rotr_RSS { .. } => crate::OpCode::I64Rotr_RSS,
            Self::I64Rotr_RSI { .. } => crate::OpCode::I64Rotr_RSI,
            Self::I64Rotr_RIR { .. } => crate::OpCode::I64Rotr_RIR,
            Self::I64Rotr_RIS { .. } => crate::OpCode::I64Rotr_RIS,
            Self::F32Sub_RRS { .. } => crate::OpCode::F32Sub_RRS,
            Self::F32Sub_RRI { .. } => crate::OpCode::F32Sub_RRI,
            Self::F32Sub_RSR { .. } => crate::OpCode::F32Sub_RSR,
            Self::F32Sub_RSS { .. } => crate::OpCode::F32Sub_RSS,
            Self::F32Sub_RSI { .. } => crate::OpCode::F32Sub_RSI,
            Self::F32Sub_RIR { .. } => crate::OpCode::F32Sub_RIR,
            Self::F32Sub_RIS { .. } => crate::OpCode::F32Sub_RIS,
            Self::F64Sub_RRS { .. } => crate::OpCode::F64Sub_RRS,
            Self::F64Sub_RRI { .. } => crate::OpCode::F64Sub_RRI,
            Self::F64Sub_RSR { .. } => crate::OpCode::F64Sub_RSR,
            Self::F64Sub_RSS { .. } => crate::OpCode::F64Sub_RSS,
            Self::F64Sub_RSI { .. } => crate::OpCode::F64Sub_RSI,
            Self::F64Sub_RIR { .. } => crate::OpCode::F64Sub_RIR,
            Self::F64Sub_RIS { .. } => crate::OpCode::F64Sub_RIS,
            Self::F32Div_RRS { .. } => crate::OpCode::F32Div_RRS,
            Self::F32Div_RRI { .. } => crate::OpCode::F32Div_RRI,
            Self::F32Div_RSR { .. } => crate::OpCode::F32Div_RSR,
            Self::F32Div_RSS { .. } => crate::OpCode::F32Div_RSS,
            Self::F32Div_RSI { .. } => crate::OpCode::F32Div_RSI,
            Self::F32Div_RIR { .. } => crate::OpCode::F32Div_RIR,
            Self::F32Div_RIS { .. } => crate::OpCode::F32Div_RIS,
            Self::F64Div_RRS { .. } => crate::OpCode::F64Div_RRS,
            Self::F64Div_RRI { .. } => crate::OpCode::F64Div_RRI,
            Self::F64Div_RSR { .. } => crate::OpCode::F64Div_RSR,
            Self::F64Div_RSS { .. } => crate::OpCode::F64Div_RSS,
            Self::F64Div_RSI { .. } => crate::OpCode::F64Div_RSI,
            Self::F64Div_RIR { .. } => crate::OpCode::F64Div_RIR,
            Self::F64Div_RIS { .. } => crate::OpCode::F64Div_RIS,
            Self::F32Copysign_RRS { .. } => crate::OpCode::F32Copysign_RRS,
            Self::F32Copysign_RRI { .. } => crate::OpCode::F32Copysign_RRI,
            Self::F32Copysign_RSR { .. } => crate::OpCode::F32Copysign_RSR,
            Self::F32Copysign_RSS { .. } => crate::OpCode::F32Copysign_RSS,
            Self::F32Copysign_RSI { .. } => crate::OpCode::F32Copysign_RSI,
            Self::F32Copysign_RIR { .. } => crate::OpCode::F32Copysign_RIR,
            Self::F32Copysign_RIS { .. } => crate::OpCode::F32Copysign_RIS,
            Self::F64Copysign_RRS { .. } => crate::OpCode::F64Copysign_RRS,
            Self::F64Copysign_RRI { .. } => crate::OpCode::F64Copysign_RRI,
            Self::F64Copysign_RSR { .. } => crate::OpCode::F64Copysign_RSR,
            Self::F64Copysign_RSS { .. } => crate::OpCode::F64Copysign_RSS,
            Self::F64Copysign_RSI { .. } => crate::OpCode::F64Copysign_RSI,
            Self::F64Copysign_RIR { .. } => crate::OpCode::F64Copysign_RIR,
            Self::F64Copysign_RIS { .. } => crate::OpCode::F64Copysign_RIS,
            Self::I32Load_RR { .. } => crate::OpCode::I32Load_RR,
            Self::I32Load_RS { .. } => crate::OpCode::I32Load_RS,
            Self::I32Load_RI { .. } => crate::OpCode::I32Load_RI,
            Self::I32LoadMem0_RR { .. } => crate::OpCode::I32LoadMem0_RR,
            Self::I32LoadMem0_RS { .. } => crate::OpCode::I32LoadMem0_RS,
            Self::I32LoadMem0_RI { .. } => crate::OpCode::I32LoadMem0_RI,
            Self::I32LoadMem0_SR { .. } => crate::OpCode::I32LoadMem0_SR,
            Self::I32LoadMem0_SS { .. } => crate::OpCode::I32LoadMem0_SS,
            Self::I32LoadMem0_SI { .. } => crate::OpCode::I32LoadMem0_SI,
            Self::I64Load_RR { .. } => crate::OpCode::I64Load_RR,
            Self::I64Load_RS { .. } => crate::OpCode::I64Load_RS,
            Self::I64Load_RI { .. } => crate::OpCode::I64Load_RI,
            Self::I64LoadMem0_RR { .. } => crate::OpCode::I64LoadMem0_RR,
            Self::I64LoadMem0_RS { .. } => crate::OpCode::I64LoadMem0_RS,
            Self::I64LoadMem0_RI { .. } => crate::OpCode::I64LoadMem0_RI,
            Self::I64LoadMem0_SR { .. } => crate::OpCode::I64LoadMem0_SR,
            Self::I64LoadMem0_SS { .. } => crate::OpCode::I64LoadMem0_SS,
            Self::I64LoadMem0_SI { .. } => crate::OpCode::I64LoadMem0_SI,
            Self::F32Load_RR { .. } => crate::OpCode::F32Load_RR,
            Self::F32Load_RS { .. } => crate::OpCode::F32Load_RS,
            Self::F32Load_RI { .. } => crate::OpCode::F32Load_RI,
            Self::F32LoadMem0_RR { .. } => crate::OpCode::F32LoadMem0_RR,
            Self::F32LoadMem0_RS { .. } => crate::OpCode::F32LoadMem0_RS,
            Self::F32LoadMem0_RI { .. } => crate::OpCode::F32LoadMem0_RI,
            Self::F32LoadMem0_SR { .. } => crate::OpCode::F32LoadMem0_SR,
            Self::F32LoadMem0_SS { .. } => crate::OpCode::F32LoadMem0_SS,
            Self::F32LoadMem0_SI { .. } => crate::OpCode::F32LoadMem0_SI,
            Self::F64Load_RR { .. } => crate::OpCode::F64Load_RR,
            Self::F64Load_RS { .. } => crate::OpCode::F64Load_RS,
            Self::F64Load_RI { .. } => crate::OpCode::F64Load_RI,
            Self::F64LoadMem0_RR { .. } => crate::OpCode::F64LoadMem0_RR,
            Self::F64LoadMem0_RS { .. } => crate::OpCode::F64LoadMem0_RS,
            Self::F64LoadMem0_RI { .. } => crate::OpCode::F64LoadMem0_RI,
            Self::F64LoadMem0_SR { .. } => crate::OpCode::F64LoadMem0_SR,
            Self::F64LoadMem0_SS { .. } => crate::OpCode::F64LoadMem0_SS,
            Self::F64LoadMem0_SI { .. } => crate::OpCode::F64LoadMem0_SI,
            Self::I32Load8S_RR { .. } => crate::OpCode::I32Load8S_RR,
            Self::I32Load8S_RS { .. } => crate::OpCode::I32Load8S_RS,
            Self::I32Load8S_RI { .. } => crate::OpCode::I32Load8S_RI,
            Self::I32Load8SMem0_RR { .. } => crate::OpCode::I32Load8SMem0_RR,
            Self::I32Load8SMem0_RS { .. } => crate::OpCode::I32Load8SMem0_RS,
            Self::I32Load8SMem0_RI { .. } => crate::OpCode::I32Load8SMem0_RI,
            Self::I32Load8SMem0_SR { .. } => crate::OpCode::I32Load8SMem0_SR,
            Self::I32Load8SMem0_SS { .. } => crate::OpCode::I32Load8SMem0_SS,
            Self::I32Load8SMem0_SI { .. } => crate::OpCode::I32Load8SMem0_SI,
            Self::I64Load8S_RR { .. } => crate::OpCode::I64Load8S_RR,
            Self::I64Load8S_RS { .. } => crate::OpCode::I64Load8S_RS,
            Self::I64Load8S_RI { .. } => crate::OpCode::I64Load8S_RI,
            Self::I64Load8SMem0_RR { .. } => crate::OpCode::I64Load8SMem0_RR,
            Self::I64Load8SMem0_RS { .. } => crate::OpCode::I64Load8SMem0_RS,
            Self::I64Load8SMem0_RI { .. } => crate::OpCode::I64Load8SMem0_RI,
            Self::I64Load8SMem0_SR { .. } => crate::OpCode::I64Load8SMem0_SR,
            Self::I64Load8SMem0_SS { .. } => crate::OpCode::I64Load8SMem0_SS,
            Self::I64Load8SMem0_SI { .. } => crate::OpCode::I64Load8SMem0_SI,
            Self::I32Load8U_RR { .. } => crate::OpCode::I32Load8U_RR,
            Self::I32Load8U_RS { .. } => crate::OpCode::I32Load8U_RS,
            Self::I32Load8U_RI { .. } => crate::OpCode::I32Load8U_RI,
            Self::I32Load8UMem0_RR { .. } => crate::OpCode::I32Load8UMem0_RR,
            Self::I32Load8UMem0_RS { .. } => crate::OpCode::I32Load8UMem0_RS,
            Self::I32Load8UMem0_RI { .. } => crate::OpCode::I32Load8UMem0_RI,
            Self::I32Load8UMem0_SR { .. } => crate::OpCode::I32Load8UMem0_SR,
            Self::I32Load8UMem0_SS { .. } => crate::OpCode::I32Load8UMem0_SS,
            Self::I32Load8UMem0_SI { .. } => crate::OpCode::I32Load8UMem0_SI,
            Self::I64Load8U_RR { .. } => crate::OpCode::I64Load8U_RR,
            Self::I64Load8U_RS { .. } => crate::OpCode::I64Load8U_RS,
            Self::I64Load8U_RI { .. } => crate::OpCode::I64Load8U_RI,
            Self::I64Load8UMem0_RR { .. } => crate::OpCode::I64Load8UMem0_RR,
            Self::I64Load8UMem0_RS { .. } => crate::OpCode::I64Load8UMem0_RS,
            Self::I64Load8UMem0_RI { .. } => crate::OpCode::I64Load8UMem0_RI,
            Self::I64Load8UMem0_SR { .. } => crate::OpCode::I64Load8UMem0_SR,
            Self::I64Load8UMem0_SS { .. } => crate::OpCode::I64Load8UMem0_SS,
            Self::I64Load8UMem0_SI { .. } => crate::OpCode::I64Load8UMem0_SI,
            Self::I32Load16S_RR { .. } => crate::OpCode::I32Load16S_RR,
            Self::I32Load16S_RS { .. } => crate::OpCode::I32Load16S_RS,
            Self::I32Load16S_RI { .. } => crate::OpCode::I32Load16S_RI,
            Self::I32Load16SMem0_RR { .. } => crate::OpCode::I32Load16SMem0_RR,
            Self::I32Load16SMem0_RS { .. } => crate::OpCode::I32Load16SMem0_RS,
            Self::I32Load16SMem0_RI { .. } => crate::OpCode::I32Load16SMem0_RI,
            Self::I32Load16SMem0_SR { .. } => crate::OpCode::I32Load16SMem0_SR,
            Self::I32Load16SMem0_SS { .. } => crate::OpCode::I32Load16SMem0_SS,
            Self::I32Load16SMem0_SI { .. } => crate::OpCode::I32Load16SMem0_SI,
            Self::I64Load16S_RR { .. } => crate::OpCode::I64Load16S_RR,
            Self::I64Load16S_RS { .. } => crate::OpCode::I64Load16S_RS,
            Self::I64Load16S_RI { .. } => crate::OpCode::I64Load16S_RI,
            Self::I64Load16SMem0_RR { .. } => crate::OpCode::I64Load16SMem0_RR,
            Self::I64Load16SMem0_RS { .. } => crate::OpCode::I64Load16SMem0_RS,
            Self::I64Load16SMem0_RI { .. } => crate::OpCode::I64Load16SMem0_RI,
            Self::I64Load16SMem0_SR { .. } => crate::OpCode::I64Load16SMem0_SR,
            Self::I64Load16SMem0_SS { .. } => crate::OpCode::I64Load16SMem0_SS,
            Self::I64Load16SMem0_SI { .. } => crate::OpCode::I64Load16SMem0_SI,
            Self::I32Load16U_RR { .. } => crate::OpCode::I32Load16U_RR,
            Self::I32Load16U_RS { .. } => crate::OpCode::I32Load16U_RS,
            Self::I32Load16U_RI { .. } => crate::OpCode::I32Load16U_RI,
            Self::I32Load16UMem0_RR { .. } => crate::OpCode::I32Load16UMem0_RR,
            Self::I32Load16UMem0_RS { .. } => crate::OpCode::I32Load16UMem0_RS,
            Self::I32Load16UMem0_RI { .. } => crate::OpCode::I32Load16UMem0_RI,
            Self::I32Load16UMem0_SR { .. } => crate::OpCode::I32Load16UMem0_SR,
            Self::I32Load16UMem0_SS { .. } => crate::OpCode::I32Load16UMem0_SS,
            Self::I32Load16UMem0_SI { .. } => crate::OpCode::I32Load16UMem0_SI,
            Self::I64Load16U_RR { .. } => crate::OpCode::I64Load16U_RR,
            Self::I64Load16U_RS { .. } => crate::OpCode::I64Load16U_RS,
            Self::I64Load16U_RI { .. } => crate::OpCode::I64Load16U_RI,
            Self::I64Load16UMem0_RR { .. } => crate::OpCode::I64Load16UMem0_RR,
            Self::I64Load16UMem0_RS { .. } => crate::OpCode::I64Load16UMem0_RS,
            Self::I64Load16UMem0_RI { .. } => crate::OpCode::I64Load16UMem0_RI,
            Self::I64Load16UMem0_SR { .. } => crate::OpCode::I64Load16UMem0_SR,
            Self::I64Load16UMem0_SS { .. } => crate::OpCode::I64Load16UMem0_SS,
            Self::I64Load16UMem0_SI { .. } => crate::OpCode::I64Load16UMem0_SI,
            Self::I64Load32S_RR { .. } => crate::OpCode::I64Load32S_RR,
            Self::I64Load32S_RS { .. } => crate::OpCode::I64Load32S_RS,
            Self::I64Load32S_RI { .. } => crate::OpCode::I64Load32S_RI,
            Self::I64Load32SMem0_RR { .. } => crate::OpCode::I64Load32SMem0_RR,
            Self::I64Load32SMem0_RS { .. } => crate::OpCode::I64Load32SMem0_RS,
            Self::I64Load32SMem0_RI { .. } => crate::OpCode::I64Load32SMem0_RI,
            Self::I64Load32SMem0_SR { .. } => crate::OpCode::I64Load32SMem0_SR,
            Self::I64Load32SMem0_SS { .. } => crate::OpCode::I64Load32SMem0_SS,
            Self::I64Load32SMem0_SI { .. } => crate::OpCode::I64Load32SMem0_SI,
            Self::I64Load32U_RR { .. } => crate::OpCode::I64Load32U_RR,
            Self::I64Load32U_RS { .. } => crate::OpCode::I64Load32U_RS,
            Self::I64Load32U_RI { .. } => crate::OpCode::I64Load32U_RI,
            Self::I64Load32UMem0_RR { .. } => crate::OpCode::I64Load32UMem0_RR,
            Self::I64Load32UMem0_RS { .. } => crate::OpCode::I64Load32UMem0_RS,
            Self::I64Load32UMem0_RI { .. } => crate::OpCode::I64Load32UMem0_RI,
            Self::I64Load32UMem0_SR { .. } => crate::OpCode::I64Load32UMem0_SR,
            Self::I64Load32UMem0_SS { .. } => crate::OpCode::I64Load32UMem0_SS,
            Self::I64Load32UMem0_SI { .. } => crate::OpCode::I64Load32UMem0_SI,
            Self::I32Store_SS { .. } => crate::OpCode::I32Store_SS,
            Self::I32Store_SI { .. } => crate::OpCode::I32Store_SI,
            Self::I32Store_IS { .. } => crate::OpCode::I32Store_IS,
            Self::I32Store_II { .. } => crate::OpCode::I32Store_II,
            Self::I32StoreMem0_RS { .. } => crate::OpCode::I32StoreMem0_RS,
            Self::I32StoreMem0_RI { .. } => crate::OpCode::I32StoreMem0_RI,
            Self::I32StoreMem0_SR { .. } => crate::OpCode::I32StoreMem0_SR,
            Self::I32StoreMem0_SS { .. } => crate::OpCode::I32StoreMem0_SS,
            Self::I32StoreMem0_SI { .. } => crate::OpCode::I32StoreMem0_SI,
            Self::I32StoreMem0_IR { .. } => crate::OpCode::I32StoreMem0_IR,
            Self::I32StoreMem0_IS { .. } => crate::OpCode::I32StoreMem0_IS,
            Self::I32StoreMem0_II { .. } => crate::OpCode::I32StoreMem0_II,
            Self::I64Store_SS { .. } => crate::OpCode::I64Store_SS,
            Self::I64Store_SI { .. } => crate::OpCode::I64Store_SI,
            Self::I64Store_IS { .. } => crate::OpCode::I64Store_IS,
            Self::I64Store_II { .. } => crate::OpCode::I64Store_II,
            Self::I64StoreMem0_RS { .. } => crate::OpCode::I64StoreMem0_RS,
            Self::I64StoreMem0_RI { .. } => crate::OpCode::I64StoreMem0_RI,
            Self::I64StoreMem0_SR { .. } => crate::OpCode::I64StoreMem0_SR,
            Self::I64StoreMem0_SS { .. } => crate::OpCode::I64StoreMem0_SS,
            Self::I64StoreMem0_SI { .. } => crate::OpCode::I64StoreMem0_SI,
            Self::I64StoreMem0_IR { .. } => crate::OpCode::I64StoreMem0_IR,
            Self::I64StoreMem0_IS { .. } => crate::OpCode::I64StoreMem0_IS,
            Self::I64StoreMem0_II { .. } => crate::OpCode::I64StoreMem0_II,
            Self::F32Store_SS { .. } => crate::OpCode::F32Store_SS,
            Self::F32Store_SI { .. } => crate::OpCode::F32Store_SI,
            Self::F32Store_IS { .. } => crate::OpCode::F32Store_IS,
            Self::F32Store_II { .. } => crate::OpCode::F32Store_II,
            Self::F32StoreMem0_RR { .. } => crate::OpCode::F32StoreMem0_RR,
            Self::F32StoreMem0_RS { .. } => crate::OpCode::F32StoreMem0_RS,
            Self::F32StoreMem0_RI { .. } => crate::OpCode::F32StoreMem0_RI,
            Self::F32StoreMem0_SR { .. } => crate::OpCode::F32StoreMem0_SR,
            Self::F32StoreMem0_SS { .. } => crate::OpCode::F32StoreMem0_SS,
            Self::F32StoreMem0_SI { .. } => crate::OpCode::F32StoreMem0_SI,
            Self::F32StoreMem0_IR { .. } => crate::OpCode::F32StoreMem0_IR,
            Self::F32StoreMem0_IS { .. } => crate::OpCode::F32StoreMem0_IS,
            Self::F32StoreMem0_II { .. } => crate::OpCode::F32StoreMem0_II,
            Self::F64Store_SS { .. } => crate::OpCode::F64Store_SS,
            Self::F64Store_SI { .. } => crate::OpCode::F64Store_SI,
            Self::F64Store_IS { .. } => crate::OpCode::F64Store_IS,
            Self::F64Store_II { .. } => crate::OpCode::F64Store_II,
            Self::F64StoreMem0_RR { .. } => crate::OpCode::F64StoreMem0_RR,
            Self::F64StoreMem0_RS { .. } => crate::OpCode::F64StoreMem0_RS,
            Self::F64StoreMem0_RI { .. } => crate::OpCode::F64StoreMem0_RI,
            Self::F64StoreMem0_SR { .. } => crate::OpCode::F64StoreMem0_SR,
            Self::F64StoreMem0_SS { .. } => crate::OpCode::F64StoreMem0_SS,
            Self::F64StoreMem0_SI { .. } => crate::OpCode::F64StoreMem0_SI,
            Self::F64StoreMem0_IR { .. } => crate::OpCode::F64StoreMem0_IR,
            Self::F64StoreMem0_IS { .. } => crate::OpCode::F64StoreMem0_IS,
            Self::F64StoreMem0_II { .. } => crate::OpCode::F64StoreMem0_II,
            Self::I32Store8_SS { .. } => crate::OpCode::I32Store8_SS,
            Self::I32Store8_SI { .. } => crate::OpCode::I32Store8_SI,
            Self::I32Store8_IS { .. } => crate::OpCode::I32Store8_IS,
            Self::I32Store8_II { .. } => crate::OpCode::I32Store8_II,
            Self::I32Store8Mem0_RS { .. } => crate::OpCode::I32Store8Mem0_RS,
            Self::I32Store8Mem0_RI { .. } => crate::OpCode::I32Store8Mem0_RI,
            Self::I32Store8Mem0_SR { .. } => crate::OpCode::I32Store8Mem0_SR,
            Self::I32Store8Mem0_SS { .. } => crate::OpCode::I32Store8Mem0_SS,
            Self::I32Store8Mem0_SI { .. } => crate::OpCode::I32Store8Mem0_SI,
            Self::I32Store8Mem0_IR { .. } => crate::OpCode::I32Store8Mem0_IR,
            Self::I32Store8Mem0_IS { .. } => crate::OpCode::I32Store8Mem0_IS,
            Self::I32Store8Mem0_II { .. } => crate::OpCode::I32Store8Mem0_II,
            Self::I64Store8_SS { .. } => crate::OpCode::I64Store8_SS,
            Self::I64Store8_SI { .. } => crate::OpCode::I64Store8_SI,
            Self::I64Store8_IS { .. } => crate::OpCode::I64Store8_IS,
            Self::I64Store8_II { .. } => crate::OpCode::I64Store8_II,
            Self::I64Store8Mem0_RS { .. } => crate::OpCode::I64Store8Mem0_RS,
            Self::I64Store8Mem0_RI { .. } => crate::OpCode::I64Store8Mem0_RI,
            Self::I64Store8Mem0_SR { .. } => crate::OpCode::I64Store8Mem0_SR,
            Self::I64Store8Mem0_SS { .. } => crate::OpCode::I64Store8Mem0_SS,
            Self::I64Store8Mem0_SI { .. } => crate::OpCode::I64Store8Mem0_SI,
            Self::I64Store8Mem0_IR { .. } => crate::OpCode::I64Store8Mem0_IR,
            Self::I64Store8Mem0_IS { .. } => crate::OpCode::I64Store8Mem0_IS,
            Self::I64Store8Mem0_II { .. } => crate::OpCode::I64Store8Mem0_II,
            Self::I32Store16_SS { .. } => crate::OpCode::I32Store16_SS,
            Self::I32Store16_SI { .. } => crate::OpCode::I32Store16_SI,
            Self::I32Store16_IS { .. } => crate::OpCode::I32Store16_IS,
            Self::I32Store16_II { .. } => crate::OpCode::I32Store16_II,
            Self::I32Store16Mem0_RS { .. } => crate::OpCode::I32Store16Mem0_RS,
            Self::I32Store16Mem0_RI { .. } => crate::OpCode::I32Store16Mem0_RI,
            Self::I32Store16Mem0_SR { .. } => crate::OpCode::I32Store16Mem0_SR,
            Self::I32Store16Mem0_SS { .. } => crate::OpCode::I32Store16Mem0_SS,
            Self::I32Store16Mem0_SI { .. } => crate::OpCode::I32Store16Mem0_SI,
            Self::I32Store16Mem0_IR { .. } => crate::OpCode::I32Store16Mem0_IR,
            Self::I32Store16Mem0_IS { .. } => crate::OpCode::I32Store16Mem0_IS,
            Self::I32Store16Mem0_II { .. } => crate::OpCode::I32Store16Mem0_II,
            Self::I64Store16_SS { .. } => crate::OpCode::I64Store16_SS,
            Self::I64Store16_SI { .. } => crate::OpCode::I64Store16_SI,
            Self::I64Store16_IS { .. } => crate::OpCode::I64Store16_IS,
            Self::I64Store16_II { .. } => crate::OpCode::I64Store16_II,
            Self::I64Store16Mem0_RS { .. } => crate::OpCode::I64Store16Mem0_RS,
            Self::I64Store16Mem0_RI { .. } => crate::OpCode::I64Store16Mem0_RI,
            Self::I64Store16Mem0_SR { .. } => crate::OpCode::I64Store16Mem0_SR,
            Self::I64Store16Mem0_SS { .. } => crate::OpCode::I64Store16Mem0_SS,
            Self::I64Store16Mem0_SI { .. } => crate::OpCode::I64Store16Mem0_SI,
            Self::I64Store16Mem0_IR { .. } => crate::OpCode::I64Store16Mem0_IR,
            Self::I64Store16Mem0_IS { .. } => crate::OpCode::I64Store16Mem0_IS,
            Self::I64Store16Mem0_II { .. } => crate::OpCode::I64Store16Mem0_II,
            Self::I64Store32_SS { .. } => crate::OpCode::I64Store32_SS,
            Self::I64Store32_SI { .. } => crate::OpCode::I64Store32_SI,
            Self::I64Store32_IS { .. } => crate::OpCode::I64Store32_IS,
            Self::I64Store32_II { .. } => crate::OpCode::I64Store32_II,
            Self::I64Store32Mem0_RS { .. } => crate::OpCode::I64Store32Mem0_RS,
            Self::I64Store32Mem0_RI { .. } => crate::OpCode::I64Store32Mem0_RI,
            Self::I64Store32Mem0_SR { .. } => crate::OpCode::I64Store32Mem0_SR,
            Self::I64Store32Mem0_SS { .. } => crate::OpCode::I64Store32Mem0_SS,
            Self::I64Store32Mem0_SI { .. } => crate::OpCode::I64Store32Mem0_SI,
            Self::I64Store32Mem0_IR { .. } => crate::OpCode::I64Store32Mem0_IR,
            Self::I64Store32Mem0_IS { .. } => crate::OpCode::I64Store32Mem0_IS,
            Self::I64Store32Mem0_II { .. } => crate::OpCode::I64Store32Mem0_II,
            Self::Select { .. } => crate::OpCode::Select,
            Self::SelectI32_RSSS { .. } => crate::OpCode::SelectI32_RSSS,
            Self::SelectI32_RSSI { .. } => crate::OpCode::SelectI32_RSSI,
            Self::SelectI32_RSIS { .. } => crate::OpCode::SelectI32_RSIS,
            Self::SelectI32_RSII { .. } => crate::OpCode::SelectI32_RSII,
            Self::SelectI64_RRSS { .. } => crate::OpCode::SelectI64_RRSS,
            Self::SelectI64_RRSI { .. } => crate::OpCode::SelectI64_RRSI,
            Self::SelectI64_RRIS { .. } => crate::OpCode::SelectI64_RRIS,
            Self::SelectI64_RRII { .. } => crate::OpCode::SelectI64_RRII,
            Self::SelectI64_RSRS { .. } => crate::OpCode::SelectI64_RSRS,
            Self::SelectI64_RSRI { .. } => crate::OpCode::SelectI64_RSRI,
            Self::SelectI64_RSSR { .. } => crate::OpCode::SelectI64_RSSR,
            Self::SelectI64_RSSS { .. } => crate::OpCode::SelectI64_RSSS,
            Self::SelectI64_RSSI { .. } => crate::OpCode::SelectI64_RSSI,
            Self::SelectI64_RSIR { .. } => crate::OpCode::SelectI64_RSIR,
            Self::SelectI64_RSIS { .. } => crate::OpCode::SelectI64_RSIS,
            Self::SelectI64_RSII { .. } => crate::OpCode::SelectI64_RSII,
            Self::SelectF32_RRSS { .. } => crate::OpCode::SelectF32_RRSS,
            Self::SelectF32_RRSI { .. } => crate::OpCode::SelectF32_RRSI,
            Self::SelectF32_RRIS { .. } => crate::OpCode::SelectF32_RRIS,
            Self::SelectF32_RRII { .. } => crate::OpCode::SelectF32_RRII,
            Self::SelectF32_RSRS { .. } => crate::OpCode::SelectF32_RSRS,
            Self::SelectF32_RSRI { .. } => crate::OpCode::SelectF32_RSRI,
            Self::SelectF32_RSSR { .. } => crate::OpCode::SelectF32_RSSR,
            Self::SelectF32_RSSS { .. } => crate::OpCode::SelectF32_RSSS,
            Self::SelectF32_RSSI { .. } => crate::OpCode::SelectF32_RSSI,
            Self::SelectF32_RSIR { .. } => crate::OpCode::SelectF32_RSIR,
            Self::SelectF32_RSIS { .. } => crate::OpCode::SelectF32_RSIS,
            Self::SelectF32_RSII { .. } => crate::OpCode::SelectF32_RSII,
            Self::SelectF64_RRSS { .. } => crate::OpCode::SelectF64_RRSS,
            Self::SelectF64_RRSI { .. } => crate::OpCode::SelectF64_RRSI,
            Self::SelectF64_RRIS { .. } => crate::OpCode::SelectF64_RRIS,
            Self::SelectF64_RRII { .. } => crate::OpCode::SelectF64_RRII,
            Self::SelectF64_RSRS { .. } => crate::OpCode::SelectF64_RSRS,
            Self::SelectF64_RSRI { .. } => crate::OpCode::SelectF64_RSRI,
            Self::SelectF64_RSSR { .. } => crate::OpCode::SelectF64_RSSR,
            Self::SelectF64_RSSS { .. } => crate::OpCode::SelectF64_RSSS,
            Self::SelectF64_RSSI { .. } => crate::OpCode::SelectF64_RSSI,
            Self::SelectF64_RSIR { .. } => crate::OpCode::SelectF64_RSIR,
            Self::SelectF64_RSIS { .. } => crate::OpCode::SelectF64_RSIS,
            Self::SelectF64_RSII { .. } => crate::OpCode::SelectF64_RSII,
            Self::TableSize_R { .. } => crate::OpCode::TableSize_R,
            Self::TableSize_S { .. } => crate::OpCode::TableSize_S,
            Self::TableGet_RR { .. } => crate::OpCode::TableGet_RR,
            Self::TableGet_RS { .. } => crate::OpCode::TableGet_RS,
            Self::TableGet_RI { .. } => crate::OpCode::TableGet_RI,
            Self::TableSet_RS { .. } => crate::OpCode::TableSet_RS,
            Self::TableSet_RI { .. } => crate::OpCode::TableSet_RI,
            Self::TableSet_SR { .. } => crate::OpCode::TableSet_SR,
            Self::TableSet_SS { .. } => crate::OpCode::TableSet_SS,
            Self::TableSet_SI { .. } => crate::OpCode::TableSet_SI,
            Self::TableSet_IR { .. } => crate::OpCode::TableSet_IR,
            Self::TableSet_IS { .. } => crate::OpCode::TableSet_IS,
            Self::TableSet_II { .. } => crate::OpCode::TableSet_II,
            Self::TableGrow { .. } => crate::OpCode::TableGrow,
            Self::TableCopy { .. } => crate::OpCode::TableCopy,
            Self::TableFill { .. } => crate::OpCode::TableFill,
            Self::TableInit { .. } => crate::OpCode::TableInit,
            Self::MemorySize_R { .. } => crate::OpCode::MemorySize_R,
            Self::MemorySize_S { .. } => crate::OpCode::MemorySize_S,
            Self::MemoryGrow { .. } => crate::OpCode::MemoryGrow,
            Self::MemoryCopy { .. } => crate::OpCode::MemoryCopy,
            Self::MemoryFill { .. } => crate::OpCode::MemoryFill,
            Self::MemoryInit { .. } => crate::OpCode::MemoryInit,
            Self::CallInternal { .. } => crate::OpCode::CallInternal,
            Self::ReturnCallInternal { .. } => crate::OpCode::ReturnCallInternal,
            Self::CallImported { .. } => crate::OpCode::CallImported,
            Self::ReturnCallImported { .. } => crate::OpCode::ReturnCallImported,
            Self::CallIndirect_R { .. } => crate::OpCode::CallIndirect_R,
            Self::CallIndirect_S { .. } => crate::OpCode::CallIndirect_S,
            Self::CallIndirect_I { .. } => crate::OpCode::CallIndirect_I,
            Self::ReturnCallIndirect_R { .. } => crate::OpCode::ReturnCallIndirect_R,
            Self::ReturnCallIndirect_S { .. } => crate::OpCode::ReturnCallIndirect_S,
            Self::ReturnCallIndirect_I { .. } => crate::OpCode::ReturnCallIndirect_I,
        }
    }
}
impl crate::OperatorCode for crate::op::Trap {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::Trap
    }
}
impl crate::OperatorCode for crate::op::ConsumeFuel {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::ConsumeFuel
    }
}
impl crate::OperatorCode for crate::op::RefFunc {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::RefFunc
    }
}
impl crate::OperatorCode for crate::op::Copy1_S {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::Copy1_S
    }
}
impl crate::OperatorCode for crate::op::Copy {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::Copy
    }
}
impl crate::OperatorCode for crate::op::Copy1I32_I {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::Copy1I32_I
    }
}
impl crate::OperatorCode for crate::op::Copy1I64_R {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::Copy1I64_R
    }
}
impl crate::OperatorCode for crate::op::Copy1I64_I {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::Copy1I64_I
    }
}
impl crate::OperatorCode for crate::op::Copy1F32_R {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::Copy1F32_R
    }
}
impl crate::OperatorCode for crate::op::Copy1F32_I {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::Copy1F32_I
    }
}
impl crate::OperatorCode for crate::op::Copy1F64_R {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::Copy1F64_R
    }
}
impl crate::OperatorCode for crate::op::Copy1F64_I {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::Copy1F64_I
    }
}
impl crate::OperatorCode for crate::op::Return0 {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::Return0
    }
}
impl crate::OperatorCode for crate::op::Return1_S {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::Return1_S
    }
}
impl crate::OperatorCode for crate::op::Return {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::Return
    }
}
impl crate::OperatorCode for crate::op::Return1I32_R {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::Return1I32_R
    }
}
impl crate::OperatorCode for crate::op::Return1I64_R {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::Return1I64_R
    }
}
impl crate::OperatorCode for crate::op::Return1F32_R {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::Return1F32_R
    }
}
impl crate::OperatorCode for crate::op::Return1F64_R {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::Return1F64_R
    }
}
impl crate::OperatorCode for crate::op::Return1I32_I {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::Return1I32_I
    }
}
impl crate::OperatorCode for crate::op::Return1I64_I {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::Return1I64_I
    }
}
impl crate::OperatorCode for crate::op::Return1F32_I {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::Return1F32_I
    }
}
impl crate::OperatorCode for crate::op::Return1F64_I {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::Return1F64_I
    }
}
impl crate::OperatorCode for crate::op::GlobalGet_S {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::GlobalGet_S
    }
}
impl crate::OperatorCode for crate::op::GlobalGetI32_R {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::GlobalGetI32_R
    }
}
impl crate::OperatorCode for crate::op::GlobalGetI64_R {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::GlobalGetI64_R
    }
}
impl crate::OperatorCode for crate::op::GlobalGetF32_R {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::GlobalGetF32_R
    }
}
impl crate::OperatorCode for crate::op::GlobalGetF64_R {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::GlobalGetF64_R
    }
}
impl crate::OperatorCode for crate::op::GlobalSet_S {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::GlobalSet_S
    }
}
impl crate::OperatorCode for crate::op::GlobalSetI32_R {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::GlobalSetI32_R
    }
}
impl crate::OperatorCode for crate::op::GlobalSetI64_R {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::GlobalSetI64_R
    }
}
impl crate::OperatorCode for crate::op::GlobalSetF32_R {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::GlobalSetF32_R
    }
}
impl crate::OperatorCode for crate::op::GlobalSetF64_R {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::GlobalSetF64_R
    }
}
impl crate::OperatorCode for crate::op::GlobalSetI32_I {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::GlobalSetI32_I
    }
}
impl crate::OperatorCode for crate::op::GlobalSetI64_I {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::GlobalSetI64_I
    }
}
impl crate::OperatorCode for crate::op::GlobalSetF32_I {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::GlobalSetF32_I
    }
}
impl crate::OperatorCode for crate::op::GlobalSetF64_I {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::GlobalSetF64_I
    }
}
impl crate::OperatorCode for crate::op::BranchTable0_R {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::BranchTable0_R
    }
}
impl crate::OperatorCode for crate::op::BranchTable_R {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::BranchTable_R
    }
}
impl crate::OperatorCode for crate::op::BranchTable0_S {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::BranchTable0_S
    }
}
impl crate::OperatorCode for crate::op::BranchTable_S {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::BranchTable_S
    }
}
impl crate::OperatorCode for crate::op::Branch {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::Branch
    }
}
impl crate::OperatorCode for crate::op::I32EqBranch_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32EqBranch_RS
    }
}
impl crate::OperatorCode for crate::op::I32EqBranch_RI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32EqBranch_RI
    }
}
impl crate::OperatorCode for crate::op::I32EqBranch_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32EqBranch_SS
    }
}
impl crate::OperatorCode for crate::op::I32EqBranch_SI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32EqBranch_SI
    }
}
impl crate::OperatorCode for crate::op::I64EqBranch_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64EqBranch_RS
    }
}
impl crate::OperatorCode for crate::op::I64EqBranch_RI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64EqBranch_RI
    }
}
impl crate::OperatorCode for crate::op::I64EqBranch_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64EqBranch_SS
    }
}
impl crate::OperatorCode for crate::op::I64EqBranch_SI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64EqBranch_SI
    }
}
impl crate::OperatorCode for crate::op::F32EqBranch_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32EqBranch_RS
    }
}
impl crate::OperatorCode for crate::op::F32EqBranch_RI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32EqBranch_RI
    }
}
impl crate::OperatorCode for crate::op::F32EqBranch_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32EqBranch_SS
    }
}
impl crate::OperatorCode for crate::op::F32EqBranch_SI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32EqBranch_SI
    }
}
impl crate::OperatorCode for crate::op::F64EqBranch_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64EqBranch_RS
    }
}
impl crate::OperatorCode for crate::op::F64EqBranch_RI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64EqBranch_RI
    }
}
impl crate::OperatorCode for crate::op::F64EqBranch_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64EqBranch_SS
    }
}
impl crate::OperatorCode for crate::op::F64EqBranch_SI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64EqBranch_SI
    }
}
impl crate::OperatorCode for crate::op::I32NeBranch_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32NeBranch_RS
    }
}
impl crate::OperatorCode for crate::op::I32NeBranch_RI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32NeBranch_RI
    }
}
impl crate::OperatorCode for crate::op::I32NeBranch_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32NeBranch_SS
    }
}
impl crate::OperatorCode for crate::op::I32NeBranch_SI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32NeBranch_SI
    }
}
impl crate::OperatorCode for crate::op::I64NeBranch_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64NeBranch_RS
    }
}
impl crate::OperatorCode for crate::op::I64NeBranch_RI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64NeBranch_RI
    }
}
impl crate::OperatorCode for crate::op::I64NeBranch_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64NeBranch_SS
    }
}
impl crate::OperatorCode for crate::op::I64NeBranch_SI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64NeBranch_SI
    }
}
impl crate::OperatorCode for crate::op::F32NeBranch_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32NeBranch_RS
    }
}
impl crate::OperatorCode for crate::op::F32NeBranch_RI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32NeBranch_RI
    }
}
impl crate::OperatorCode for crate::op::F32NeBranch_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32NeBranch_SS
    }
}
impl crate::OperatorCode for crate::op::F32NeBranch_SI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32NeBranch_SI
    }
}
impl crate::OperatorCode for crate::op::F64NeBranch_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64NeBranch_RS
    }
}
impl crate::OperatorCode for crate::op::F64NeBranch_RI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64NeBranch_RI
    }
}
impl crate::OperatorCode for crate::op::F64NeBranch_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64NeBranch_SS
    }
}
impl crate::OperatorCode for crate::op::F64NeBranch_SI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64NeBranch_SI
    }
}
impl crate::OperatorCode for crate::op::I32AndBranch_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32AndBranch_RS
    }
}
impl crate::OperatorCode for crate::op::I32AndBranch_RI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32AndBranch_RI
    }
}
impl crate::OperatorCode for crate::op::I32AndBranch_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32AndBranch_SS
    }
}
impl crate::OperatorCode for crate::op::I32AndBranch_SI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32AndBranch_SI
    }
}
impl crate::OperatorCode for crate::op::I64AndBranch_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64AndBranch_RS
    }
}
impl crate::OperatorCode for crate::op::I64AndBranch_RI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64AndBranch_RI
    }
}
impl crate::OperatorCode for crate::op::I64AndBranch_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64AndBranch_SS
    }
}
impl crate::OperatorCode for crate::op::I64AndBranch_SI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64AndBranch_SI
    }
}
impl crate::OperatorCode for crate::op::I32OrBranch_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32OrBranch_RS
    }
}
impl crate::OperatorCode for crate::op::I32OrBranch_RI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32OrBranch_RI
    }
}
impl crate::OperatorCode for crate::op::I32OrBranch_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32OrBranch_SS
    }
}
impl crate::OperatorCode for crate::op::I32OrBranch_SI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32OrBranch_SI
    }
}
impl crate::OperatorCode for crate::op::I64OrBranch_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64OrBranch_RS
    }
}
impl crate::OperatorCode for crate::op::I64OrBranch_RI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64OrBranch_RI
    }
}
impl crate::OperatorCode for crate::op::I64OrBranch_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64OrBranch_SS
    }
}
impl crate::OperatorCode for crate::op::I64OrBranch_SI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64OrBranch_SI
    }
}
impl crate::OperatorCode for crate::op::I32XorBranch_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32XorBranch_RS
    }
}
impl crate::OperatorCode for crate::op::I32XorBranch_RI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32XorBranch_RI
    }
}
impl crate::OperatorCode for crate::op::I32XorBranch_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32XorBranch_SS
    }
}
impl crate::OperatorCode for crate::op::I32XorBranch_SI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32XorBranch_SI
    }
}
impl crate::OperatorCode for crate::op::I64XorBranch_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64XorBranch_RS
    }
}
impl crate::OperatorCode for crate::op::I64XorBranch_RI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64XorBranch_RI
    }
}
impl crate::OperatorCode for crate::op::I64XorBranch_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64XorBranch_SS
    }
}
impl crate::OperatorCode for crate::op::I64XorBranch_SI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64XorBranch_SI
    }
}
impl crate::OperatorCode for crate::op::I32NotAndBranch_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32NotAndBranch_RS
    }
}
impl crate::OperatorCode for crate::op::I32NotAndBranch_RI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32NotAndBranch_RI
    }
}
impl crate::OperatorCode for crate::op::I32NotAndBranch_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32NotAndBranch_SS
    }
}
impl crate::OperatorCode for crate::op::I32NotAndBranch_SI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32NotAndBranch_SI
    }
}
impl crate::OperatorCode for crate::op::I64NotAndBranch_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64NotAndBranch_RS
    }
}
impl crate::OperatorCode for crate::op::I64NotAndBranch_RI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64NotAndBranch_RI
    }
}
impl crate::OperatorCode for crate::op::I64NotAndBranch_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64NotAndBranch_SS
    }
}
impl crate::OperatorCode for crate::op::I64NotAndBranch_SI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64NotAndBranch_SI
    }
}
impl crate::OperatorCode for crate::op::I32NotOrBranch_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32NotOrBranch_RS
    }
}
impl crate::OperatorCode for crate::op::I32NotOrBranch_RI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32NotOrBranch_RI
    }
}
impl crate::OperatorCode for crate::op::I32NotOrBranch_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32NotOrBranch_SS
    }
}
impl crate::OperatorCode for crate::op::I32NotOrBranch_SI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32NotOrBranch_SI
    }
}
impl crate::OperatorCode for crate::op::I64NotOrBranch_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64NotOrBranch_RS
    }
}
impl crate::OperatorCode for crate::op::I64NotOrBranch_RI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64NotOrBranch_RI
    }
}
impl crate::OperatorCode for crate::op::I64NotOrBranch_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64NotOrBranch_SS
    }
}
impl crate::OperatorCode for crate::op::I64NotOrBranch_SI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64NotOrBranch_SI
    }
}
impl crate::OperatorCode for crate::op::I32NotXorBranch_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32NotXorBranch_RS
    }
}
impl crate::OperatorCode for crate::op::I32NotXorBranch_RI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32NotXorBranch_RI
    }
}
impl crate::OperatorCode for crate::op::I32NotXorBranch_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32NotXorBranch_SS
    }
}
impl crate::OperatorCode for crate::op::I32NotXorBranch_SI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32NotXorBranch_SI
    }
}
impl crate::OperatorCode for crate::op::I64NotXorBranch_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64NotXorBranch_RS
    }
}
impl crate::OperatorCode for crate::op::I64NotXorBranch_RI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64NotXorBranch_RI
    }
}
impl crate::OperatorCode for crate::op::I64NotXorBranch_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64NotXorBranch_SS
    }
}
impl crate::OperatorCode for crate::op::I64NotXorBranch_SI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64NotXorBranch_SI
    }
}
impl crate::OperatorCode for crate::op::I32LtSBranch_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32LtSBranch_RS
    }
}
impl crate::OperatorCode for crate::op::I32LtSBranch_RI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32LtSBranch_RI
    }
}
impl crate::OperatorCode for crate::op::I32LtSBranch_SR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32LtSBranch_SR
    }
}
impl crate::OperatorCode for crate::op::I32LtSBranch_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32LtSBranch_SS
    }
}
impl crate::OperatorCode for crate::op::I32LtSBranch_SI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32LtSBranch_SI
    }
}
impl crate::OperatorCode for crate::op::I32LtSBranch_IR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32LtSBranch_IR
    }
}
impl crate::OperatorCode for crate::op::I32LtSBranch_IS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32LtSBranch_IS
    }
}
impl crate::OperatorCode for crate::op::I64LtSBranch_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64LtSBranch_RS
    }
}
impl crate::OperatorCode for crate::op::I64LtSBranch_RI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64LtSBranch_RI
    }
}
impl crate::OperatorCode for crate::op::I64LtSBranch_SR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64LtSBranch_SR
    }
}
impl crate::OperatorCode for crate::op::I64LtSBranch_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64LtSBranch_SS
    }
}
impl crate::OperatorCode for crate::op::I64LtSBranch_SI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64LtSBranch_SI
    }
}
impl crate::OperatorCode for crate::op::I64LtSBranch_IR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64LtSBranch_IR
    }
}
impl crate::OperatorCode for crate::op::I64LtSBranch_IS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64LtSBranch_IS
    }
}
impl crate::OperatorCode for crate::op::I32LtUBranch_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32LtUBranch_RS
    }
}
impl crate::OperatorCode for crate::op::I32LtUBranch_RI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32LtUBranch_RI
    }
}
impl crate::OperatorCode for crate::op::I32LtUBranch_SR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32LtUBranch_SR
    }
}
impl crate::OperatorCode for crate::op::I32LtUBranch_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32LtUBranch_SS
    }
}
impl crate::OperatorCode for crate::op::I32LtUBranch_SI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32LtUBranch_SI
    }
}
impl crate::OperatorCode for crate::op::I32LtUBranch_IR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32LtUBranch_IR
    }
}
impl crate::OperatorCode for crate::op::I32LtUBranch_IS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32LtUBranch_IS
    }
}
impl crate::OperatorCode for crate::op::I64LtUBranch_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64LtUBranch_RS
    }
}
impl crate::OperatorCode for crate::op::I64LtUBranch_RI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64LtUBranch_RI
    }
}
impl crate::OperatorCode for crate::op::I64LtUBranch_SR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64LtUBranch_SR
    }
}
impl crate::OperatorCode for crate::op::I64LtUBranch_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64LtUBranch_SS
    }
}
impl crate::OperatorCode for crate::op::I64LtUBranch_SI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64LtUBranch_SI
    }
}
impl crate::OperatorCode for crate::op::I64LtUBranch_IR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64LtUBranch_IR
    }
}
impl crate::OperatorCode for crate::op::I64LtUBranch_IS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64LtUBranch_IS
    }
}
impl crate::OperatorCode for crate::op::I32LeSBranch_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32LeSBranch_RS
    }
}
impl crate::OperatorCode for crate::op::I32LeSBranch_RI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32LeSBranch_RI
    }
}
impl crate::OperatorCode for crate::op::I32LeSBranch_SR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32LeSBranch_SR
    }
}
impl crate::OperatorCode for crate::op::I32LeSBranch_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32LeSBranch_SS
    }
}
impl crate::OperatorCode for crate::op::I32LeSBranch_SI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32LeSBranch_SI
    }
}
impl crate::OperatorCode for crate::op::I32LeSBranch_IR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32LeSBranch_IR
    }
}
impl crate::OperatorCode for crate::op::I32LeSBranch_IS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32LeSBranch_IS
    }
}
impl crate::OperatorCode for crate::op::I64LeSBranch_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64LeSBranch_RS
    }
}
impl crate::OperatorCode for crate::op::I64LeSBranch_RI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64LeSBranch_RI
    }
}
impl crate::OperatorCode for crate::op::I64LeSBranch_SR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64LeSBranch_SR
    }
}
impl crate::OperatorCode for crate::op::I64LeSBranch_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64LeSBranch_SS
    }
}
impl crate::OperatorCode for crate::op::I64LeSBranch_SI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64LeSBranch_SI
    }
}
impl crate::OperatorCode for crate::op::I64LeSBranch_IR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64LeSBranch_IR
    }
}
impl crate::OperatorCode for crate::op::I64LeSBranch_IS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64LeSBranch_IS
    }
}
impl crate::OperatorCode for crate::op::I32LeUBranch_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32LeUBranch_RS
    }
}
impl crate::OperatorCode for crate::op::I32LeUBranch_RI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32LeUBranch_RI
    }
}
impl crate::OperatorCode for crate::op::I32LeUBranch_SR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32LeUBranch_SR
    }
}
impl crate::OperatorCode for crate::op::I32LeUBranch_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32LeUBranch_SS
    }
}
impl crate::OperatorCode for crate::op::I32LeUBranch_SI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32LeUBranch_SI
    }
}
impl crate::OperatorCode for crate::op::I32LeUBranch_IR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32LeUBranch_IR
    }
}
impl crate::OperatorCode for crate::op::I32LeUBranch_IS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32LeUBranch_IS
    }
}
impl crate::OperatorCode for crate::op::I64LeUBranch_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64LeUBranch_RS
    }
}
impl crate::OperatorCode for crate::op::I64LeUBranch_RI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64LeUBranch_RI
    }
}
impl crate::OperatorCode for crate::op::I64LeUBranch_SR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64LeUBranch_SR
    }
}
impl crate::OperatorCode for crate::op::I64LeUBranch_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64LeUBranch_SS
    }
}
impl crate::OperatorCode for crate::op::I64LeUBranch_SI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64LeUBranch_SI
    }
}
impl crate::OperatorCode for crate::op::I64LeUBranch_IR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64LeUBranch_IR
    }
}
impl crate::OperatorCode for crate::op::I64LeUBranch_IS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64LeUBranch_IS
    }
}
impl crate::OperatorCode for crate::op::F32LtBranch_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32LtBranch_RS
    }
}
impl crate::OperatorCode for crate::op::F32LtBranch_RI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32LtBranch_RI
    }
}
impl crate::OperatorCode for crate::op::F32LtBranch_SR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32LtBranch_SR
    }
}
impl crate::OperatorCode for crate::op::F32LtBranch_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32LtBranch_SS
    }
}
impl crate::OperatorCode for crate::op::F32LtBranch_SI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32LtBranch_SI
    }
}
impl crate::OperatorCode for crate::op::F32LtBranch_IR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32LtBranch_IR
    }
}
impl crate::OperatorCode for crate::op::F32LtBranch_IS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32LtBranch_IS
    }
}
impl crate::OperatorCode for crate::op::F64LtBranch_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64LtBranch_RS
    }
}
impl crate::OperatorCode for crate::op::F64LtBranch_RI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64LtBranch_RI
    }
}
impl crate::OperatorCode for crate::op::F64LtBranch_SR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64LtBranch_SR
    }
}
impl crate::OperatorCode for crate::op::F64LtBranch_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64LtBranch_SS
    }
}
impl crate::OperatorCode for crate::op::F64LtBranch_SI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64LtBranch_SI
    }
}
impl crate::OperatorCode for crate::op::F64LtBranch_IR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64LtBranch_IR
    }
}
impl crate::OperatorCode for crate::op::F64LtBranch_IS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64LtBranch_IS
    }
}
impl crate::OperatorCode for crate::op::F32LeBranch_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32LeBranch_RS
    }
}
impl crate::OperatorCode for crate::op::F32LeBranch_RI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32LeBranch_RI
    }
}
impl crate::OperatorCode for crate::op::F32LeBranch_SR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32LeBranch_SR
    }
}
impl crate::OperatorCode for crate::op::F32LeBranch_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32LeBranch_SS
    }
}
impl crate::OperatorCode for crate::op::F32LeBranch_SI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32LeBranch_SI
    }
}
impl crate::OperatorCode for crate::op::F32LeBranch_IR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32LeBranch_IR
    }
}
impl crate::OperatorCode for crate::op::F32LeBranch_IS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32LeBranch_IS
    }
}
impl crate::OperatorCode for crate::op::F64LeBranch_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64LeBranch_RS
    }
}
impl crate::OperatorCode for crate::op::F64LeBranch_RI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64LeBranch_RI
    }
}
impl crate::OperatorCode for crate::op::F64LeBranch_SR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64LeBranch_SR
    }
}
impl crate::OperatorCode for crate::op::F64LeBranch_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64LeBranch_SS
    }
}
impl crate::OperatorCode for crate::op::F64LeBranch_SI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64LeBranch_SI
    }
}
impl crate::OperatorCode for crate::op::F64LeBranch_IR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64LeBranch_IR
    }
}
impl crate::OperatorCode for crate::op::F64LeBranch_IS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64LeBranch_IS
    }
}
impl crate::OperatorCode for crate::op::I32Popcnt_RR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Popcnt_RR
    }
}
impl crate::OperatorCode for crate::op::I32Popcnt_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Popcnt_RS
    }
}
impl crate::OperatorCode for crate::op::I32Popcnt_SR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Popcnt_SR
    }
}
impl crate::OperatorCode for crate::op::I32Popcnt_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Popcnt_SS
    }
}
impl crate::OperatorCode for crate::op::I64Popcnt_RR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Popcnt_RR
    }
}
impl crate::OperatorCode for crate::op::I64Popcnt_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Popcnt_RS
    }
}
impl crate::OperatorCode for crate::op::I64Popcnt_SR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Popcnt_SR
    }
}
impl crate::OperatorCode for crate::op::I64Popcnt_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Popcnt_SS
    }
}
impl crate::OperatorCode for crate::op::I32Clz_RR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Clz_RR
    }
}
impl crate::OperatorCode for crate::op::I32Clz_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Clz_RS
    }
}
impl crate::OperatorCode for crate::op::I32Clz_SR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Clz_SR
    }
}
impl crate::OperatorCode for crate::op::I32Clz_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Clz_SS
    }
}
impl crate::OperatorCode for crate::op::I64Clz_RR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Clz_RR
    }
}
impl crate::OperatorCode for crate::op::I64Clz_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Clz_RS
    }
}
impl crate::OperatorCode for crate::op::I64Clz_SR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Clz_SR
    }
}
impl crate::OperatorCode for crate::op::I64Clz_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Clz_SS
    }
}
impl crate::OperatorCode for crate::op::I32Ctz_RR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Ctz_RR
    }
}
impl crate::OperatorCode for crate::op::I32Ctz_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Ctz_RS
    }
}
impl crate::OperatorCode for crate::op::I32Ctz_SR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Ctz_SR
    }
}
impl crate::OperatorCode for crate::op::I32Ctz_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Ctz_SS
    }
}
impl crate::OperatorCode for crate::op::I64Ctz_RR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Ctz_RR
    }
}
impl crate::OperatorCode for crate::op::I64Ctz_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Ctz_RS
    }
}
impl crate::OperatorCode for crate::op::I64Ctz_SR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Ctz_SR
    }
}
impl crate::OperatorCode for crate::op::I64Ctz_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Ctz_SS
    }
}
impl crate::OperatorCode for crate::op::F32Abs_RR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Abs_RR
    }
}
impl crate::OperatorCode for crate::op::F32Abs_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Abs_RS
    }
}
impl crate::OperatorCode for crate::op::F32Abs_SR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Abs_SR
    }
}
impl crate::OperatorCode for crate::op::F32Abs_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Abs_SS
    }
}
impl crate::OperatorCode for crate::op::F64Abs_RR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Abs_RR
    }
}
impl crate::OperatorCode for crate::op::F64Abs_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Abs_RS
    }
}
impl crate::OperatorCode for crate::op::F64Abs_SR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Abs_SR
    }
}
impl crate::OperatorCode for crate::op::F64Abs_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Abs_SS
    }
}
impl crate::OperatorCode for crate::op::F32Neg_RR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Neg_RR
    }
}
impl crate::OperatorCode for crate::op::F32Neg_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Neg_RS
    }
}
impl crate::OperatorCode for crate::op::F32Neg_SR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Neg_SR
    }
}
impl crate::OperatorCode for crate::op::F32Neg_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Neg_SS
    }
}
impl crate::OperatorCode for crate::op::F64Neg_RR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Neg_RR
    }
}
impl crate::OperatorCode for crate::op::F64Neg_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Neg_RS
    }
}
impl crate::OperatorCode for crate::op::F64Neg_SR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Neg_SR
    }
}
impl crate::OperatorCode for crate::op::F64Neg_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Neg_SS
    }
}
impl crate::OperatorCode for crate::op::F32Ceil_RR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Ceil_RR
    }
}
impl crate::OperatorCode for crate::op::F32Ceil_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Ceil_RS
    }
}
impl crate::OperatorCode for crate::op::F32Ceil_SR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Ceil_SR
    }
}
impl crate::OperatorCode for crate::op::F32Ceil_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Ceil_SS
    }
}
impl crate::OperatorCode for crate::op::F64Ceil_RR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Ceil_RR
    }
}
impl crate::OperatorCode for crate::op::F64Ceil_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Ceil_RS
    }
}
impl crate::OperatorCode for crate::op::F64Ceil_SR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Ceil_SR
    }
}
impl crate::OperatorCode for crate::op::F64Ceil_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Ceil_SS
    }
}
impl crate::OperatorCode for crate::op::F32Floor_RR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Floor_RR
    }
}
impl crate::OperatorCode for crate::op::F32Floor_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Floor_RS
    }
}
impl crate::OperatorCode for crate::op::F32Floor_SR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Floor_SR
    }
}
impl crate::OperatorCode for crate::op::F32Floor_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Floor_SS
    }
}
impl crate::OperatorCode for crate::op::F64Floor_RR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Floor_RR
    }
}
impl crate::OperatorCode for crate::op::F64Floor_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Floor_RS
    }
}
impl crate::OperatorCode for crate::op::F64Floor_SR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Floor_SR
    }
}
impl crate::OperatorCode for crate::op::F64Floor_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Floor_SS
    }
}
impl crate::OperatorCode for crate::op::F32Trunc_RR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Trunc_RR
    }
}
impl crate::OperatorCode for crate::op::F32Trunc_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Trunc_RS
    }
}
impl crate::OperatorCode for crate::op::F32Trunc_SR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Trunc_SR
    }
}
impl crate::OperatorCode for crate::op::F32Trunc_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Trunc_SS
    }
}
impl crate::OperatorCode for crate::op::F64Trunc_RR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Trunc_RR
    }
}
impl crate::OperatorCode for crate::op::F64Trunc_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Trunc_RS
    }
}
impl crate::OperatorCode for crate::op::F64Trunc_SR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Trunc_SR
    }
}
impl crate::OperatorCode for crate::op::F64Trunc_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Trunc_SS
    }
}
impl crate::OperatorCode for crate::op::F32Nearest_RR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Nearest_RR
    }
}
impl crate::OperatorCode for crate::op::F32Nearest_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Nearest_RS
    }
}
impl crate::OperatorCode for crate::op::F32Nearest_SR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Nearest_SR
    }
}
impl crate::OperatorCode for crate::op::F32Nearest_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Nearest_SS
    }
}
impl crate::OperatorCode for crate::op::F64Nearest_RR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Nearest_RR
    }
}
impl crate::OperatorCode for crate::op::F64Nearest_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Nearest_RS
    }
}
impl crate::OperatorCode for crate::op::F64Nearest_SR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Nearest_SR
    }
}
impl crate::OperatorCode for crate::op::F64Nearest_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Nearest_SS
    }
}
impl crate::OperatorCode for crate::op::F32Sqrt_RR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Sqrt_RR
    }
}
impl crate::OperatorCode for crate::op::F32Sqrt_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Sqrt_RS
    }
}
impl crate::OperatorCode for crate::op::F32Sqrt_SR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Sqrt_SR
    }
}
impl crate::OperatorCode for crate::op::F32Sqrt_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Sqrt_SS
    }
}
impl crate::OperatorCode for crate::op::F64Sqrt_RR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Sqrt_RR
    }
}
impl crate::OperatorCode for crate::op::F64Sqrt_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Sqrt_RS
    }
}
impl crate::OperatorCode for crate::op::F64Sqrt_SR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Sqrt_SR
    }
}
impl crate::OperatorCode for crate::op::F64Sqrt_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Sqrt_SS
    }
}
impl crate::OperatorCode for crate::op::F32Demote_RR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Demote_RR
    }
}
impl crate::OperatorCode for crate::op::F32Demote_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Demote_RS
    }
}
impl crate::OperatorCode for crate::op::F32Demote_SR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Demote_SR
    }
}
impl crate::OperatorCode for crate::op::F32Demote_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Demote_SS
    }
}
impl crate::OperatorCode for crate::op::F64Promote_RR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Promote_RR
    }
}
impl crate::OperatorCode for crate::op::F64Promote_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Promote_RS
    }
}
impl crate::OperatorCode for crate::op::F64Promote_SR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Promote_SR
    }
}
impl crate::OperatorCode for crate::op::F64Promote_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Promote_SS
    }
}
impl crate::OperatorCode for crate::op::F32ConvertI32S_RR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32ConvertI32S_RR
    }
}
impl crate::OperatorCode for crate::op::F32ConvertI32S_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32ConvertI32S_RS
    }
}
impl crate::OperatorCode for crate::op::F32ConvertI32S_SR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32ConvertI32S_SR
    }
}
impl crate::OperatorCode for crate::op::F32ConvertI32S_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32ConvertI32S_SS
    }
}
impl crate::OperatorCode for crate::op::F32ConvertI32U_RR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32ConvertI32U_RR
    }
}
impl crate::OperatorCode for crate::op::F32ConvertI32U_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32ConvertI32U_RS
    }
}
impl crate::OperatorCode for crate::op::F32ConvertI32U_SR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32ConvertI32U_SR
    }
}
impl crate::OperatorCode for crate::op::F32ConvertI32U_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32ConvertI32U_SS
    }
}
impl crate::OperatorCode for crate::op::F32ConvertI64S_RR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32ConvertI64S_RR
    }
}
impl crate::OperatorCode for crate::op::F32ConvertI64S_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32ConvertI64S_RS
    }
}
impl crate::OperatorCode for crate::op::F32ConvertI64S_SR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32ConvertI64S_SR
    }
}
impl crate::OperatorCode for crate::op::F32ConvertI64S_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32ConvertI64S_SS
    }
}
impl crate::OperatorCode for crate::op::F32ConvertI64U_RR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32ConvertI64U_RR
    }
}
impl crate::OperatorCode for crate::op::F32ConvertI64U_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32ConvertI64U_RS
    }
}
impl crate::OperatorCode for crate::op::F32ConvertI64U_SR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32ConvertI64U_SR
    }
}
impl crate::OperatorCode for crate::op::F32ConvertI64U_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32ConvertI64U_SS
    }
}
impl crate::OperatorCode for crate::op::F64ConvertI32S_RR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64ConvertI32S_RR
    }
}
impl crate::OperatorCode for crate::op::F64ConvertI32S_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64ConvertI32S_RS
    }
}
impl crate::OperatorCode for crate::op::F64ConvertI32S_SR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64ConvertI32S_SR
    }
}
impl crate::OperatorCode for crate::op::F64ConvertI32S_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64ConvertI32S_SS
    }
}
impl crate::OperatorCode for crate::op::F64ConvertI32U_RR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64ConvertI32U_RR
    }
}
impl crate::OperatorCode for crate::op::F64ConvertI32U_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64ConvertI32U_RS
    }
}
impl crate::OperatorCode for crate::op::F64ConvertI32U_SR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64ConvertI32U_SR
    }
}
impl crate::OperatorCode for crate::op::F64ConvertI32U_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64ConvertI32U_SS
    }
}
impl crate::OperatorCode for crate::op::F64ConvertI64S_RR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64ConvertI64S_RR
    }
}
impl crate::OperatorCode for crate::op::F64ConvertI64S_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64ConvertI64S_RS
    }
}
impl crate::OperatorCode for crate::op::F64ConvertI64S_SR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64ConvertI64S_SR
    }
}
impl crate::OperatorCode for crate::op::F64ConvertI64S_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64ConvertI64S_SS
    }
}
impl crate::OperatorCode for crate::op::F64ConvertI64U_RR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64ConvertI64U_RR
    }
}
impl crate::OperatorCode for crate::op::F64ConvertI64U_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64ConvertI64U_RS
    }
}
impl crate::OperatorCode for crate::op::F64ConvertI64U_SR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64ConvertI64U_SR
    }
}
impl crate::OperatorCode for crate::op::F64ConvertI64U_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64ConvertI64U_SS
    }
}
impl crate::OperatorCode for crate::op::I32TruncF32S_RR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32TruncF32S_RR
    }
}
impl crate::OperatorCode for crate::op::I32TruncF32S_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32TruncF32S_RS
    }
}
impl crate::OperatorCode for crate::op::I32TruncF32S_SR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32TruncF32S_SR
    }
}
impl crate::OperatorCode for crate::op::I32TruncF32S_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32TruncF32S_SS
    }
}
impl crate::OperatorCode for crate::op::I32TruncF32U_RR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32TruncF32U_RR
    }
}
impl crate::OperatorCode for crate::op::I32TruncF32U_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32TruncF32U_RS
    }
}
impl crate::OperatorCode for crate::op::I32TruncF32U_SR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32TruncF32U_SR
    }
}
impl crate::OperatorCode for crate::op::I32TruncF32U_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32TruncF32U_SS
    }
}
impl crate::OperatorCode for crate::op::I32TruncF64S_RR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32TruncF64S_RR
    }
}
impl crate::OperatorCode for crate::op::I32TruncF64S_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32TruncF64S_RS
    }
}
impl crate::OperatorCode for crate::op::I32TruncF64S_SR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32TruncF64S_SR
    }
}
impl crate::OperatorCode for crate::op::I32TruncF64S_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32TruncF64S_SS
    }
}
impl crate::OperatorCode for crate::op::I32TruncF64U_RR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32TruncF64U_RR
    }
}
impl crate::OperatorCode for crate::op::I32TruncF64U_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32TruncF64U_RS
    }
}
impl crate::OperatorCode for crate::op::I32TruncF64U_SR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32TruncF64U_SR
    }
}
impl crate::OperatorCode for crate::op::I32TruncF64U_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32TruncF64U_SS
    }
}
impl crate::OperatorCode for crate::op::I64TruncF32S_RR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64TruncF32S_RR
    }
}
impl crate::OperatorCode for crate::op::I64TruncF32S_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64TruncF32S_RS
    }
}
impl crate::OperatorCode for crate::op::I64TruncF32S_SR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64TruncF32S_SR
    }
}
impl crate::OperatorCode for crate::op::I64TruncF32S_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64TruncF32S_SS
    }
}
impl crate::OperatorCode for crate::op::I64TruncF32U_RR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64TruncF32U_RR
    }
}
impl crate::OperatorCode for crate::op::I64TruncF32U_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64TruncF32U_RS
    }
}
impl crate::OperatorCode for crate::op::I64TruncF32U_SR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64TruncF32U_SR
    }
}
impl crate::OperatorCode for crate::op::I64TruncF32U_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64TruncF32U_SS
    }
}
impl crate::OperatorCode for crate::op::I64TruncF64S_RR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64TruncF64S_RR
    }
}
impl crate::OperatorCode for crate::op::I64TruncF64S_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64TruncF64S_RS
    }
}
impl crate::OperatorCode for crate::op::I64TruncF64S_SR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64TruncF64S_SR
    }
}
impl crate::OperatorCode for crate::op::I64TruncF64S_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64TruncF64S_SS
    }
}
impl crate::OperatorCode for crate::op::I64TruncF64U_RR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64TruncF64U_RR
    }
}
impl crate::OperatorCode for crate::op::I64TruncF64U_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64TruncF64U_RS
    }
}
impl crate::OperatorCode for crate::op::I64TruncF64U_SR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64TruncF64U_SR
    }
}
impl crate::OperatorCode for crate::op::I64TruncF64U_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64TruncF64U_SS
    }
}
impl crate::OperatorCode for crate::op::I32TruncSatF32S_RR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32TruncSatF32S_RR
    }
}
impl crate::OperatorCode for crate::op::I32TruncSatF32S_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32TruncSatF32S_RS
    }
}
impl crate::OperatorCode for crate::op::I32TruncSatF32S_SR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32TruncSatF32S_SR
    }
}
impl crate::OperatorCode for crate::op::I32TruncSatF32S_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32TruncSatF32S_SS
    }
}
impl crate::OperatorCode for crate::op::I32TruncSatF32U_RR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32TruncSatF32U_RR
    }
}
impl crate::OperatorCode for crate::op::I32TruncSatF32U_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32TruncSatF32U_RS
    }
}
impl crate::OperatorCode for crate::op::I32TruncSatF32U_SR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32TruncSatF32U_SR
    }
}
impl crate::OperatorCode for crate::op::I32TruncSatF32U_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32TruncSatF32U_SS
    }
}
impl crate::OperatorCode for crate::op::I32TruncSatF64S_RR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32TruncSatF64S_RR
    }
}
impl crate::OperatorCode for crate::op::I32TruncSatF64S_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32TruncSatF64S_RS
    }
}
impl crate::OperatorCode for crate::op::I32TruncSatF64S_SR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32TruncSatF64S_SR
    }
}
impl crate::OperatorCode for crate::op::I32TruncSatF64S_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32TruncSatF64S_SS
    }
}
impl crate::OperatorCode for crate::op::I32TruncSatF64U_RR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32TruncSatF64U_RR
    }
}
impl crate::OperatorCode for crate::op::I32TruncSatF64U_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32TruncSatF64U_RS
    }
}
impl crate::OperatorCode for crate::op::I32TruncSatF64U_SR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32TruncSatF64U_SR
    }
}
impl crate::OperatorCode for crate::op::I32TruncSatF64U_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32TruncSatF64U_SS
    }
}
impl crate::OperatorCode for crate::op::I64TruncSatF32S_RR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64TruncSatF32S_RR
    }
}
impl crate::OperatorCode for crate::op::I64TruncSatF32S_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64TruncSatF32S_RS
    }
}
impl crate::OperatorCode for crate::op::I64TruncSatF32S_SR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64TruncSatF32S_SR
    }
}
impl crate::OperatorCode for crate::op::I64TruncSatF32S_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64TruncSatF32S_SS
    }
}
impl crate::OperatorCode for crate::op::I64TruncSatF32U_RR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64TruncSatF32U_RR
    }
}
impl crate::OperatorCode for crate::op::I64TruncSatF32U_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64TruncSatF32U_RS
    }
}
impl crate::OperatorCode for crate::op::I64TruncSatF32U_SR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64TruncSatF32U_SR
    }
}
impl crate::OperatorCode for crate::op::I64TruncSatF32U_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64TruncSatF32U_SS
    }
}
impl crate::OperatorCode for crate::op::I64TruncSatF64S_RR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64TruncSatF64S_RR
    }
}
impl crate::OperatorCode for crate::op::I64TruncSatF64S_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64TruncSatF64S_RS
    }
}
impl crate::OperatorCode for crate::op::I64TruncSatF64S_SR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64TruncSatF64S_SR
    }
}
impl crate::OperatorCode for crate::op::I64TruncSatF64S_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64TruncSatF64S_SS
    }
}
impl crate::OperatorCode for crate::op::I64TruncSatF64U_RR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64TruncSatF64U_RR
    }
}
impl crate::OperatorCode for crate::op::I64TruncSatF64U_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64TruncSatF64U_RS
    }
}
impl crate::OperatorCode for crate::op::I64TruncSatF64U_SR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64TruncSatF64U_SR
    }
}
impl crate::OperatorCode for crate::op::I64TruncSatF64U_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64TruncSatF64U_SS
    }
}
impl crate::OperatorCode for crate::op::I32Extend8S_RR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Extend8S_RR
    }
}
impl crate::OperatorCode for crate::op::I32Extend8S_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Extend8S_RS
    }
}
impl crate::OperatorCode for crate::op::I32Extend8S_SR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Extend8S_SR
    }
}
impl crate::OperatorCode for crate::op::I32Extend8S_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Extend8S_SS
    }
}
impl crate::OperatorCode for crate::op::I32Extend16S_RR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Extend16S_RR
    }
}
impl crate::OperatorCode for crate::op::I32Extend16S_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Extend16S_RS
    }
}
impl crate::OperatorCode for crate::op::I32Extend16S_SR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Extend16S_SR
    }
}
impl crate::OperatorCode for crate::op::I32Extend16S_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Extend16S_SS
    }
}
impl crate::OperatorCode for crate::op::I64Extend8S_RR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Extend8S_RR
    }
}
impl crate::OperatorCode for crate::op::I64Extend8S_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Extend8S_RS
    }
}
impl crate::OperatorCode for crate::op::I64Extend8S_SR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Extend8S_SR
    }
}
impl crate::OperatorCode for crate::op::I64Extend8S_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Extend8S_SS
    }
}
impl crate::OperatorCode for crate::op::I64Extend16S_RR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Extend16S_RR
    }
}
impl crate::OperatorCode for crate::op::I64Extend16S_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Extend16S_RS
    }
}
impl crate::OperatorCode for crate::op::I64Extend16S_SR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Extend16S_SR
    }
}
impl crate::OperatorCode for crate::op::I64Extend16S_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Extend16S_SS
    }
}
impl crate::OperatorCode for crate::op::I64Extend32S_RR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Extend32S_RR
    }
}
impl crate::OperatorCode for crate::op::I64Extend32S_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Extend32S_RS
    }
}
impl crate::OperatorCode for crate::op::I64Extend32S_SR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Extend32S_SR
    }
}
impl crate::OperatorCode for crate::op::I64Extend32S_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Extend32S_SS
    }
}
impl crate::OperatorCode for crate::op::I32WrapI64_RR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32WrapI64_RR
    }
}
impl crate::OperatorCode for crate::op::I32WrapI64_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32WrapI64_RS
    }
}
impl crate::OperatorCode for crate::op::I32WrapI64_SR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32WrapI64_SR
    }
}
impl crate::OperatorCode for crate::op::I32WrapI64_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32WrapI64_SS
    }
}
impl crate::OperatorCode for crate::op::I32Add_RRS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Add_RRS
    }
}
impl crate::OperatorCode for crate::op::I32Add_RRI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Add_RRI
    }
}
impl crate::OperatorCode for crate::op::I32Add_RSS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Add_RSS
    }
}
impl crate::OperatorCode for crate::op::I32Add_RSI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Add_RSI
    }
}
impl crate::OperatorCode for crate::op::I32Add_SRS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Add_SRS
    }
}
impl crate::OperatorCode for crate::op::I32Add_SRI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Add_SRI
    }
}
impl crate::OperatorCode for crate::op::I32Add_SSS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Add_SSS
    }
}
impl crate::OperatorCode for crate::op::I32Add_SSI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Add_SSI
    }
}
impl crate::OperatorCode for crate::op::I64Add_RRS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Add_RRS
    }
}
impl crate::OperatorCode for crate::op::I64Add_RRI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Add_RRI
    }
}
impl crate::OperatorCode for crate::op::I64Add_RSS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Add_RSS
    }
}
impl crate::OperatorCode for crate::op::I64Add_RSI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Add_RSI
    }
}
impl crate::OperatorCode for crate::op::I64Add_SRS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Add_SRS
    }
}
impl crate::OperatorCode for crate::op::I64Add_SRI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Add_SRI
    }
}
impl crate::OperatorCode for crate::op::I64Add_SSS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Add_SSS
    }
}
impl crate::OperatorCode for crate::op::I64Add_SSI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Add_SSI
    }
}
impl crate::OperatorCode for crate::op::I32Mul_RRS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Mul_RRS
    }
}
impl crate::OperatorCode for crate::op::I32Mul_RRI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Mul_RRI
    }
}
impl crate::OperatorCode for crate::op::I32Mul_RSS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Mul_RSS
    }
}
impl crate::OperatorCode for crate::op::I32Mul_RSI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Mul_RSI
    }
}
impl crate::OperatorCode for crate::op::I32Mul_SRS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Mul_SRS
    }
}
impl crate::OperatorCode for crate::op::I32Mul_SRI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Mul_SRI
    }
}
impl crate::OperatorCode for crate::op::I32Mul_SSS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Mul_SSS
    }
}
impl crate::OperatorCode for crate::op::I32Mul_SSI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Mul_SSI
    }
}
impl crate::OperatorCode for crate::op::I64Mul_RRS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Mul_RRS
    }
}
impl crate::OperatorCode for crate::op::I64Mul_RRI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Mul_RRI
    }
}
impl crate::OperatorCode for crate::op::I64Mul_RSS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Mul_RSS
    }
}
impl crate::OperatorCode for crate::op::I64Mul_RSI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Mul_RSI
    }
}
impl crate::OperatorCode for crate::op::I64Mul_SRS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Mul_SRS
    }
}
impl crate::OperatorCode for crate::op::I64Mul_SRI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Mul_SRI
    }
}
impl crate::OperatorCode for crate::op::I64Mul_SSS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Mul_SSS
    }
}
impl crate::OperatorCode for crate::op::I64Mul_SSI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Mul_SSI
    }
}
impl crate::OperatorCode for crate::op::I32And_RRS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32And_RRS
    }
}
impl crate::OperatorCode for crate::op::I32And_RRI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32And_RRI
    }
}
impl crate::OperatorCode for crate::op::I32And_RSS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32And_RSS
    }
}
impl crate::OperatorCode for crate::op::I32And_RSI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32And_RSI
    }
}
impl crate::OperatorCode for crate::op::I32And_SRS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32And_SRS
    }
}
impl crate::OperatorCode for crate::op::I32And_SRI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32And_SRI
    }
}
impl crate::OperatorCode for crate::op::I32And_SSS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32And_SSS
    }
}
impl crate::OperatorCode for crate::op::I32And_SSI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32And_SSI
    }
}
impl crate::OperatorCode for crate::op::I64And_RRS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64And_RRS
    }
}
impl crate::OperatorCode for crate::op::I64And_RRI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64And_RRI
    }
}
impl crate::OperatorCode for crate::op::I64And_RSS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64And_RSS
    }
}
impl crate::OperatorCode for crate::op::I64And_RSI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64And_RSI
    }
}
impl crate::OperatorCode for crate::op::I64And_SRS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64And_SRS
    }
}
impl crate::OperatorCode for crate::op::I64And_SRI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64And_SRI
    }
}
impl crate::OperatorCode for crate::op::I64And_SSS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64And_SSS
    }
}
impl crate::OperatorCode for crate::op::I64And_SSI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64And_SSI
    }
}
impl crate::OperatorCode for crate::op::I32Or_RRS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Or_RRS
    }
}
impl crate::OperatorCode for crate::op::I32Or_RRI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Or_RRI
    }
}
impl crate::OperatorCode for crate::op::I32Or_RSS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Or_RSS
    }
}
impl crate::OperatorCode for crate::op::I32Or_RSI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Or_RSI
    }
}
impl crate::OperatorCode for crate::op::I32Or_SRS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Or_SRS
    }
}
impl crate::OperatorCode for crate::op::I32Or_SRI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Or_SRI
    }
}
impl crate::OperatorCode for crate::op::I32Or_SSS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Or_SSS
    }
}
impl crate::OperatorCode for crate::op::I32Or_SSI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Or_SSI
    }
}
impl crate::OperatorCode for crate::op::I64Or_RRS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Or_RRS
    }
}
impl crate::OperatorCode for crate::op::I64Or_RRI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Or_RRI
    }
}
impl crate::OperatorCode for crate::op::I64Or_RSS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Or_RSS
    }
}
impl crate::OperatorCode for crate::op::I64Or_RSI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Or_RSI
    }
}
impl crate::OperatorCode for crate::op::I64Or_SRS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Or_SRS
    }
}
impl crate::OperatorCode for crate::op::I64Or_SRI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Or_SRI
    }
}
impl crate::OperatorCode for crate::op::I64Or_SSS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Or_SSS
    }
}
impl crate::OperatorCode for crate::op::I64Or_SSI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Or_SSI
    }
}
impl crate::OperatorCode for crate::op::I32Xor_RRS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Xor_RRS
    }
}
impl crate::OperatorCode for crate::op::I32Xor_RRI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Xor_RRI
    }
}
impl crate::OperatorCode for crate::op::I32Xor_RSS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Xor_RSS
    }
}
impl crate::OperatorCode for crate::op::I32Xor_RSI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Xor_RSI
    }
}
impl crate::OperatorCode for crate::op::I32Xor_SRS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Xor_SRS
    }
}
impl crate::OperatorCode for crate::op::I32Xor_SRI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Xor_SRI
    }
}
impl crate::OperatorCode for crate::op::I32Xor_SSS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Xor_SSS
    }
}
impl crate::OperatorCode for crate::op::I32Xor_SSI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Xor_SSI
    }
}
impl crate::OperatorCode for crate::op::I64Xor_RRS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Xor_RRS
    }
}
impl crate::OperatorCode for crate::op::I64Xor_RRI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Xor_RRI
    }
}
impl crate::OperatorCode for crate::op::I64Xor_RSS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Xor_RSS
    }
}
impl crate::OperatorCode for crate::op::I64Xor_RSI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Xor_RSI
    }
}
impl crate::OperatorCode for crate::op::I64Xor_SRS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Xor_SRS
    }
}
impl crate::OperatorCode for crate::op::I64Xor_SRI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Xor_SRI
    }
}
impl crate::OperatorCode for crate::op::I64Xor_SSS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Xor_SSS
    }
}
impl crate::OperatorCode for crate::op::I64Xor_SSI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Xor_SSI
    }
}
impl crate::OperatorCode for crate::op::I32Eq_RRS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Eq_RRS
    }
}
impl crate::OperatorCode for crate::op::I32Eq_RRI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Eq_RRI
    }
}
impl crate::OperatorCode for crate::op::I32Eq_RSS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Eq_RSS
    }
}
impl crate::OperatorCode for crate::op::I32Eq_RSI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Eq_RSI
    }
}
impl crate::OperatorCode for crate::op::I32Eq_SRS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Eq_SRS
    }
}
impl crate::OperatorCode for crate::op::I32Eq_SRI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Eq_SRI
    }
}
impl crate::OperatorCode for crate::op::I32Eq_SSS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Eq_SSS
    }
}
impl crate::OperatorCode for crate::op::I32Eq_SSI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Eq_SSI
    }
}
impl crate::OperatorCode for crate::op::I64Eq_RRS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Eq_RRS
    }
}
impl crate::OperatorCode for crate::op::I64Eq_RRI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Eq_RRI
    }
}
impl crate::OperatorCode for crate::op::I64Eq_RSS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Eq_RSS
    }
}
impl crate::OperatorCode for crate::op::I64Eq_RSI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Eq_RSI
    }
}
impl crate::OperatorCode for crate::op::I64Eq_SRS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Eq_SRS
    }
}
impl crate::OperatorCode for crate::op::I64Eq_SRI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Eq_SRI
    }
}
impl crate::OperatorCode for crate::op::I64Eq_SSS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Eq_SSS
    }
}
impl crate::OperatorCode for crate::op::I64Eq_SSI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Eq_SSI
    }
}
impl crate::OperatorCode for crate::op::I32Ne_RRS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Ne_RRS
    }
}
impl crate::OperatorCode for crate::op::I32Ne_RRI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Ne_RRI
    }
}
impl crate::OperatorCode for crate::op::I32Ne_RSS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Ne_RSS
    }
}
impl crate::OperatorCode for crate::op::I32Ne_RSI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Ne_RSI
    }
}
impl crate::OperatorCode for crate::op::I32Ne_SRS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Ne_SRS
    }
}
impl crate::OperatorCode for crate::op::I32Ne_SRI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Ne_SRI
    }
}
impl crate::OperatorCode for crate::op::I32Ne_SSS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Ne_SSS
    }
}
impl crate::OperatorCode for crate::op::I32Ne_SSI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Ne_SSI
    }
}
impl crate::OperatorCode for crate::op::I64Ne_RRS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Ne_RRS
    }
}
impl crate::OperatorCode for crate::op::I64Ne_RRI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Ne_RRI
    }
}
impl crate::OperatorCode for crate::op::I64Ne_RSS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Ne_RSS
    }
}
impl crate::OperatorCode for crate::op::I64Ne_RSI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Ne_RSI
    }
}
impl crate::OperatorCode for crate::op::I64Ne_SRS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Ne_SRS
    }
}
impl crate::OperatorCode for crate::op::I64Ne_SRI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Ne_SRI
    }
}
impl crate::OperatorCode for crate::op::I64Ne_SSS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Ne_SSS
    }
}
impl crate::OperatorCode for crate::op::I64Ne_SSI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Ne_SSI
    }
}
impl crate::OperatorCode for crate::op::F32Add_RRS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Add_RRS
    }
}
impl crate::OperatorCode for crate::op::F32Add_RRI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Add_RRI
    }
}
impl crate::OperatorCode for crate::op::F32Add_RSS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Add_RSS
    }
}
impl crate::OperatorCode for crate::op::F32Add_RSI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Add_RSI
    }
}
impl crate::OperatorCode for crate::op::F32Add_SRS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Add_SRS
    }
}
impl crate::OperatorCode for crate::op::F32Add_SRI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Add_SRI
    }
}
impl crate::OperatorCode for crate::op::F32Add_SSS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Add_SSS
    }
}
impl crate::OperatorCode for crate::op::F32Add_SSI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Add_SSI
    }
}
impl crate::OperatorCode for crate::op::F64Add_RRS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Add_RRS
    }
}
impl crate::OperatorCode for crate::op::F64Add_RRI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Add_RRI
    }
}
impl crate::OperatorCode for crate::op::F64Add_RSS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Add_RSS
    }
}
impl crate::OperatorCode for crate::op::F64Add_RSI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Add_RSI
    }
}
impl crate::OperatorCode for crate::op::F64Add_SRS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Add_SRS
    }
}
impl crate::OperatorCode for crate::op::F64Add_SRI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Add_SRI
    }
}
impl crate::OperatorCode for crate::op::F64Add_SSS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Add_SSS
    }
}
impl crate::OperatorCode for crate::op::F64Add_SSI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Add_SSI
    }
}
impl crate::OperatorCode for crate::op::F32Mul_RRS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Mul_RRS
    }
}
impl crate::OperatorCode for crate::op::F32Mul_RRI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Mul_RRI
    }
}
impl crate::OperatorCode for crate::op::F32Mul_RSS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Mul_RSS
    }
}
impl crate::OperatorCode for crate::op::F32Mul_RSI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Mul_RSI
    }
}
impl crate::OperatorCode for crate::op::F32Mul_SRS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Mul_SRS
    }
}
impl crate::OperatorCode for crate::op::F32Mul_SRI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Mul_SRI
    }
}
impl crate::OperatorCode for crate::op::F32Mul_SSS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Mul_SSS
    }
}
impl crate::OperatorCode for crate::op::F32Mul_SSI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Mul_SSI
    }
}
impl crate::OperatorCode for crate::op::F64Mul_RRS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Mul_RRS
    }
}
impl crate::OperatorCode for crate::op::F64Mul_RRI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Mul_RRI
    }
}
impl crate::OperatorCode for crate::op::F64Mul_RSS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Mul_RSS
    }
}
impl crate::OperatorCode for crate::op::F64Mul_RSI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Mul_RSI
    }
}
impl crate::OperatorCode for crate::op::F64Mul_SRS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Mul_SRS
    }
}
impl crate::OperatorCode for crate::op::F64Mul_SRI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Mul_SRI
    }
}
impl crate::OperatorCode for crate::op::F64Mul_SSS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Mul_SSS
    }
}
impl crate::OperatorCode for crate::op::F64Mul_SSI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Mul_SSI
    }
}
impl crate::OperatorCode for crate::op::F32Eq_RRS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Eq_RRS
    }
}
impl crate::OperatorCode for crate::op::F32Eq_RRI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Eq_RRI
    }
}
impl crate::OperatorCode for crate::op::F32Eq_RSS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Eq_RSS
    }
}
impl crate::OperatorCode for crate::op::F32Eq_RSI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Eq_RSI
    }
}
impl crate::OperatorCode for crate::op::F32Eq_SRS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Eq_SRS
    }
}
impl crate::OperatorCode for crate::op::F32Eq_SRI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Eq_SRI
    }
}
impl crate::OperatorCode for crate::op::F32Eq_SSS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Eq_SSS
    }
}
impl crate::OperatorCode for crate::op::F32Eq_SSI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Eq_SSI
    }
}
impl crate::OperatorCode for crate::op::F64Eq_RRS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Eq_RRS
    }
}
impl crate::OperatorCode for crate::op::F64Eq_RRI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Eq_RRI
    }
}
impl crate::OperatorCode for crate::op::F64Eq_RSS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Eq_RSS
    }
}
impl crate::OperatorCode for crate::op::F64Eq_RSI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Eq_RSI
    }
}
impl crate::OperatorCode for crate::op::F64Eq_SRS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Eq_SRS
    }
}
impl crate::OperatorCode for crate::op::F64Eq_SRI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Eq_SRI
    }
}
impl crate::OperatorCode for crate::op::F64Eq_SSS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Eq_SSS
    }
}
impl crate::OperatorCode for crate::op::F64Eq_SSI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Eq_SSI
    }
}
impl crate::OperatorCode for crate::op::F32Ne_RRS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Ne_RRS
    }
}
impl crate::OperatorCode for crate::op::F32Ne_RRI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Ne_RRI
    }
}
impl crate::OperatorCode for crate::op::F32Ne_RSS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Ne_RSS
    }
}
impl crate::OperatorCode for crate::op::F32Ne_RSI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Ne_RSI
    }
}
impl crate::OperatorCode for crate::op::F32Ne_SRS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Ne_SRS
    }
}
impl crate::OperatorCode for crate::op::F32Ne_SRI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Ne_SRI
    }
}
impl crate::OperatorCode for crate::op::F32Ne_SSS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Ne_SSS
    }
}
impl crate::OperatorCode for crate::op::F32Ne_SSI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Ne_SSI
    }
}
impl crate::OperatorCode for crate::op::F64Ne_RRS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Ne_RRS
    }
}
impl crate::OperatorCode for crate::op::F64Ne_RRI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Ne_RRI
    }
}
impl crate::OperatorCode for crate::op::F64Ne_RSS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Ne_RSS
    }
}
impl crate::OperatorCode for crate::op::F64Ne_RSI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Ne_RSI
    }
}
impl crate::OperatorCode for crate::op::F64Ne_SRS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Ne_SRS
    }
}
impl crate::OperatorCode for crate::op::F64Ne_SRI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Ne_SRI
    }
}
impl crate::OperatorCode for crate::op::F64Ne_SSS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Ne_SSS
    }
}
impl crate::OperatorCode for crate::op::F64Ne_SSI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Ne_SSI
    }
}
impl crate::OperatorCode for crate::op::F32Min_RRS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Min_RRS
    }
}
impl crate::OperatorCode for crate::op::F32Min_RRI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Min_RRI
    }
}
impl crate::OperatorCode for crate::op::F32Min_RSS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Min_RSS
    }
}
impl crate::OperatorCode for crate::op::F32Min_RSI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Min_RSI
    }
}
impl crate::OperatorCode for crate::op::F32Min_SRS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Min_SRS
    }
}
impl crate::OperatorCode for crate::op::F32Min_SRI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Min_SRI
    }
}
impl crate::OperatorCode for crate::op::F32Min_SSS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Min_SSS
    }
}
impl crate::OperatorCode for crate::op::F32Min_SSI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Min_SSI
    }
}
impl crate::OperatorCode for crate::op::F64Min_RRS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Min_RRS
    }
}
impl crate::OperatorCode for crate::op::F64Min_RRI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Min_RRI
    }
}
impl crate::OperatorCode for crate::op::F64Min_RSS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Min_RSS
    }
}
impl crate::OperatorCode for crate::op::F64Min_RSI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Min_RSI
    }
}
impl crate::OperatorCode for crate::op::F64Min_SRS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Min_SRS
    }
}
impl crate::OperatorCode for crate::op::F64Min_SRI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Min_SRI
    }
}
impl crate::OperatorCode for crate::op::F64Min_SSS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Min_SSS
    }
}
impl crate::OperatorCode for crate::op::F64Min_SSI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Min_SSI
    }
}
impl crate::OperatorCode for crate::op::F32Max_RRS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Max_RRS
    }
}
impl crate::OperatorCode for crate::op::F32Max_RRI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Max_RRI
    }
}
impl crate::OperatorCode for crate::op::F32Max_RSS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Max_RSS
    }
}
impl crate::OperatorCode for crate::op::F32Max_RSI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Max_RSI
    }
}
impl crate::OperatorCode for crate::op::F32Max_SRS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Max_SRS
    }
}
impl crate::OperatorCode for crate::op::F32Max_SRI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Max_SRI
    }
}
impl crate::OperatorCode for crate::op::F32Max_SSS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Max_SSS
    }
}
impl crate::OperatorCode for crate::op::F32Max_SSI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Max_SSI
    }
}
impl crate::OperatorCode for crate::op::F64Max_RRS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Max_RRS
    }
}
impl crate::OperatorCode for crate::op::F64Max_RRI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Max_RRI
    }
}
impl crate::OperatorCode for crate::op::F64Max_RSS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Max_RSS
    }
}
impl crate::OperatorCode for crate::op::F64Max_RSI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Max_RSI
    }
}
impl crate::OperatorCode for crate::op::F64Max_SRS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Max_SRS
    }
}
impl crate::OperatorCode for crate::op::F64Max_SRI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Max_SRI
    }
}
impl crate::OperatorCode for crate::op::F64Max_SSS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Max_SSS
    }
}
impl crate::OperatorCode for crate::op::F64Max_SSI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Max_SSI
    }
}
impl crate::OperatorCode for crate::op::I32Sub_RRS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Sub_RRS
    }
}
impl crate::OperatorCode for crate::op::I32Sub_RRI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Sub_RRI
    }
}
impl crate::OperatorCode for crate::op::I32Sub_RSR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Sub_RSR
    }
}
impl crate::OperatorCode for crate::op::I32Sub_RSS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Sub_RSS
    }
}
impl crate::OperatorCode for crate::op::I32Sub_RSI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Sub_RSI
    }
}
impl crate::OperatorCode for crate::op::I32Sub_RIR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Sub_RIR
    }
}
impl crate::OperatorCode for crate::op::I32Sub_RIS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Sub_RIS
    }
}
impl crate::OperatorCode for crate::op::I64Sub_RRS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Sub_RRS
    }
}
impl crate::OperatorCode for crate::op::I64Sub_RRI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Sub_RRI
    }
}
impl crate::OperatorCode for crate::op::I64Sub_RSR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Sub_RSR
    }
}
impl crate::OperatorCode for crate::op::I64Sub_RSS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Sub_RSS
    }
}
impl crate::OperatorCode for crate::op::I64Sub_RSI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Sub_RSI
    }
}
impl crate::OperatorCode for crate::op::I64Sub_RIR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Sub_RIR
    }
}
impl crate::OperatorCode for crate::op::I64Sub_RIS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Sub_RIS
    }
}
impl crate::OperatorCode for crate::op::I32LtS_RRS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32LtS_RRS
    }
}
impl crate::OperatorCode for crate::op::I32LtS_RRI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32LtS_RRI
    }
}
impl crate::OperatorCode for crate::op::I32LtS_RSR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32LtS_RSR
    }
}
impl crate::OperatorCode for crate::op::I32LtS_RSS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32LtS_RSS
    }
}
impl crate::OperatorCode for crate::op::I32LtS_RSI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32LtS_RSI
    }
}
impl crate::OperatorCode for crate::op::I32LtS_RIR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32LtS_RIR
    }
}
impl crate::OperatorCode for crate::op::I32LtS_RIS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32LtS_RIS
    }
}
impl crate::OperatorCode for crate::op::I64LtS_RRS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64LtS_RRS
    }
}
impl crate::OperatorCode for crate::op::I64LtS_RRI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64LtS_RRI
    }
}
impl crate::OperatorCode for crate::op::I64LtS_RSR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64LtS_RSR
    }
}
impl crate::OperatorCode for crate::op::I64LtS_RSS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64LtS_RSS
    }
}
impl crate::OperatorCode for crate::op::I64LtS_RSI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64LtS_RSI
    }
}
impl crate::OperatorCode for crate::op::I64LtS_RIR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64LtS_RIR
    }
}
impl crate::OperatorCode for crate::op::I64LtS_RIS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64LtS_RIS
    }
}
impl crate::OperatorCode for crate::op::I32LtU_RRS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32LtU_RRS
    }
}
impl crate::OperatorCode for crate::op::I32LtU_RRI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32LtU_RRI
    }
}
impl crate::OperatorCode for crate::op::I32LtU_RSR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32LtU_RSR
    }
}
impl crate::OperatorCode for crate::op::I32LtU_RSS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32LtU_RSS
    }
}
impl crate::OperatorCode for crate::op::I32LtU_RSI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32LtU_RSI
    }
}
impl crate::OperatorCode for crate::op::I32LtU_RIR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32LtU_RIR
    }
}
impl crate::OperatorCode for crate::op::I32LtU_RIS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32LtU_RIS
    }
}
impl crate::OperatorCode for crate::op::I64LtU_RRS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64LtU_RRS
    }
}
impl crate::OperatorCode for crate::op::I64LtU_RRI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64LtU_RRI
    }
}
impl crate::OperatorCode for crate::op::I64LtU_RSR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64LtU_RSR
    }
}
impl crate::OperatorCode for crate::op::I64LtU_RSS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64LtU_RSS
    }
}
impl crate::OperatorCode for crate::op::I64LtU_RSI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64LtU_RSI
    }
}
impl crate::OperatorCode for crate::op::I64LtU_RIR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64LtU_RIR
    }
}
impl crate::OperatorCode for crate::op::I64LtU_RIS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64LtU_RIS
    }
}
impl crate::OperatorCode for crate::op::I32LeS_RRS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32LeS_RRS
    }
}
impl crate::OperatorCode for crate::op::I32LeS_RRI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32LeS_RRI
    }
}
impl crate::OperatorCode for crate::op::I32LeS_RSR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32LeS_RSR
    }
}
impl crate::OperatorCode for crate::op::I32LeS_RSS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32LeS_RSS
    }
}
impl crate::OperatorCode for crate::op::I32LeS_RSI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32LeS_RSI
    }
}
impl crate::OperatorCode for crate::op::I32LeS_RIR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32LeS_RIR
    }
}
impl crate::OperatorCode for crate::op::I32LeS_RIS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32LeS_RIS
    }
}
impl crate::OperatorCode for crate::op::I64LeS_RRS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64LeS_RRS
    }
}
impl crate::OperatorCode for crate::op::I64LeS_RRI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64LeS_RRI
    }
}
impl crate::OperatorCode for crate::op::I64LeS_RSR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64LeS_RSR
    }
}
impl crate::OperatorCode for crate::op::I64LeS_RSS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64LeS_RSS
    }
}
impl crate::OperatorCode for crate::op::I64LeS_RSI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64LeS_RSI
    }
}
impl crate::OperatorCode for crate::op::I64LeS_RIR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64LeS_RIR
    }
}
impl crate::OperatorCode for crate::op::I64LeS_RIS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64LeS_RIS
    }
}
impl crate::OperatorCode for crate::op::I32LeU_RRS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32LeU_RRS
    }
}
impl crate::OperatorCode for crate::op::I32LeU_RRI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32LeU_RRI
    }
}
impl crate::OperatorCode for crate::op::I32LeU_RSR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32LeU_RSR
    }
}
impl crate::OperatorCode for crate::op::I32LeU_RSS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32LeU_RSS
    }
}
impl crate::OperatorCode for crate::op::I32LeU_RSI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32LeU_RSI
    }
}
impl crate::OperatorCode for crate::op::I32LeU_RIR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32LeU_RIR
    }
}
impl crate::OperatorCode for crate::op::I32LeU_RIS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32LeU_RIS
    }
}
impl crate::OperatorCode for crate::op::I64LeU_RRS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64LeU_RRS
    }
}
impl crate::OperatorCode for crate::op::I64LeU_RRI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64LeU_RRI
    }
}
impl crate::OperatorCode for crate::op::I64LeU_RSR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64LeU_RSR
    }
}
impl crate::OperatorCode for crate::op::I64LeU_RSS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64LeU_RSS
    }
}
impl crate::OperatorCode for crate::op::I64LeU_RSI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64LeU_RSI
    }
}
impl crate::OperatorCode for crate::op::I64LeU_RIR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64LeU_RIR
    }
}
impl crate::OperatorCode for crate::op::I64LeU_RIS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64LeU_RIS
    }
}
impl crate::OperatorCode for crate::op::I32DivS_RRS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32DivS_RRS
    }
}
impl crate::OperatorCode for crate::op::I32DivS_RRI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32DivS_RRI
    }
}
impl crate::OperatorCode for crate::op::I32DivS_RSR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32DivS_RSR
    }
}
impl crate::OperatorCode for crate::op::I32DivS_RSS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32DivS_RSS
    }
}
impl crate::OperatorCode for crate::op::I32DivS_RSI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32DivS_RSI
    }
}
impl crate::OperatorCode for crate::op::I32DivS_RIR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32DivS_RIR
    }
}
impl crate::OperatorCode for crate::op::I32DivS_RIS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32DivS_RIS
    }
}
impl crate::OperatorCode for crate::op::I64DivS_RRS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64DivS_RRS
    }
}
impl crate::OperatorCode for crate::op::I64DivS_RRI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64DivS_RRI
    }
}
impl crate::OperatorCode for crate::op::I64DivS_RSR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64DivS_RSR
    }
}
impl crate::OperatorCode for crate::op::I64DivS_RSS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64DivS_RSS
    }
}
impl crate::OperatorCode for crate::op::I64DivS_RSI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64DivS_RSI
    }
}
impl crate::OperatorCode for crate::op::I64DivS_RIR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64DivS_RIR
    }
}
impl crate::OperatorCode for crate::op::I64DivS_RIS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64DivS_RIS
    }
}
impl crate::OperatorCode for crate::op::I32DivU_RRS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32DivU_RRS
    }
}
impl crate::OperatorCode for crate::op::I32DivU_RRI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32DivU_RRI
    }
}
impl crate::OperatorCode for crate::op::I32DivU_RSR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32DivU_RSR
    }
}
impl crate::OperatorCode for crate::op::I32DivU_RSS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32DivU_RSS
    }
}
impl crate::OperatorCode for crate::op::I32DivU_RSI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32DivU_RSI
    }
}
impl crate::OperatorCode for crate::op::I32DivU_RIR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32DivU_RIR
    }
}
impl crate::OperatorCode for crate::op::I32DivU_RIS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32DivU_RIS
    }
}
impl crate::OperatorCode for crate::op::I64DivU_RRS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64DivU_RRS
    }
}
impl crate::OperatorCode for crate::op::I64DivU_RRI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64DivU_RRI
    }
}
impl crate::OperatorCode for crate::op::I64DivU_RSR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64DivU_RSR
    }
}
impl crate::OperatorCode for crate::op::I64DivU_RSS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64DivU_RSS
    }
}
impl crate::OperatorCode for crate::op::I64DivU_RSI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64DivU_RSI
    }
}
impl crate::OperatorCode for crate::op::I64DivU_RIR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64DivU_RIR
    }
}
impl crate::OperatorCode for crate::op::I64DivU_RIS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64DivU_RIS
    }
}
impl crate::OperatorCode for crate::op::I32RemS_RRS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32RemS_RRS
    }
}
impl crate::OperatorCode for crate::op::I32RemS_RRI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32RemS_RRI
    }
}
impl crate::OperatorCode for crate::op::I32RemS_RSR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32RemS_RSR
    }
}
impl crate::OperatorCode for crate::op::I32RemS_RSS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32RemS_RSS
    }
}
impl crate::OperatorCode for crate::op::I32RemS_RSI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32RemS_RSI
    }
}
impl crate::OperatorCode for crate::op::I32RemS_RIR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32RemS_RIR
    }
}
impl crate::OperatorCode for crate::op::I32RemS_RIS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32RemS_RIS
    }
}
impl crate::OperatorCode for crate::op::I64RemS_RRS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64RemS_RRS
    }
}
impl crate::OperatorCode for crate::op::I64RemS_RRI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64RemS_RRI
    }
}
impl crate::OperatorCode for crate::op::I64RemS_RSR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64RemS_RSR
    }
}
impl crate::OperatorCode for crate::op::I64RemS_RSS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64RemS_RSS
    }
}
impl crate::OperatorCode for crate::op::I64RemS_RSI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64RemS_RSI
    }
}
impl crate::OperatorCode for crate::op::I64RemS_RIR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64RemS_RIR
    }
}
impl crate::OperatorCode for crate::op::I64RemS_RIS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64RemS_RIS
    }
}
impl crate::OperatorCode for crate::op::I32RemU_RRS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32RemU_RRS
    }
}
impl crate::OperatorCode for crate::op::I32RemU_RRI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32RemU_RRI
    }
}
impl crate::OperatorCode for crate::op::I32RemU_RSR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32RemU_RSR
    }
}
impl crate::OperatorCode for crate::op::I32RemU_RSS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32RemU_RSS
    }
}
impl crate::OperatorCode for crate::op::I32RemU_RSI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32RemU_RSI
    }
}
impl crate::OperatorCode for crate::op::I32RemU_RIR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32RemU_RIR
    }
}
impl crate::OperatorCode for crate::op::I32RemU_RIS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32RemU_RIS
    }
}
impl crate::OperatorCode for crate::op::I64RemU_RRS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64RemU_RRS
    }
}
impl crate::OperatorCode for crate::op::I64RemU_RRI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64RemU_RRI
    }
}
impl crate::OperatorCode for crate::op::I64RemU_RSR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64RemU_RSR
    }
}
impl crate::OperatorCode for crate::op::I64RemU_RSS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64RemU_RSS
    }
}
impl crate::OperatorCode for crate::op::I64RemU_RSI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64RemU_RSI
    }
}
impl crate::OperatorCode for crate::op::I64RemU_RIR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64RemU_RIR
    }
}
impl crate::OperatorCode for crate::op::I64RemU_RIS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64RemU_RIS
    }
}
impl crate::OperatorCode for crate::op::I32Shl_RRS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Shl_RRS
    }
}
impl crate::OperatorCode for crate::op::I32Shl_RRI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Shl_RRI
    }
}
impl crate::OperatorCode for crate::op::I32Shl_RSR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Shl_RSR
    }
}
impl crate::OperatorCode for crate::op::I32Shl_RSS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Shl_RSS
    }
}
impl crate::OperatorCode for crate::op::I32Shl_RSI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Shl_RSI
    }
}
impl crate::OperatorCode for crate::op::I32Shl_RIR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Shl_RIR
    }
}
impl crate::OperatorCode for crate::op::I32Shl_RIS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Shl_RIS
    }
}
impl crate::OperatorCode for crate::op::I64Shl_RRS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Shl_RRS
    }
}
impl crate::OperatorCode for crate::op::I64Shl_RRI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Shl_RRI
    }
}
impl crate::OperatorCode for crate::op::I64Shl_RSR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Shl_RSR
    }
}
impl crate::OperatorCode for crate::op::I64Shl_RSS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Shl_RSS
    }
}
impl crate::OperatorCode for crate::op::I64Shl_RSI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Shl_RSI
    }
}
impl crate::OperatorCode for crate::op::I64Shl_RIR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Shl_RIR
    }
}
impl crate::OperatorCode for crate::op::I64Shl_RIS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Shl_RIS
    }
}
impl crate::OperatorCode for crate::op::I32ShrS_RRS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32ShrS_RRS
    }
}
impl crate::OperatorCode for crate::op::I32ShrS_RRI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32ShrS_RRI
    }
}
impl crate::OperatorCode for crate::op::I32ShrS_RSR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32ShrS_RSR
    }
}
impl crate::OperatorCode for crate::op::I32ShrS_RSS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32ShrS_RSS
    }
}
impl crate::OperatorCode for crate::op::I32ShrS_RSI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32ShrS_RSI
    }
}
impl crate::OperatorCode for crate::op::I32ShrS_RIR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32ShrS_RIR
    }
}
impl crate::OperatorCode for crate::op::I32ShrS_RIS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32ShrS_RIS
    }
}
impl crate::OperatorCode for crate::op::I64ShrS_RRS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64ShrS_RRS
    }
}
impl crate::OperatorCode for crate::op::I64ShrS_RRI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64ShrS_RRI
    }
}
impl crate::OperatorCode for crate::op::I64ShrS_RSR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64ShrS_RSR
    }
}
impl crate::OperatorCode for crate::op::I64ShrS_RSS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64ShrS_RSS
    }
}
impl crate::OperatorCode for crate::op::I64ShrS_RSI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64ShrS_RSI
    }
}
impl crate::OperatorCode for crate::op::I64ShrS_RIR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64ShrS_RIR
    }
}
impl crate::OperatorCode for crate::op::I64ShrS_RIS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64ShrS_RIS
    }
}
impl crate::OperatorCode for crate::op::I32ShrU_RRS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32ShrU_RRS
    }
}
impl crate::OperatorCode for crate::op::I32ShrU_RRI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32ShrU_RRI
    }
}
impl crate::OperatorCode for crate::op::I32ShrU_RSR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32ShrU_RSR
    }
}
impl crate::OperatorCode for crate::op::I32ShrU_RSS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32ShrU_RSS
    }
}
impl crate::OperatorCode for crate::op::I32ShrU_RSI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32ShrU_RSI
    }
}
impl crate::OperatorCode for crate::op::I32ShrU_RIR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32ShrU_RIR
    }
}
impl crate::OperatorCode for crate::op::I32ShrU_RIS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32ShrU_RIS
    }
}
impl crate::OperatorCode for crate::op::I64ShrU_RRS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64ShrU_RRS
    }
}
impl crate::OperatorCode for crate::op::I64ShrU_RRI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64ShrU_RRI
    }
}
impl crate::OperatorCode for crate::op::I64ShrU_RSR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64ShrU_RSR
    }
}
impl crate::OperatorCode for crate::op::I64ShrU_RSS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64ShrU_RSS
    }
}
impl crate::OperatorCode for crate::op::I64ShrU_RSI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64ShrU_RSI
    }
}
impl crate::OperatorCode for crate::op::I64ShrU_RIR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64ShrU_RIR
    }
}
impl crate::OperatorCode for crate::op::I64ShrU_RIS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64ShrU_RIS
    }
}
impl crate::OperatorCode for crate::op::I32Rotl_RRS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Rotl_RRS
    }
}
impl crate::OperatorCode for crate::op::I32Rotl_RRI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Rotl_RRI
    }
}
impl crate::OperatorCode for crate::op::I32Rotl_RSR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Rotl_RSR
    }
}
impl crate::OperatorCode for crate::op::I32Rotl_RSS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Rotl_RSS
    }
}
impl crate::OperatorCode for crate::op::I32Rotl_RSI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Rotl_RSI
    }
}
impl crate::OperatorCode for crate::op::I32Rotl_RIR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Rotl_RIR
    }
}
impl crate::OperatorCode for crate::op::I32Rotl_RIS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Rotl_RIS
    }
}
impl crate::OperatorCode for crate::op::I64Rotl_RRS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Rotl_RRS
    }
}
impl crate::OperatorCode for crate::op::I64Rotl_RRI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Rotl_RRI
    }
}
impl crate::OperatorCode for crate::op::I64Rotl_RSR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Rotl_RSR
    }
}
impl crate::OperatorCode for crate::op::I64Rotl_RSS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Rotl_RSS
    }
}
impl crate::OperatorCode for crate::op::I64Rotl_RSI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Rotl_RSI
    }
}
impl crate::OperatorCode for crate::op::I64Rotl_RIR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Rotl_RIR
    }
}
impl crate::OperatorCode for crate::op::I64Rotl_RIS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Rotl_RIS
    }
}
impl crate::OperatorCode for crate::op::I32Rotr_RRS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Rotr_RRS
    }
}
impl crate::OperatorCode for crate::op::I32Rotr_RRI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Rotr_RRI
    }
}
impl crate::OperatorCode for crate::op::I32Rotr_RSR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Rotr_RSR
    }
}
impl crate::OperatorCode for crate::op::I32Rotr_RSS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Rotr_RSS
    }
}
impl crate::OperatorCode for crate::op::I32Rotr_RSI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Rotr_RSI
    }
}
impl crate::OperatorCode for crate::op::I32Rotr_RIR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Rotr_RIR
    }
}
impl crate::OperatorCode for crate::op::I32Rotr_RIS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Rotr_RIS
    }
}
impl crate::OperatorCode for crate::op::I64Rotr_RRS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Rotr_RRS
    }
}
impl crate::OperatorCode for crate::op::I64Rotr_RRI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Rotr_RRI
    }
}
impl crate::OperatorCode for crate::op::I64Rotr_RSR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Rotr_RSR
    }
}
impl crate::OperatorCode for crate::op::I64Rotr_RSS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Rotr_RSS
    }
}
impl crate::OperatorCode for crate::op::I64Rotr_RSI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Rotr_RSI
    }
}
impl crate::OperatorCode for crate::op::I64Rotr_RIR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Rotr_RIR
    }
}
impl crate::OperatorCode for crate::op::I64Rotr_RIS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Rotr_RIS
    }
}
impl crate::OperatorCode for crate::op::F32Sub_RRS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Sub_RRS
    }
}
impl crate::OperatorCode for crate::op::F32Sub_RRI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Sub_RRI
    }
}
impl crate::OperatorCode for crate::op::F32Sub_RSR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Sub_RSR
    }
}
impl crate::OperatorCode for crate::op::F32Sub_RSS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Sub_RSS
    }
}
impl crate::OperatorCode for crate::op::F32Sub_RSI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Sub_RSI
    }
}
impl crate::OperatorCode for crate::op::F32Sub_RIR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Sub_RIR
    }
}
impl crate::OperatorCode for crate::op::F32Sub_RIS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Sub_RIS
    }
}
impl crate::OperatorCode for crate::op::F64Sub_RRS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Sub_RRS
    }
}
impl crate::OperatorCode for crate::op::F64Sub_RRI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Sub_RRI
    }
}
impl crate::OperatorCode for crate::op::F64Sub_RSR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Sub_RSR
    }
}
impl crate::OperatorCode for crate::op::F64Sub_RSS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Sub_RSS
    }
}
impl crate::OperatorCode for crate::op::F64Sub_RSI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Sub_RSI
    }
}
impl crate::OperatorCode for crate::op::F64Sub_RIR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Sub_RIR
    }
}
impl crate::OperatorCode for crate::op::F64Sub_RIS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Sub_RIS
    }
}
impl crate::OperatorCode for crate::op::F32Div_RRS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Div_RRS
    }
}
impl crate::OperatorCode for crate::op::F32Div_RRI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Div_RRI
    }
}
impl crate::OperatorCode for crate::op::F32Div_RSR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Div_RSR
    }
}
impl crate::OperatorCode for crate::op::F32Div_RSS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Div_RSS
    }
}
impl crate::OperatorCode for crate::op::F32Div_RSI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Div_RSI
    }
}
impl crate::OperatorCode for crate::op::F32Div_RIR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Div_RIR
    }
}
impl crate::OperatorCode for crate::op::F32Div_RIS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Div_RIS
    }
}
impl crate::OperatorCode for crate::op::F64Div_RRS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Div_RRS
    }
}
impl crate::OperatorCode for crate::op::F64Div_RRI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Div_RRI
    }
}
impl crate::OperatorCode for crate::op::F64Div_RSR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Div_RSR
    }
}
impl crate::OperatorCode for crate::op::F64Div_RSS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Div_RSS
    }
}
impl crate::OperatorCode for crate::op::F64Div_RSI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Div_RSI
    }
}
impl crate::OperatorCode for crate::op::F64Div_RIR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Div_RIR
    }
}
impl crate::OperatorCode for crate::op::F64Div_RIS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Div_RIS
    }
}
impl crate::OperatorCode for crate::op::F32Copysign_RRS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Copysign_RRS
    }
}
impl crate::OperatorCode for crate::op::F32Copysign_RRI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Copysign_RRI
    }
}
impl crate::OperatorCode for crate::op::F32Copysign_RSR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Copysign_RSR
    }
}
impl crate::OperatorCode for crate::op::F32Copysign_RSS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Copysign_RSS
    }
}
impl crate::OperatorCode for crate::op::F32Copysign_RSI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Copysign_RSI
    }
}
impl crate::OperatorCode for crate::op::F32Copysign_RIR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Copysign_RIR
    }
}
impl crate::OperatorCode for crate::op::F32Copysign_RIS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Copysign_RIS
    }
}
impl crate::OperatorCode for crate::op::F64Copysign_RRS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Copysign_RRS
    }
}
impl crate::OperatorCode for crate::op::F64Copysign_RRI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Copysign_RRI
    }
}
impl crate::OperatorCode for crate::op::F64Copysign_RSR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Copysign_RSR
    }
}
impl crate::OperatorCode for crate::op::F64Copysign_RSS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Copysign_RSS
    }
}
impl crate::OperatorCode for crate::op::F64Copysign_RSI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Copysign_RSI
    }
}
impl crate::OperatorCode for crate::op::F64Copysign_RIR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Copysign_RIR
    }
}
impl crate::OperatorCode for crate::op::F64Copysign_RIS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Copysign_RIS
    }
}
impl crate::OperatorCode for crate::op::I32Load_RR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Load_RR
    }
}
impl crate::OperatorCode for crate::op::I32Load_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Load_RS
    }
}
impl crate::OperatorCode for crate::op::I32Load_RI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Load_RI
    }
}
impl crate::OperatorCode for crate::op::I32LoadMem0_RR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32LoadMem0_RR
    }
}
impl crate::OperatorCode for crate::op::I32LoadMem0_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32LoadMem0_RS
    }
}
impl crate::OperatorCode for crate::op::I32LoadMem0_RI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32LoadMem0_RI
    }
}
impl crate::OperatorCode for crate::op::I32LoadMem0_SR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32LoadMem0_SR
    }
}
impl crate::OperatorCode for crate::op::I32LoadMem0_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32LoadMem0_SS
    }
}
impl crate::OperatorCode for crate::op::I32LoadMem0_SI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32LoadMem0_SI
    }
}
impl crate::OperatorCode for crate::op::I64Load_RR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Load_RR
    }
}
impl crate::OperatorCode for crate::op::I64Load_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Load_RS
    }
}
impl crate::OperatorCode for crate::op::I64Load_RI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Load_RI
    }
}
impl crate::OperatorCode for crate::op::I64LoadMem0_RR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64LoadMem0_RR
    }
}
impl crate::OperatorCode for crate::op::I64LoadMem0_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64LoadMem0_RS
    }
}
impl crate::OperatorCode for crate::op::I64LoadMem0_RI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64LoadMem0_RI
    }
}
impl crate::OperatorCode for crate::op::I64LoadMem0_SR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64LoadMem0_SR
    }
}
impl crate::OperatorCode for crate::op::I64LoadMem0_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64LoadMem0_SS
    }
}
impl crate::OperatorCode for crate::op::I64LoadMem0_SI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64LoadMem0_SI
    }
}
impl crate::OperatorCode for crate::op::F32Load_RR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Load_RR
    }
}
impl crate::OperatorCode for crate::op::F32Load_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Load_RS
    }
}
impl crate::OperatorCode for crate::op::F32Load_RI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Load_RI
    }
}
impl crate::OperatorCode for crate::op::F32LoadMem0_RR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32LoadMem0_RR
    }
}
impl crate::OperatorCode for crate::op::F32LoadMem0_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32LoadMem0_RS
    }
}
impl crate::OperatorCode for crate::op::F32LoadMem0_RI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32LoadMem0_RI
    }
}
impl crate::OperatorCode for crate::op::F32LoadMem0_SR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32LoadMem0_SR
    }
}
impl crate::OperatorCode for crate::op::F32LoadMem0_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32LoadMem0_SS
    }
}
impl crate::OperatorCode for crate::op::F32LoadMem0_SI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32LoadMem0_SI
    }
}
impl crate::OperatorCode for crate::op::F64Load_RR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Load_RR
    }
}
impl crate::OperatorCode for crate::op::F64Load_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Load_RS
    }
}
impl crate::OperatorCode for crate::op::F64Load_RI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Load_RI
    }
}
impl crate::OperatorCode for crate::op::F64LoadMem0_RR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64LoadMem0_RR
    }
}
impl crate::OperatorCode for crate::op::F64LoadMem0_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64LoadMem0_RS
    }
}
impl crate::OperatorCode for crate::op::F64LoadMem0_RI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64LoadMem0_RI
    }
}
impl crate::OperatorCode for crate::op::F64LoadMem0_SR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64LoadMem0_SR
    }
}
impl crate::OperatorCode for crate::op::F64LoadMem0_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64LoadMem0_SS
    }
}
impl crate::OperatorCode for crate::op::F64LoadMem0_SI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64LoadMem0_SI
    }
}
impl crate::OperatorCode for crate::op::I32Load8S_RR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Load8S_RR
    }
}
impl crate::OperatorCode for crate::op::I32Load8S_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Load8S_RS
    }
}
impl crate::OperatorCode for crate::op::I32Load8S_RI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Load8S_RI
    }
}
impl crate::OperatorCode for crate::op::I32Load8SMem0_RR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Load8SMem0_RR
    }
}
impl crate::OperatorCode for crate::op::I32Load8SMem0_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Load8SMem0_RS
    }
}
impl crate::OperatorCode for crate::op::I32Load8SMem0_RI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Load8SMem0_RI
    }
}
impl crate::OperatorCode for crate::op::I32Load8SMem0_SR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Load8SMem0_SR
    }
}
impl crate::OperatorCode for crate::op::I32Load8SMem0_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Load8SMem0_SS
    }
}
impl crate::OperatorCode for crate::op::I32Load8SMem0_SI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Load8SMem0_SI
    }
}
impl crate::OperatorCode for crate::op::I64Load8S_RR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Load8S_RR
    }
}
impl crate::OperatorCode for crate::op::I64Load8S_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Load8S_RS
    }
}
impl crate::OperatorCode for crate::op::I64Load8S_RI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Load8S_RI
    }
}
impl crate::OperatorCode for crate::op::I64Load8SMem0_RR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Load8SMem0_RR
    }
}
impl crate::OperatorCode for crate::op::I64Load8SMem0_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Load8SMem0_RS
    }
}
impl crate::OperatorCode for crate::op::I64Load8SMem0_RI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Load8SMem0_RI
    }
}
impl crate::OperatorCode for crate::op::I64Load8SMem0_SR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Load8SMem0_SR
    }
}
impl crate::OperatorCode for crate::op::I64Load8SMem0_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Load8SMem0_SS
    }
}
impl crate::OperatorCode for crate::op::I64Load8SMem0_SI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Load8SMem0_SI
    }
}
impl crate::OperatorCode for crate::op::I32Load8U_RR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Load8U_RR
    }
}
impl crate::OperatorCode for crate::op::I32Load8U_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Load8U_RS
    }
}
impl crate::OperatorCode for crate::op::I32Load8U_RI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Load8U_RI
    }
}
impl crate::OperatorCode for crate::op::I32Load8UMem0_RR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Load8UMem0_RR
    }
}
impl crate::OperatorCode for crate::op::I32Load8UMem0_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Load8UMem0_RS
    }
}
impl crate::OperatorCode for crate::op::I32Load8UMem0_RI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Load8UMem0_RI
    }
}
impl crate::OperatorCode for crate::op::I32Load8UMem0_SR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Load8UMem0_SR
    }
}
impl crate::OperatorCode for crate::op::I32Load8UMem0_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Load8UMem0_SS
    }
}
impl crate::OperatorCode for crate::op::I32Load8UMem0_SI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Load8UMem0_SI
    }
}
impl crate::OperatorCode for crate::op::I64Load8U_RR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Load8U_RR
    }
}
impl crate::OperatorCode for crate::op::I64Load8U_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Load8U_RS
    }
}
impl crate::OperatorCode for crate::op::I64Load8U_RI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Load8U_RI
    }
}
impl crate::OperatorCode for crate::op::I64Load8UMem0_RR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Load8UMem0_RR
    }
}
impl crate::OperatorCode for crate::op::I64Load8UMem0_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Load8UMem0_RS
    }
}
impl crate::OperatorCode for crate::op::I64Load8UMem0_RI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Load8UMem0_RI
    }
}
impl crate::OperatorCode for crate::op::I64Load8UMem0_SR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Load8UMem0_SR
    }
}
impl crate::OperatorCode for crate::op::I64Load8UMem0_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Load8UMem0_SS
    }
}
impl crate::OperatorCode for crate::op::I64Load8UMem0_SI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Load8UMem0_SI
    }
}
impl crate::OperatorCode for crate::op::I32Load16S_RR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Load16S_RR
    }
}
impl crate::OperatorCode for crate::op::I32Load16S_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Load16S_RS
    }
}
impl crate::OperatorCode for crate::op::I32Load16S_RI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Load16S_RI
    }
}
impl crate::OperatorCode for crate::op::I32Load16SMem0_RR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Load16SMem0_RR
    }
}
impl crate::OperatorCode for crate::op::I32Load16SMem0_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Load16SMem0_RS
    }
}
impl crate::OperatorCode for crate::op::I32Load16SMem0_RI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Load16SMem0_RI
    }
}
impl crate::OperatorCode for crate::op::I32Load16SMem0_SR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Load16SMem0_SR
    }
}
impl crate::OperatorCode for crate::op::I32Load16SMem0_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Load16SMem0_SS
    }
}
impl crate::OperatorCode for crate::op::I32Load16SMem0_SI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Load16SMem0_SI
    }
}
impl crate::OperatorCode for crate::op::I64Load16S_RR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Load16S_RR
    }
}
impl crate::OperatorCode for crate::op::I64Load16S_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Load16S_RS
    }
}
impl crate::OperatorCode for crate::op::I64Load16S_RI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Load16S_RI
    }
}
impl crate::OperatorCode for crate::op::I64Load16SMem0_RR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Load16SMem0_RR
    }
}
impl crate::OperatorCode for crate::op::I64Load16SMem0_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Load16SMem0_RS
    }
}
impl crate::OperatorCode for crate::op::I64Load16SMem0_RI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Load16SMem0_RI
    }
}
impl crate::OperatorCode for crate::op::I64Load16SMem0_SR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Load16SMem0_SR
    }
}
impl crate::OperatorCode for crate::op::I64Load16SMem0_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Load16SMem0_SS
    }
}
impl crate::OperatorCode for crate::op::I64Load16SMem0_SI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Load16SMem0_SI
    }
}
impl crate::OperatorCode for crate::op::I32Load16U_RR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Load16U_RR
    }
}
impl crate::OperatorCode for crate::op::I32Load16U_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Load16U_RS
    }
}
impl crate::OperatorCode for crate::op::I32Load16U_RI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Load16U_RI
    }
}
impl crate::OperatorCode for crate::op::I32Load16UMem0_RR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Load16UMem0_RR
    }
}
impl crate::OperatorCode for crate::op::I32Load16UMem0_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Load16UMem0_RS
    }
}
impl crate::OperatorCode for crate::op::I32Load16UMem0_RI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Load16UMem0_RI
    }
}
impl crate::OperatorCode for crate::op::I32Load16UMem0_SR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Load16UMem0_SR
    }
}
impl crate::OperatorCode for crate::op::I32Load16UMem0_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Load16UMem0_SS
    }
}
impl crate::OperatorCode for crate::op::I32Load16UMem0_SI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Load16UMem0_SI
    }
}
impl crate::OperatorCode for crate::op::I64Load16U_RR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Load16U_RR
    }
}
impl crate::OperatorCode for crate::op::I64Load16U_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Load16U_RS
    }
}
impl crate::OperatorCode for crate::op::I64Load16U_RI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Load16U_RI
    }
}
impl crate::OperatorCode for crate::op::I64Load16UMem0_RR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Load16UMem0_RR
    }
}
impl crate::OperatorCode for crate::op::I64Load16UMem0_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Load16UMem0_RS
    }
}
impl crate::OperatorCode for crate::op::I64Load16UMem0_RI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Load16UMem0_RI
    }
}
impl crate::OperatorCode for crate::op::I64Load16UMem0_SR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Load16UMem0_SR
    }
}
impl crate::OperatorCode for crate::op::I64Load16UMem0_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Load16UMem0_SS
    }
}
impl crate::OperatorCode for crate::op::I64Load16UMem0_SI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Load16UMem0_SI
    }
}
impl crate::OperatorCode for crate::op::I64Load32S_RR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Load32S_RR
    }
}
impl crate::OperatorCode for crate::op::I64Load32S_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Load32S_RS
    }
}
impl crate::OperatorCode for crate::op::I64Load32S_RI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Load32S_RI
    }
}
impl crate::OperatorCode for crate::op::I64Load32SMem0_RR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Load32SMem0_RR
    }
}
impl crate::OperatorCode for crate::op::I64Load32SMem0_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Load32SMem0_RS
    }
}
impl crate::OperatorCode for crate::op::I64Load32SMem0_RI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Load32SMem0_RI
    }
}
impl crate::OperatorCode for crate::op::I64Load32SMem0_SR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Load32SMem0_SR
    }
}
impl crate::OperatorCode for crate::op::I64Load32SMem0_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Load32SMem0_SS
    }
}
impl crate::OperatorCode for crate::op::I64Load32SMem0_SI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Load32SMem0_SI
    }
}
impl crate::OperatorCode for crate::op::I64Load32U_RR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Load32U_RR
    }
}
impl crate::OperatorCode for crate::op::I64Load32U_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Load32U_RS
    }
}
impl crate::OperatorCode for crate::op::I64Load32U_RI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Load32U_RI
    }
}
impl crate::OperatorCode for crate::op::I64Load32UMem0_RR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Load32UMem0_RR
    }
}
impl crate::OperatorCode for crate::op::I64Load32UMem0_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Load32UMem0_RS
    }
}
impl crate::OperatorCode for crate::op::I64Load32UMem0_RI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Load32UMem0_RI
    }
}
impl crate::OperatorCode for crate::op::I64Load32UMem0_SR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Load32UMem0_SR
    }
}
impl crate::OperatorCode for crate::op::I64Load32UMem0_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Load32UMem0_SS
    }
}
impl crate::OperatorCode for crate::op::I64Load32UMem0_SI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Load32UMem0_SI
    }
}
impl crate::OperatorCode for crate::op::I32Store_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Store_SS
    }
}
impl crate::OperatorCode for crate::op::I32Store_SI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Store_SI
    }
}
impl crate::OperatorCode for crate::op::I32Store_IS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Store_IS
    }
}
impl crate::OperatorCode for crate::op::I32Store_II {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Store_II
    }
}
impl crate::OperatorCode for crate::op::I32StoreMem0_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32StoreMem0_RS
    }
}
impl crate::OperatorCode for crate::op::I32StoreMem0_RI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32StoreMem0_RI
    }
}
impl crate::OperatorCode for crate::op::I32StoreMem0_SR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32StoreMem0_SR
    }
}
impl crate::OperatorCode for crate::op::I32StoreMem0_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32StoreMem0_SS
    }
}
impl crate::OperatorCode for crate::op::I32StoreMem0_SI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32StoreMem0_SI
    }
}
impl crate::OperatorCode for crate::op::I32StoreMem0_IR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32StoreMem0_IR
    }
}
impl crate::OperatorCode for crate::op::I32StoreMem0_IS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32StoreMem0_IS
    }
}
impl crate::OperatorCode for crate::op::I32StoreMem0_II {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32StoreMem0_II
    }
}
impl crate::OperatorCode for crate::op::I64Store_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Store_SS
    }
}
impl crate::OperatorCode for crate::op::I64Store_SI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Store_SI
    }
}
impl crate::OperatorCode for crate::op::I64Store_IS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Store_IS
    }
}
impl crate::OperatorCode for crate::op::I64Store_II {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Store_II
    }
}
impl crate::OperatorCode for crate::op::I64StoreMem0_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64StoreMem0_RS
    }
}
impl crate::OperatorCode for crate::op::I64StoreMem0_RI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64StoreMem0_RI
    }
}
impl crate::OperatorCode for crate::op::I64StoreMem0_SR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64StoreMem0_SR
    }
}
impl crate::OperatorCode for crate::op::I64StoreMem0_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64StoreMem0_SS
    }
}
impl crate::OperatorCode for crate::op::I64StoreMem0_SI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64StoreMem0_SI
    }
}
impl crate::OperatorCode for crate::op::I64StoreMem0_IR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64StoreMem0_IR
    }
}
impl crate::OperatorCode for crate::op::I64StoreMem0_IS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64StoreMem0_IS
    }
}
impl crate::OperatorCode for crate::op::I64StoreMem0_II {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64StoreMem0_II
    }
}
impl crate::OperatorCode for crate::op::F32Store_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Store_SS
    }
}
impl crate::OperatorCode for crate::op::F32Store_SI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Store_SI
    }
}
impl crate::OperatorCode for crate::op::F32Store_IS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Store_IS
    }
}
impl crate::OperatorCode for crate::op::F32Store_II {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32Store_II
    }
}
impl crate::OperatorCode for crate::op::F32StoreMem0_RR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32StoreMem0_RR
    }
}
impl crate::OperatorCode for crate::op::F32StoreMem0_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32StoreMem0_RS
    }
}
impl crate::OperatorCode for crate::op::F32StoreMem0_RI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32StoreMem0_RI
    }
}
impl crate::OperatorCode for crate::op::F32StoreMem0_SR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32StoreMem0_SR
    }
}
impl crate::OperatorCode for crate::op::F32StoreMem0_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32StoreMem0_SS
    }
}
impl crate::OperatorCode for crate::op::F32StoreMem0_SI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32StoreMem0_SI
    }
}
impl crate::OperatorCode for crate::op::F32StoreMem0_IR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32StoreMem0_IR
    }
}
impl crate::OperatorCode for crate::op::F32StoreMem0_IS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32StoreMem0_IS
    }
}
impl crate::OperatorCode for crate::op::F32StoreMem0_II {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F32StoreMem0_II
    }
}
impl crate::OperatorCode for crate::op::F64Store_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Store_SS
    }
}
impl crate::OperatorCode for crate::op::F64Store_SI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Store_SI
    }
}
impl crate::OperatorCode for crate::op::F64Store_IS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Store_IS
    }
}
impl crate::OperatorCode for crate::op::F64Store_II {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64Store_II
    }
}
impl crate::OperatorCode for crate::op::F64StoreMem0_RR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64StoreMem0_RR
    }
}
impl crate::OperatorCode for crate::op::F64StoreMem0_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64StoreMem0_RS
    }
}
impl crate::OperatorCode for crate::op::F64StoreMem0_RI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64StoreMem0_RI
    }
}
impl crate::OperatorCode for crate::op::F64StoreMem0_SR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64StoreMem0_SR
    }
}
impl crate::OperatorCode for crate::op::F64StoreMem0_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64StoreMem0_SS
    }
}
impl crate::OperatorCode for crate::op::F64StoreMem0_SI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64StoreMem0_SI
    }
}
impl crate::OperatorCode for crate::op::F64StoreMem0_IR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64StoreMem0_IR
    }
}
impl crate::OperatorCode for crate::op::F64StoreMem0_IS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64StoreMem0_IS
    }
}
impl crate::OperatorCode for crate::op::F64StoreMem0_II {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::F64StoreMem0_II
    }
}
impl crate::OperatorCode for crate::op::I32Store8_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Store8_SS
    }
}
impl crate::OperatorCode for crate::op::I32Store8_SI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Store8_SI
    }
}
impl crate::OperatorCode for crate::op::I32Store8_IS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Store8_IS
    }
}
impl crate::OperatorCode for crate::op::I32Store8_II {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Store8_II
    }
}
impl crate::OperatorCode for crate::op::I32Store8Mem0_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Store8Mem0_RS
    }
}
impl crate::OperatorCode for crate::op::I32Store8Mem0_RI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Store8Mem0_RI
    }
}
impl crate::OperatorCode for crate::op::I32Store8Mem0_SR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Store8Mem0_SR
    }
}
impl crate::OperatorCode for crate::op::I32Store8Mem0_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Store8Mem0_SS
    }
}
impl crate::OperatorCode for crate::op::I32Store8Mem0_SI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Store8Mem0_SI
    }
}
impl crate::OperatorCode for crate::op::I32Store8Mem0_IR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Store8Mem0_IR
    }
}
impl crate::OperatorCode for crate::op::I32Store8Mem0_IS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Store8Mem0_IS
    }
}
impl crate::OperatorCode for crate::op::I32Store8Mem0_II {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Store8Mem0_II
    }
}
impl crate::OperatorCode for crate::op::I64Store8_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Store8_SS
    }
}
impl crate::OperatorCode for crate::op::I64Store8_SI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Store8_SI
    }
}
impl crate::OperatorCode for crate::op::I64Store8_IS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Store8_IS
    }
}
impl crate::OperatorCode for crate::op::I64Store8_II {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Store8_II
    }
}
impl crate::OperatorCode for crate::op::I64Store8Mem0_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Store8Mem0_RS
    }
}
impl crate::OperatorCode for crate::op::I64Store8Mem0_RI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Store8Mem0_RI
    }
}
impl crate::OperatorCode for crate::op::I64Store8Mem0_SR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Store8Mem0_SR
    }
}
impl crate::OperatorCode for crate::op::I64Store8Mem0_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Store8Mem0_SS
    }
}
impl crate::OperatorCode for crate::op::I64Store8Mem0_SI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Store8Mem0_SI
    }
}
impl crate::OperatorCode for crate::op::I64Store8Mem0_IR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Store8Mem0_IR
    }
}
impl crate::OperatorCode for crate::op::I64Store8Mem0_IS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Store8Mem0_IS
    }
}
impl crate::OperatorCode for crate::op::I64Store8Mem0_II {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Store8Mem0_II
    }
}
impl crate::OperatorCode for crate::op::I32Store16_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Store16_SS
    }
}
impl crate::OperatorCode for crate::op::I32Store16_SI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Store16_SI
    }
}
impl crate::OperatorCode for crate::op::I32Store16_IS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Store16_IS
    }
}
impl crate::OperatorCode for crate::op::I32Store16_II {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Store16_II
    }
}
impl crate::OperatorCode for crate::op::I32Store16Mem0_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Store16Mem0_RS
    }
}
impl crate::OperatorCode for crate::op::I32Store16Mem0_RI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Store16Mem0_RI
    }
}
impl crate::OperatorCode for crate::op::I32Store16Mem0_SR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Store16Mem0_SR
    }
}
impl crate::OperatorCode for crate::op::I32Store16Mem0_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Store16Mem0_SS
    }
}
impl crate::OperatorCode for crate::op::I32Store16Mem0_SI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Store16Mem0_SI
    }
}
impl crate::OperatorCode for crate::op::I32Store16Mem0_IR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Store16Mem0_IR
    }
}
impl crate::OperatorCode for crate::op::I32Store16Mem0_IS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Store16Mem0_IS
    }
}
impl crate::OperatorCode for crate::op::I32Store16Mem0_II {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I32Store16Mem0_II
    }
}
impl crate::OperatorCode for crate::op::I64Store16_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Store16_SS
    }
}
impl crate::OperatorCode for crate::op::I64Store16_SI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Store16_SI
    }
}
impl crate::OperatorCode for crate::op::I64Store16_IS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Store16_IS
    }
}
impl crate::OperatorCode for crate::op::I64Store16_II {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Store16_II
    }
}
impl crate::OperatorCode for crate::op::I64Store16Mem0_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Store16Mem0_RS
    }
}
impl crate::OperatorCode for crate::op::I64Store16Mem0_RI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Store16Mem0_RI
    }
}
impl crate::OperatorCode for crate::op::I64Store16Mem0_SR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Store16Mem0_SR
    }
}
impl crate::OperatorCode for crate::op::I64Store16Mem0_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Store16Mem0_SS
    }
}
impl crate::OperatorCode for crate::op::I64Store16Mem0_SI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Store16Mem0_SI
    }
}
impl crate::OperatorCode for crate::op::I64Store16Mem0_IR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Store16Mem0_IR
    }
}
impl crate::OperatorCode for crate::op::I64Store16Mem0_IS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Store16Mem0_IS
    }
}
impl crate::OperatorCode for crate::op::I64Store16Mem0_II {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Store16Mem0_II
    }
}
impl crate::OperatorCode for crate::op::I64Store32_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Store32_SS
    }
}
impl crate::OperatorCode for crate::op::I64Store32_SI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Store32_SI
    }
}
impl crate::OperatorCode for crate::op::I64Store32_IS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Store32_IS
    }
}
impl crate::OperatorCode for crate::op::I64Store32_II {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Store32_II
    }
}
impl crate::OperatorCode for crate::op::I64Store32Mem0_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Store32Mem0_RS
    }
}
impl crate::OperatorCode for crate::op::I64Store32Mem0_RI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Store32Mem0_RI
    }
}
impl crate::OperatorCode for crate::op::I64Store32Mem0_SR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Store32Mem0_SR
    }
}
impl crate::OperatorCode for crate::op::I64Store32Mem0_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Store32Mem0_SS
    }
}
impl crate::OperatorCode for crate::op::I64Store32Mem0_SI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Store32Mem0_SI
    }
}
impl crate::OperatorCode for crate::op::I64Store32Mem0_IR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Store32Mem0_IR
    }
}
impl crate::OperatorCode for crate::op::I64Store32Mem0_IS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Store32Mem0_IS
    }
}
impl crate::OperatorCode for crate::op::I64Store32Mem0_II {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::I64Store32Mem0_II
    }
}
impl crate::OperatorCode for crate::op::Select {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::Select
    }
}
impl crate::OperatorCode for crate::op::SelectI32_RSSS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::SelectI32_RSSS
    }
}
impl crate::OperatorCode for crate::op::SelectI32_RSSI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::SelectI32_RSSI
    }
}
impl crate::OperatorCode for crate::op::SelectI32_RSIS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::SelectI32_RSIS
    }
}
impl crate::OperatorCode for crate::op::SelectI32_RSII {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::SelectI32_RSII
    }
}
impl crate::OperatorCode for crate::op::SelectI64_RRSS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::SelectI64_RRSS
    }
}
impl crate::OperatorCode for crate::op::SelectI64_RRSI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::SelectI64_RRSI
    }
}
impl crate::OperatorCode for crate::op::SelectI64_RRIS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::SelectI64_RRIS
    }
}
impl crate::OperatorCode for crate::op::SelectI64_RRII {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::SelectI64_RRII
    }
}
impl crate::OperatorCode for crate::op::SelectI64_RSRS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::SelectI64_RSRS
    }
}
impl crate::OperatorCode for crate::op::SelectI64_RSRI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::SelectI64_RSRI
    }
}
impl crate::OperatorCode for crate::op::SelectI64_RSSR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::SelectI64_RSSR
    }
}
impl crate::OperatorCode for crate::op::SelectI64_RSSS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::SelectI64_RSSS
    }
}
impl crate::OperatorCode for crate::op::SelectI64_RSSI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::SelectI64_RSSI
    }
}
impl crate::OperatorCode for crate::op::SelectI64_RSIR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::SelectI64_RSIR
    }
}
impl crate::OperatorCode for crate::op::SelectI64_RSIS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::SelectI64_RSIS
    }
}
impl crate::OperatorCode for crate::op::SelectI64_RSII {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::SelectI64_RSII
    }
}
impl crate::OperatorCode for crate::op::SelectF32_RRSS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::SelectF32_RRSS
    }
}
impl crate::OperatorCode for crate::op::SelectF32_RRSI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::SelectF32_RRSI
    }
}
impl crate::OperatorCode for crate::op::SelectF32_RRIS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::SelectF32_RRIS
    }
}
impl crate::OperatorCode for crate::op::SelectF32_RRII {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::SelectF32_RRII
    }
}
impl crate::OperatorCode for crate::op::SelectF32_RSRS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::SelectF32_RSRS
    }
}
impl crate::OperatorCode for crate::op::SelectF32_RSRI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::SelectF32_RSRI
    }
}
impl crate::OperatorCode for crate::op::SelectF32_RSSR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::SelectF32_RSSR
    }
}
impl crate::OperatorCode for crate::op::SelectF32_RSSS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::SelectF32_RSSS
    }
}
impl crate::OperatorCode for crate::op::SelectF32_RSSI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::SelectF32_RSSI
    }
}
impl crate::OperatorCode for crate::op::SelectF32_RSIR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::SelectF32_RSIR
    }
}
impl crate::OperatorCode for crate::op::SelectF32_RSIS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::SelectF32_RSIS
    }
}
impl crate::OperatorCode for crate::op::SelectF32_RSII {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::SelectF32_RSII
    }
}
impl crate::OperatorCode for crate::op::SelectF64_RRSS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::SelectF64_RRSS
    }
}
impl crate::OperatorCode for crate::op::SelectF64_RRSI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::SelectF64_RRSI
    }
}
impl crate::OperatorCode for crate::op::SelectF64_RRIS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::SelectF64_RRIS
    }
}
impl crate::OperatorCode for crate::op::SelectF64_RRII {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::SelectF64_RRII
    }
}
impl crate::OperatorCode for crate::op::SelectF64_RSRS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::SelectF64_RSRS
    }
}
impl crate::OperatorCode for crate::op::SelectF64_RSRI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::SelectF64_RSRI
    }
}
impl crate::OperatorCode for crate::op::SelectF64_RSSR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::SelectF64_RSSR
    }
}
impl crate::OperatorCode for crate::op::SelectF64_RSSS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::SelectF64_RSSS
    }
}
impl crate::OperatorCode for crate::op::SelectF64_RSSI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::SelectF64_RSSI
    }
}
impl crate::OperatorCode for crate::op::SelectF64_RSIR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::SelectF64_RSIR
    }
}
impl crate::OperatorCode for crate::op::SelectF64_RSIS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::SelectF64_RSIS
    }
}
impl crate::OperatorCode for crate::op::SelectF64_RSII {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::SelectF64_RSII
    }
}
impl crate::OperatorCode for crate::op::TableSize_R {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::TableSize_R
    }
}
impl crate::OperatorCode for crate::op::TableSize_S {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::TableSize_S
    }
}
impl crate::OperatorCode for crate::op::TableGet_RR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::TableGet_RR
    }
}
impl crate::OperatorCode for crate::op::TableGet_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::TableGet_RS
    }
}
impl crate::OperatorCode for crate::op::TableGet_RI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::TableGet_RI
    }
}
impl crate::OperatorCode for crate::op::TableSet_RS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::TableSet_RS
    }
}
impl crate::OperatorCode for crate::op::TableSet_RI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::TableSet_RI
    }
}
impl crate::OperatorCode for crate::op::TableSet_SR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::TableSet_SR
    }
}
impl crate::OperatorCode for crate::op::TableSet_SS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::TableSet_SS
    }
}
impl crate::OperatorCode for crate::op::TableSet_SI {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::TableSet_SI
    }
}
impl crate::OperatorCode for crate::op::TableSet_IR {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::TableSet_IR
    }
}
impl crate::OperatorCode for crate::op::TableSet_IS {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::TableSet_IS
    }
}
impl crate::OperatorCode for crate::op::TableSet_II {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::TableSet_II
    }
}
impl crate::OperatorCode for crate::op::TableGrow {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::TableGrow
    }
}
impl crate::OperatorCode for crate::op::TableCopy {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::TableCopy
    }
}
impl crate::OperatorCode for crate::op::TableFill {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::TableFill
    }
}
impl crate::OperatorCode for crate::op::TableInit {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::TableInit
    }
}
impl crate::OperatorCode for crate::op::MemorySize_R {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::MemorySize_R
    }
}
impl crate::OperatorCode for crate::op::MemorySize_S {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::MemorySize_S
    }
}
impl crate::OperatorCode for crate::op::MemoryGrow {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::MemoryGrow
    }
}
impl crate::OperatorCode for crate::op::MemoryCopy {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::MemoryCopy
    }
}
impl crate::OperatorCode for crate::op::MemoryFill {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::MemoryFill
    }
}
impl crate::OperatorCode for crate::op::MemoryInit {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::MemoryInit
    }
}
impl crate::OperatorCode for crate::op::CallInternal {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::CallInternal
    }
}
impl crate::OperatorCode for crate::op::ReturnCallInternal {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::ReturnCallInternal
    }
}
impl crate::OperatorCode for crate::op::CallImported {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::CallImported
    }
}
impl crate::OperatorCode for crate::op::ReturnCallImported {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::ReturnCallImported
    }
}
impl crate::OperatorCode for crate::op::CallIndirect_R {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::CallIndirect_R
    }
}
impl crate::OperatorCode for crate::op::CallIndirect_S {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::CallIndirect_S
    }
}
impl crate::OperatorCode for crate::op::CallIndirect_I {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::CallIndirect_I
    }
}
impl crate::OperatorCode for crate::op::ReturnCallIndirect_R {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::ReturnCallIndirect_R
    }
}
impl crate::OperatorCode for crate::op::ReturnCallIndirect_S {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::ReturnCallIndirect_S
    }
}
impl crate::OperatorCode for crate::op::ReturnCallIndirect_I {
    fn op_code(&self) -> crate::OpCode {
        crate::OpCode::ReturnCallIndirect_I
    }
}
